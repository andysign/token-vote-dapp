{"id":"8d4ed84c541088b993be439a13a9a412","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (governance/utils/IVotes.sol)\npragma solidity ^0.8.0;\n\n/**\n * @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n *\n * _Available since v4.5._\n */\ninterface IVotes {\n    /**\n     * @dev Emitted when an account changes their delegate.\n     */\n    event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate);\n\n    /**\n     * @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\n     */\n    event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance);\n\n    /**\n     * @dev Returns the current amount of votes that `account` has.\n     */\n    function getVotes(address account) external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     */\n    function getPastVotes(address account, uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n     * configured to use block numbers, this will return the value at the end of the corresponding block.\n     *\n     * NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n     * Votes that have not been delegated are still part of total supply, even though they would not participate in a\n     * vote.\n     */\n    function getPastTotalSupply(uint256 timepoint) external view returns (uint256);\n\n    /**\n     * @dev Returns the delegate that `account` has chosen.\n     */\n    function delegates(address account) external view returns (address);\n\n    /**\n     * @dev Delegates votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) external;\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`.\n     */\n    function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s) external;\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC5805.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../governance/utils/IVotes.sol\";\nimport \"./IERC6372.sol\";\n\ninterface IERC5805 is IERC6372, IVotes {}\n"},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC6372.sol)\n\npragma solidity ^0.8.0;\n\ninterface IERC6372 {\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() external view returns (uint48);\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/draft-ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n// EIP-2612 is Final as of 2022-11-01. This file is deprecated.\n\nimport \"./ERC20Permit.sol\";\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Permit.sol\";\nimport \"../ERC20.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\nimport \"../../../utils/cryptography/EIP712.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC20Votes.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC20Permit.sol\";\nimport \"../../../interfaces/IERC5805.sol\";\nimport \"../../../utils/math/Math.sol\";\nimport \"../../../utils/math/SafeCast.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\n\n/**\n * @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n * and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n *\n * NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n *\n * This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n * by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n * power can be queried through the public accessors {getVotes} and {getPastVotes}.\n *\n * By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n * requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n *\n * _Available since v4.2._\n */\nabstract contract ERC20Votes is ERC20Permit, IERC5805 {\n    struct Checkpoint {\n        uint32 fromBlock;\n        uint224 votes;\n    }\n\n    bytes32 private constant _DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n\n    mapping(address => address) private _delegates;\n    mapping(address => Checkpoint[]) private _checkpoints;\n    Checkpoint[] private _totalSupplyCheckpoints;\n\n    /**\n     * @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\n     */\n    function clock() public view virtual override returns (uint48) {\n        return SafeCast.toUint48(block.number);\n    }\n\n    /**\n     * @dev Description of the clock\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function CLOCK_MODE() public view virtual override returns (string memory) {\n        // Check that the clock was not modified\n        require(clock() == block.number, \"ERC20Votes: broken clock mode\");\n        return \"mode=blocknumber&from=default\";\n    }\n\n    /**\n     * @dev Get the `pos`-th checkpoint for `account`.\n     */\n    function checkpoints(address account, uint32 pos) public view virtual returns (Checkpoint memory) {\n        return _checkpoints[account][pos];\n    }\n\n    /**\n     * @dev Get number of checkpoints for `account`.\n     */\n    function numCheckpoints(address account) public view virtual returns (uint32) {\n        return SafeCast.toUint32(_checkpoints[account].length);\n    }\n\n    /**\n     * @dev Get the address `account` is currently delegating to.\n     */\n    function delegates(address account) public view virtual override returns (address) {\n        return _delegates[account];\n    }\n\n    /**\n     * @dev Gets the current votes balance for `account`\n     */\n    function getVotes(address account) public view virtual override returns (uint256) {\n        uint256 pos = _checkpoints[account].length;\n        unchecked {\n            return pos == 0 ? 0 : _checkpoints[account][pos - 1].votes;\n        }\n    }\n\n    /**\n     * @dev Retrieve the number of votes for `account` at the end of `timepoint`.\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past\n     */\n    function getPastVotes(address account, uint256 timepoint) public view virtual override returns (uint256) {\n        require(timepoint < clock(), \"ERC20Votes: future lookup\");\n        return _checkpointsLookup(_checkpoints[account], timepoint);\n    }\n\n    /**\n     * @dev Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances.\n     * It is NOT the sum of all the delegated votes!\n     *\n     * Requirements:\n     *\n     * - `timepoint` must be in the past\n     */\n    function getPastTotalSupply(uint256 timepoint) public view virtual override returns (uint256) {\n        require(timepoint < clock(), \"ERC20Votes: future lookup\");\n        return _checkpointsLookup(_totalSupplyCheckpoints, timepoint);\n    }\n\n    /**\n     * @dev Lookup a value in a list of (sorted) checkpoints.\n     */\n    function _checkpointsLookup(Checkpoint[] storage ckpts, uint256 timepoint) private view returns (uint256) {\n        // We run a binary search to look for the last (most recent) checkpoint taken before (or at) `timepoint`.\n        //\n        // Initially we check if the block is recent to narrow the search range.\n        // During the loop, the index of the wanted checkpoint remains in the range [low-1, high).\n        // With each iteration, either `low` or `high` is moved towards the middle of the range to maintain the invariant.\n        // - If the middle checkpoint is after `timepoint`, we look in [low, mid)\n        // - If the middle checkpoint is before or equal to `timepoint`, we look in [mid+1, high)\n        // Once we reach a single value (when low == high), we've found the right checkpoint at the index high-1, if not\n        // out of bounds (in which case we're looking too far in the past and the result is 0).\n        // Note that if the latest checkpoint available is exactly for `timepoint`, we end up with an index that is\n        // past the end of the array, so we technically don't find a checkpoint after `timepoint`, but it works out\n        // the same.\n        uint256 length = ckpts.length;\n\n        uint256 low = 0;\n        uint256 high = length;\n\n        if (length > 5) {\n            uint256 mid = length - Math.sqrt(length);\n            if (_unsafeAccess(ckpts, mid).fromBlock > timepoint) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n            if (_unsafeAccess(ckpts, mid).fromBlock > timepoint) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        unchecked {\n            return high == 0 ? 0 : _unsafeAccess(ckpts, high - 1).votes;\n        }\n    }\n\n    /**\n     * @dev Delegate votes from the sender to `delegatee`.\n     */\n    function delegate(address delegatee) public virtual override {\n        _delegate(_msgSender(), delegatee);\n    }\n\n    /**\n     * @dev Delegates votes from signer to `delegatee`\n     */\n    function delegateBySig(\n        address delegatee,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= expiry, \"ERC20Votes: signature expired\");\n        address signer = ECDSA.recover(\n            _hashTypedDataV4(keccak256(abi.encode(_DELEGATION_TYPEHASH, delegatee, nonce, expiry))),\n            v,\n            r,\n            s\n        );\n        require(nonce == _useNonce(signer), \"ERC20Votes: invalid nonce\");\n        _delegate(signer, delegatee);\n    }\n\n    /**\n     * @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1).\n     */\n    function _maxSupply() internal view virtual returns (uint224) {\n        return type(uint224).max;\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been increased.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        super._mint(account, amount);\n        require(totalSupply() <= _maxSupply(), \"ERC20Votes: total supply risks overflowing votes\");\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _add, amount);\n    }\n\n    /**\n     * @dev Snapshots the totalSupply after it has been decreased.\n     */\n    function _burn(address account, uint256 amount) internal virtual override {\n        super._burn(account, amount);\n\n        _writeCheckpoint(_totalSupplyCheckpoints, _subtract, amount);\n    }\n\n    /**\n     * @dev Move voting power when tokens are transferred.\n     *\n     * Emits a {IVotes-DelegateVotesChanged} event.\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual override {\n        super._afterTokenTransfer(from, to, amount);\n\n        _moveVotingPower(delegates(from), delegates(to), amount);\n    }\n\n    /**\n     * @dev Change delegation for `delegator` to `delegatee`.\n     *\n     * Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}.\n     */\n    function _delegate(address delegator, address delegatee) internal virtual {\n        address currentDelegate = delegates(delegator);\n        uint256 delegatorBalance = balanceOf(delegator);\n        _delegates[delegator] = delegatee;\n\n        emit DelegateChanged(delegator, currentDelegate, delegatee);\n\n        _moveVotingPower(currentDelegate, delegatee, delegatorBalance);\n    }\n\n    function _moveVotingPower(address src, address dst, uint256 amount) private {\n        if (src != dst && amount > 0) {\n            if (src != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[src], _subtract, amount);\n                emit DelegateVotesChanged(src, oldWeight, newWeight);\n            }\n\n            if (dst != address(0)) {\n                (uint256 oldWeight, uint256 newWeight) = _writeCheckpoint(_checkpoints[dst], _add, amount);\n                emit DelegateVotesChanged(dst, oldWeight, newWeight);\n            }\n        }\n    }\n\n    function _writeCheckpoint(\n        Checkpoint[] storage ckpts,\n        function(uint256, uint256) view returns (uint256) op,\n        uint256 delta\n    ) private returns (uint256 oldWeight, uint256 newWeight) {\n        uint256 pos = ckpts.length;\n\n        unchecked {\n            Checkpoint memory oldCkpt = pos == 0 ? Checkpoint(0, 0) : _unsafeAccess(ckpts, pos - 1);\n\n            oldWeight = oldCkpt.votes;\n            newWeight = op(oldWeight, delta);\n\n            if (pos > 0 && oldCkpt.fromBlock == clock()) {\n                _unsafeAccess(ckpts, pos - 1).votes = SafeCast.toUint224(newWeight);\n            } else {\n                ckpts.push(Checkpoint({fromBlock: SafeCast.toUint32(clock()), votes: SafeCast.toUint224(newWeight)}));\n            }\n        }\n    }\n\n    function _add(uint256 a, uint256 b) private pure returns (uint256) {\n        return a + b;\n    }\n\n    function _subtract(uint256 a, uint256 b) private pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds.\n     */\n    function _unsafeAccess(Checkpoint[] storage ckpts, uint256 pos) private pure returns (Checkpoint storage result) {\n        assembly {\n            mstore(0, ckpts.slot)\n            result.slot := add(keccak256(0, 0x20), pos)\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 message) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n            mstore(0x1c, hash)\n            message := keccak256(0x00, 0x3c)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 data) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, \"\\x19\\x01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            data := keccak256(ptr, 0x42)\n        }\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Data with intended validator, created from a\n     * `validator` and `data` according to the version 0 of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x00\", validator, data));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./ECDSA.sol\";\nimport \"../ShortStrings.sol\";\nimport \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * _Available since v3.4._\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant _TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(_TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {EIP-5267}.\n     *\n     * _Available since v4.9._\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        override\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _name.toStringWithFallback(_nameFallback),\n            _version.toStringWithFallback(_versionFallback),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.8;\n\nimport \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant _FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(_FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != _FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/MyToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\nimport { ERC20 } from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport { AccessControl } from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport { ERC20Permit } from \"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\";\nimport { ERC20Votes } from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\";\n\ncontract MyToken is ERC20, AccessControl, ERC20Permit, ERC20Votes {\n  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n  constructor() ERC20(\"MyToken\", \"MTK\") ERC20Permit(\"MyToken\") {\n    _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    _grantRole(MINTER_ROLE, msg.sender);\n  }\n\n  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n    _mint(to, amount);\n  }\n\n  // The following functions are overrides required by Solidity.\n\n  function _afterTokenTransfer(address from, address to, uint256 amount)\n    internal\n    override(ERC20, ERC20Votes)\n  {\n    super._afterTokenTransfer(from, to, amount);\n  }\n\n  function _mint(address to, uint256 amount)\n    internal\n    override(ERC20, ERC20Votes)\n  {\n    super._mint(to, amount);\n  }\n\n  function _burn(address account, uint256 amount)\n    internal\n    override(ERC20, ERC20Votes)\n  {\n    super._burn(account, amount);\n  }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[2172],"ERC165":[3395],"IAccessControl":[388],"IERC165":[3407],"Math":[4273],"SignedMath":[5919],"Strings":[2801]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":389,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":2173,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":2802,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":3396,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nameLocations":["1967:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2172,"src":"1967:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1967:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nameLocations":["1976:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"1976:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1976:14:0"},{"baseName":{"id":11,"name":"ERC165","nameLocations":["1992:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":3395,"src":"1992:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1992:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,3395,3407,388,2172],"name":"AccessControl","nameLocation":"1950:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"2056:7:0","nodeType":"VariableDeclaration","scope":19,"src":"2031:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2031:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"2050:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"2081:9:0","nodeType":"VariableDeclaration","scope":19,"src":"2073:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2073:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2012:8:0","nodeType":"StructDefinition","scope":315,"src":"2005:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2140:6:0","nodeType":"VariableDeclaration","scope":315,"src":"2103:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2103:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nameLocations":["2122:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":19,"src":"2122:8:0"},"referencedDeclaration":19,"src":"2122:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2177:18:0","nodeType":"VariableDeclaration","scope":315,"src":"2153:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2198:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2621:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2642:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2631:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2631:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2631:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2657:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2209:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2598:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2615:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2606:14:0"},"src":"2589:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[3394],"body":{"id":59,"nodeType":"Block","src":"2823:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2840:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2860:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2855:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$388","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2876:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2855:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2840:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2915:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2891:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2897:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3394,"src":"2891:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2891:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2840:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2833:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2671:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2741:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2799:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2766:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2759:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2759:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2758:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2817:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2817:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2816:6:0"},"scope":315,"src":"2732:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[355],"body":{"id":78,"nodeType":"Block","src":"3113:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3130:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3137:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3143:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3130:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3151:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3130:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"3123:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2940:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"3030:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"3089:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"3046:4:0","nodeType":"VariableDeclaration","scope":79,"src":"3038:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3038:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"3060:7:0","nodeType":"VariableDeclaration","scope":79,"src":"3052:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"3052:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3037:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"3107:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"3107:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3106:6:0"},"scope":315,"src":"3021:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3516:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3537:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"3543:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3543:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3526:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3526:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3526:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3172:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3469:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3488:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3480:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3480:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3479:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3516:0:0"},"scope":315,"src":"3460:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3917:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3931:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3940:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3946:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3932:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3932:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3927:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3956:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4064:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4135:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"4115:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2801_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4123:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2775,"src":"4115:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4115:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4169:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4242:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4234:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4234:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4234:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4249:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"4214:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2801_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4222:11:0","memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2755,"src":"4214:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4022:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4026:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"4022:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4022:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3994:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3994:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3970:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3970:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3970:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3569:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3853:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3872:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3864:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3864:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3886:7:0","nodeType":"VariableDeclaration","scope":131,"src":"3878:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3878:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3863:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3917:0:0"},"scope":315,"src":"3844:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[363],"body":{"id":145,"nodeType":"Block","src":"4587:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4604:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4611:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4604:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4617:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4604:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4597:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4329:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4513:12:0","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4560:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4534:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4526:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4526:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4525:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"4578:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4578:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4577:9:0"},"scope":315,"src":"4504:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[371],"body":{"id":165,"nodeType":"Block","src":"5032:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5053:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"5059:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5042:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5042:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"5042:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4639:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"5025:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5012:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5012:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["5003:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5003:8:0"},"nodeType":"ModifierInvocation","src":"5003:28:0"}],"name":"grantRole","nameLocation":"4938:9:0","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4994:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4956:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4948:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4948:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"4970:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4962:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4962:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4947:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"5032:0:0"},"scope":315,"src":"4929:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[379],"body":{"id":185,"nodeType":"Block","src":"5458:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5480:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5486:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5468:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5468:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"5080:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5451:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5438:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5438:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyRole","nameLocations":["5429:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5429:8:0"},"nodeType":"ModifierInvocation","src":"5429:28:0"}],"name":"revokeRole","nameLocation":"5363:10:0","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5420:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5382:4:0","nodeType":"VariableDeclaration","scope":186,"src":"5374:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5374:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nameLocation":"5396:7:0","nodeType":"VariableDeclaration","scope":186,"src":"5388:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5373:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5458:0:0"},"scope":315,"src":"5354:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[387],"body":{"id":208,"nodeType":"Block","src":"6115:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"6144:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6144:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6133:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6158:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6125:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6125:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"6125:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6231:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6237:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6219:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6219:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6219:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5507:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"6047:12:0","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"6106:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nameLocation":"6068:4:0","nodeType":"VariableDeclaration","scope":209,"src":"6060:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6060:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nameLocation":"6082:7:0","nodeType":"VariableDeclaration","scope":209,"src":"6074:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"6074:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6059:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"6115:0:0"},"scope":315,"src":"6038:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"7005:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"7026:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7032:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"7015:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7015:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"7015:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6258:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6946:10:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6965:4:0","nodeType":"VariableDeclaration","scope":223,"src":"6957:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6957:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"6979:7:0","nodeType":"VariableDeclaration","scope":223,"src":"6971:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6971:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6956:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"7005:0:0"},"scope":315,"src":"6937:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7245:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7263:17:0","nodeType":"VariableDeclaration","scope":250,"src":"7255:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7255:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7296:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7283:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7283:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7255:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7311:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7318:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7311:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7324:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7311:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7336:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7311:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7311:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7377:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7383:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7402:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7360:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7360:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7355:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"7053:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7181:13:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nameLocation":"7203:4:0","nodeType":"VariableDeclaration","scope":251,"src":"7195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nameLocation":"7217:9:0","nodeType":"VariableDeclaration","scope":251,"src":"7209:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7209:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7194:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7245:0:0"},"scope":315,"src":"7172:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7655:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7669:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7678:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7684:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7670:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7670:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7665:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7694:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7708:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7715:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7708:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7721:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7708:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7729:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7708:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7740:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7708:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7708:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7775:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7781:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"7790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"7763:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7758:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7425:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7596:10:0","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nameLocation":"7615:4:0","nodeType":"VariableDeclaration","scope":283,"src":"7607:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7607:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nameLocation":"7629:7:0","nodeType":"VariableDeclaration","scope":283,"src":"7621:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7621:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7606:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7655:0:0"},"scope":315,"src":"7587:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"8060:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8082:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8088:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"8074:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8074:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"8070:149:0","trueBody":{"id":311,"nodeType":"Block","src":"8098:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"8112:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8119:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8112:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8125:7:0","memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"8112:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8133:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8112:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8144:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8112:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"8112:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8180:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8186:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"8195:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8195:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"8168:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8168:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8163:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7826:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"8000:11:0","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"8020:4:0","nodeType":"VariableDeclaration","scope":314,"src":"8012:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8012:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"8034:7:0","nodeType":"VariableDeclaration","scope":314,"src":"8026:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"8026:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8011:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"8060:0:0"},"scope":315,"src":"7991:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1932:6295:0","usedErrors":[]}],"src":"108:8120:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[388]},"id":389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":388,"linearizedBaseContracts":[388],"name":"IAccessControl","nameLocation":"219:14:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"240:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":327,"name":"RoleAdminChanged","nameLocation":"543:16:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:1","nodeType":"VariableDeclaration","scope":327,"src":"560:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:1","nodeType":"VariableDeclaration","scope":327,"src":"582:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:1","nodeType":"VariableDeclaration","scope":327,"src":"617:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:1"},"src":"537:110:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"653:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":336,"name":"RoleGranted","nameLocation":"876:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:1","nodeType":"VariableDeclaration","scope":336,"src":"888:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:1","nodeType":"VariableDeclaration","scope":336,"src":"910:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:1","nodeType":"VariableDeclaration","scope":336,"src":"935:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:1"},"src":"870:89:1"},{"anonymous":false,"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"965:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":345,"name":"RoleRevoked","nameLocation":"1251:11:1","nodeType":"EventDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1263:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1285:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:1","nodeType":"VariableDeclaration","scope":345,"src":"1310:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:1"},"src":"1245:89:1"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1340:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":355,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:1","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"1446:4:1","nodeType":"VariableDeclaration","scope":355,"src":"1438:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"account","nameLocation":"1460:7:1","nodeType":"VariableDeclaration","scope":355,"src":"1452:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"1492:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":352,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:1"},"scope":388,"src":"1421:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"1504:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"role","nameLocation":"1723:4:1","nodeType":"VariableDeclaration","scope":363,"src":"1715:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:1"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"1752:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:1"},"scope":388,"src":"1693:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1767:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":371,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:1","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"role","nameLocation":"2038:4:1","nodeType":"VariableDeclaration","scope":371,"src":"2030:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"account","nameLocation":"2052:7:1","nodeType":"VariableDeclaration","scope":371,"src":"2044:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:1"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"2069:0:1"},"scope":388,"src":"2011:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"2076:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":379,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"role","nameLocation":"2332:4:1","nodeType":"VariableDeclaration","scope":379,"src":"2324:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"account","nameLocation":"2346:7:1","nodeType":"VariableDeclaration","scope":379,"src":"2338:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:1"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"2363:0:1"},"scope":388,"src":"2304:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2370:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:1","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"role","nameLocation":"2885:4:1","nodeType":"VariableDeclaration","scope":387,"src":"2877:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"account","nameLocation":"2899:7:1","nodeType":"VariableDeclaration","scope":387,"src":"2891:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:1"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"2916:0:1"},"scope":388,"src":"2855:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":389,"src":"209:2710:1","usedErrors":[]}],"src":"94:2826:1"},"id":1},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","exportedSymbols":{"IVotes":[466]},"id":467,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":390,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IVotes","contractDependencies":[],"contractKind":"interface","documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"135:132:2","text":" @dev Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts.\n _Available since v4.5._"},"fullyImplemented":false,"id":466,"linearizedBaseContracts":[466],"name":"IVotes","nameLocation":"278:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"291:71:2","text":" @dev Emitted when an account changes their delegate."},"eventSelector":"3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f","id":400,"name":"DelegateChanged","nameLocation":"373:15:2","nodeType":"EventDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"indexed":true,"mutability":"mutable","name":"delegator","nameLocation":"405:9:2","nodeType":"VariableDeclaration","scope":400,"src":"389:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"389:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":396,"indexed":true,"mutability":"mutable","name":"fromDelegate","nameLocation":"432:12:2","nodeType":"VariableDeclaration","scope":400,"src":"416:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"416:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":398,"indexed":true,"mutability":"mutable","name":"toDelegate","nameLocation":"462:10:2","nodeType":"VariableDeclaration","scope":400,"src":"446:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"388:85:2"},"src":"367:107:2"},{"anonymous":false,"documentation":{"id":401,"nodeType":"StructuredDocumentation","src":"480:124:2","text":" @dev Emitted when a token transfer or delegate change results in changes to a delegate's number of votes."},"eventSelector":"dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724","id":409,"name":"DelegateVotesChanged","nameLocation":"615:20:2","nodeType":"EventDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"indexed":true,"mutability":"mutable","name":"delegate","nameLocation":"652:8:2","nodeType":"VariableDeclaration","scope":409,"src":"636:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":402,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":405,"indexed":false,"mutability":"mutable","name":"previousBalance","nameLocation":"670:15:2","nodeType":"VariableDeclaration","scope":409,"src":"662:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":404,"name":"uint256","nodeType":"ElementaryTypeName","src":"662:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":407,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"695:10:2","nodeType":"VariableDeclaration","scope":409,"src":"687:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":406,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:71:2"},"src":"609:98:2"},{"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"713:79:2","text":" @dev Returns the current amount of votes that `account` has."},"functionSelector":"9ab24eb0","id":417,"implemented":false,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"806:8:2","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"account","nameLocation":"823:7:2","nodeType":"VariableDeclaration","scope":417,"src":"815:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"815:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"814:17:2"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":417,"src":"855:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"855:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"854:9:2"},"scope":466,"src":"797:67:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":418,"nodeType":"StructuredDocumentation","src":"870:230:2","text":" @dev Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block."},"functionSelector":"3a46b1a8","id":427,"implemented":false,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"1114:12:2","nodeType":"FunctionDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"account","nameLocation":"1135:7:2","nodeType":"VariableDeclaration","scope":427,"src":"1127:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"timepoint","nameLocation":"1152:9:2","nodeType":"VariableDeclaration","scope":427,"src":"1144:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":421,"name":"uint256","nodeType":"ElementaryTypeName","src":"1144:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1126:36:2"},"returnParameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"1186:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1186:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1185:9:2"},"scope":466,"src":"1105:90:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"1201:481:2","text":" @dev Returns the total supply of votes available at a specific moment in the past. If the `clock()` is\n configured to use block numbers, this will return the value at the end of the corresponding block.\n NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes.\n Votes that have not been delegated are still part of total supply, even though they would not participate in a\n vote."},"functionSelector":"8e539e8c","id":435,"implemented":false,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"1696:18:2","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"timepoint","nameLocation":"1723:9:2","nodeType":"VariableDeclaration","scope":435,"src":"1715:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1715:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1714:19:2"},"returnParameters":{"id":434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"1757:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"1757:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1756:9:2"},"scope":466,"src":"1687:79:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"1772:71:2","text":" @dev Returns the delegate that `account` has chosen."},"functionSelector":"587cde1e","id":443,"implemented":false,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"1857:9:2","nodeType":"FunctionDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"account","nameLocation":"1875:7:2","nodeType":"VariableDeclaration","scope":443,"src":"1867:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":437,"name":"address","nodeType":"ElementaryTypeName","src":"1867:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1866:17:2"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":443,"src":"1907:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1906:9:2"},"scope":466,"src":"1848:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"1922:71:2","text":" @dev Delegates votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":449,"implemented":false,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"2007:8:2","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"delegatee","nameLocation":"2024:9:2","nodeType":"VariableDeclaration","scope":449,"src":"2016:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":445,"name":"address","nodeType":"ElementaryTypeName","src":"2016:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2015:19:2"},"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"2043:0:2"},"scope":466,"src":"1998:46:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":450,"nodeType":"StructuredDocumentation","src":"2050:67:2","text":" @dev Delegates votes from signer to `delegatee`."},"functionSelector":"c3cda520","id":465,"implemented":false,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"2131:13:2","nodeType":"FunctionDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"delegatee","nameLocation":"2153:9:2","nodeType":"VariableDeclaration","scope":465,"src":"2145:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"nonce","nameLocation":"2172:5:2","nodeType":"VariableDeclaration","scope":465,"src":"2164:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"expiry","nameLocation":"2187:6:2","nodeType":"VariableDeclaration","scope":465,"src":"2179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"2179:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"v","nameLocation":"2201:1:2","nodeType":"VariableDeclaration","scope":465,"src":"2195:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":457,"name":"uint8","nodeType":"ElementaryTypeName","src":"2195:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":460,"mutability":"mutable","name":"r","nameLocation":"2212:1:2","nodeType":"VariableDeclaration","scope":465,"src":"2204:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":459,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2204:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":462,"mutability":"mutable","name":"s","nameLocation":"2223:1:2","nodeType":"VariableDeclaration","scope":465,"src":"2215:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2215:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2144:81:2"},"returnParameters":{"id":464,"nodeType":"ParameterList","parameters":[],"src":"2234:0:2"},"scope":466,"src":"2122:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":467,"src":"268:1969:2","usedErrors":[]}],"src":"110:2128:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[491]},"id":492,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":468,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":491,"linearizedBaseContracts":[491],"name":"IERC5267","nameLocation":"142:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"157:84:3","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":471,"name":"EIP712DomainChanged","nameLocation":"252:19:3","nodeType":"EventDefinition","parameters":{"id":470,"nodeType":"ParameterList","parameters":[],"src":"271:2:3"},"src":"246:28:3"},{"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"280:140:3","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":490,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"434:12:3","nodeType":"FunctionDefinition","parameters":{"id":473,"nodeType":"ParameterList","parameters":[],"src":"446:2:3"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"fields","nameLocation":"516:6:3","nodeType":"VariableDeclaration","scope":490,"src":"509:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":474,"name":"bytes1","nodeType":"ElementaryTypeName","src":"509:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":477,"mutability":"mutable","name":"name","nameLocation":"550:4:3","nodeType":"VariableDeclaration","scope":490,"src":"536:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":476,"name":"string","nodeType":"ElementaryTypeName","src":"536:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"version","nameLocation":"582:7:3","nodeType":"VariableDeclaration","scope":490,"src":"568:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":478,"name":"string","nodeType":"ElementaryTypeName","src":"568:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"chainId","nameLocation":"611:7:3","nodeType":"VariableDeclaration","scope":490,"src":"603:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":480,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"verifyingContract","nameLocation":"640:17:3","nodeType":"VariableDeclaration","scope":490,"src":"632:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"salt","nameLocation":"679:4:3","nodeType":"VariableDeclaration","scope":490,"src":"671:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"671:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":488,"mutability":"mutable","name":"extensions","nameLocation":"714:10:3","nodeType":"VariableDeclaration","scope":490,"src":"697:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":486,"name":"uint256","nodeType":"ElementaryTypeName","src":"697:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":487,"nodeType":"ArrayTypeName","src":"697:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"495:239:3"},"scope":491,"src":"425:310:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":492,"src":"132:605:3","usedErrors":[]}],"src":"107:631:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","exportedSymbols":{"IERC5805":[500],"IERC6372":[515],"IVotes":[466]},"id":501,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":493,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:4"},{"absolutePath":"@openzeppelin/contracts/governance/utils/IVotes.sol","file":"../governance/utils/IVotes.sol","id":494,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":501,"sourceUnit":467,"src":"132:40:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","file":"./IERC6372.sol","id":495,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":501,"sourceUnit":516,"src":"173:24:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":496,"name":"IERC6372","nameLocations":["221:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":515,"src":"221:8:4"},"id":497,"nodeType":"InheritanceSpecifier","src":"221:8:4"},{"baseName":{"id":498,"name":"IVotes","nameLocations":["231:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":466,"src":"231:6:4"},"id":499,"nodeType":"InheritanceSpecifier","src":"231:6:4"}],"canonicalName":"IERC5805","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":500,"linearizedBaseContracts":[500,466,515],"name":"IERC5805","nameLocation":"209:8:4","nodeType":"ContractDefinition","nodes":[],"scope":501,"src":"199:41:4","usedErrors":[]}],"src":"107:134:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC6372.sol","exportedSymbols":{"IERC6372":[515]},"id":516,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":502,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC6372","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":515,"linearizedBaseContracts":[515],"name":"IERC6372","nameLocation":"142:8:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"157:133:5","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":508,"implemented":false,"kind":"function","modifiers":[],"name":"clock","nameLocation":"304:5:5","nodeType":"FunctionDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[],"src":"309:2:5"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":508,"src":"335:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":505,"name":"uint48","nodeType":"ElementaryTypeName","src":"335:6:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"334:8:5"},"scope":515,"src":"295:48:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"349:48:5","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":514,"implemented":false,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"464:10:5","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"474:2:5"},"returnParameters":{"id":513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":514,"src":"500:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":511,"name":"string","nodeType":"ElementaryTypeName","src":"500:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"499:15:5"},"scope":515,"src":"455:60:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":516,"src":"132:385:5","usedErrors":[]}],"src":"107:411:5"},"id":5},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2172],"ERC20":[1102],"IERC20":[1180],"IERC20Metadata":[2111]},"id":1103,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":517,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":518,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1103,"sourceUnit":1181,"src":"130:22:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":519,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1103,"sourceUnit":2112,"src":"153:41:6","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":520,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1103,"sourceUnit":2173,"src":"195:33:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":522,"name":"Context","nameLocations":["1550:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2172,"src":"1550:7:6"},"id":523,"nodeType":"InheritanceSpecifier","src":"1550:7:6"},{"baseName":{"id":524,"name":"IERC20","nameLocations":["1559:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1180,"src":"1559:6:6"},"id":525,"nodeType":"InheritanceSpecifier","src":"1559:6:6"},{"baseName":{"id":526,"name":"IERC20Metadata","nameLocations":["1567:14:6"],"nodeType":"IdentifierPath","referencedDeclaration":2111,"src":"1567:14:6"},"id":527,"nodeType":"InheritanceSpecifier","src":"1567:14:6"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"230:1301:6","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1102,"linearizedBaseContracts":[1102,2111,1180,2172],"name":"ERC20","nameLocation":"1541:5:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":531,"mutability":"mutable","name":"_balances","nameLocation":"1624:9:6","nodeType":"VariableDeclaration","scope":1102,"src":"1588:45:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":530,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"1596:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1588:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":529,"name":"uint256","nodeType":"ElementaryTypeName","src":"1607:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":537,"mutability":"mutable","name":"_allowances","nameLocation":"1696:11:6","nodeType":"VariableDeclaration","scope":1102,"src":"1640:67:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":536,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1640:47:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":535,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"1678:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":539,"mutability":"mutable","name":"_totalSupply","nameLocation":"1730:12:6","nodeType":"VariableDeclaration","scope":1102,"src":"1714:28:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":538,"name":"uint256","nodeType":"ElementaryTypeName","src":"1714:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":541,"mutability":"mutable","name":"_name","nameLocation":"1764:5:6","nodeType":"VariableDeclaration","scope":1102,"src":"1749:20:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":540,"name":"string","nodeType":"ElementaryTypeName","src":"1749:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":543,"mutability":"mutable","name":"_symbol","nameLocation":"1790:7:6","nodeType":"VariableDeclaration","scope":1102,"src":"1775:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":542,"name":"string","nodeType":"ElementaryTypeName","src":"1775:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":559,"nodeType":"Block","src":"2036:57:6","statements":[{"expression":{"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":551,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"2046:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":552,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2054:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2046:13:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":554,"nodeType":"ExpressionStatement","src":"2046:13:6"},{"expression":{"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":555,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"2069:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":556,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"2079:7:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2069:17:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":558,"nodeType":"ExpressionStatement","src":"2069:17:6"}]},"documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"1804:171:6","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":560,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"name_","nameLocation":"2006:5:6","nodeType":"VariableDeclaration","scope":560,"src":"1992:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":545,"name":"string","nodeType":"ElementaryTypeName","src":"1992:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":548,"mutability":"mutable","name":"symbol_","nameLocation":"2027:7:6","nodeType":"VariableDeclaration","scope":560,"src":"2013:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":547,"name":"string","nodeType":"ElementaryTypeName","src":"2013:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1991:44:6"},"returnParameters":{"id":550,"nodeType":"ParameterList","parameters":[],"src":"2036:0:6"},"scope":1102,"src":"1980:113:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2098],"body":{"id":569,"nodeType":"Block","src":"2227:29:6","statements":[{"expression":{"id":567,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"2244:5:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":566,"id":568,"nodeType":"Return","src":"2237:12:6"}]},"documentation":{"id":561,"nodeType":"StructuredDocumentation","src":"2099:54:6","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":570,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2167:4:6","nodeType":"FunctionDefinition","overrides":{"id":563,"nodeType":"OverrideSpecifier","overrides":[],"src":"2194:8:6"},"parameters":{"id":562,"nodeType":"ParameterList","parameters":[],"src":"2171:2:6"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":570,"src":"2212:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":564,"name":"string","nodeType":"ElementaryTypeName","src":"2212:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2211:15:6"},"scope":1102,"src":"2158:98:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2104],"body":{"id":579,"nodeType":"Block","src":"2440:31:6","statements":[{"expression":{"id":577,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"2457:7:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":576,"id":578,"nodeType":"Return","src":"2450:14:6"}]},"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"2262:102:6","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":580,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2378:6:6","nodeType":"FunctionDefinition","overrides":{"id":573,"nodeType":"OverrideSpecifier","overrides":[],"src":"2407:8:6"},"parameters":{"id":572,"nodeType":"ParameterList","parameters":[],"src":"2384:2:6"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":580,"src":"2425:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":574,"name":"string","nodeType":"ElementaryTypeName","src":"2425:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2424:15:6"},"scope":1102,"src":"2369:102:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2110],"body":{"id":589,"nodeType":"Block","src":"3169:26:6","statements":[{"expression":{"hexValue":"3138","id":587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3186:2:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":586,"id":588,"nodeType":"Return","src":"3179:9:6"}]},"documentation":{"id":581,"nodeType":"StructuredDocumentation","src":"2477:622:6","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":590,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3113:8:6","nodeType":"FunctionDefinition","overrides":{"id":583,"nodeType":"OverrideSpecifier","overrides":[],"src":"3144:8:6"},"parameters":{"id":582,"nodeType":"ParameterList","parameters":[],"src":"3121:2:6"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":590,"src":"3162:5:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":584,"name":"uint8","nodeType":"ElementaryTypeName","src":"3162:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3161:7:6"},"scope":1102,"src":"3104:91:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1129],"body":{"id":599,"nodeType":"Block","src":"3325:36:6","statements":[{"expression":{"id":597,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"3342:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":596,"id":598,"nodeType":"Return","src":"3335:19:6"}]},"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"3201:49:6","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":600,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3264:11:6","nodeType":"FunctionDefinition","overrides":{"id":593,"nodeType":"OverrideSpecifier","overrides":[],"src":"3298:8:6"},"parameters":{"id":592,"nodeType":"ParameterList","parameters":[],"src":"3275:2:6"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":600,"src":"3316:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"3316:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3315:9:6"},"scope":1102,"src":"3255:106:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1137],"body":{"id":613,"nodeType":"Block","src":"3502:42:6","statements":[{"expression":{"baseExpression":{"id":609,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"3519:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":611,"indexExpression":{"id":610,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"3529:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3519:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":608,"id":612,"nodeType":"Return","src":"3512:25:6"}]},"documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"3367:47:6","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":614,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3428:9:6","nodeType":"FunctionDefinition","overrides":{"id":605,"nodeType":"OverrideSpecifier","overrides":[],"src":"3475:8:6"},"parameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"account","nameLocation":"3446:7:6","nodeType":"VariableDeclaration","scope":614,"src":"3438:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"3438:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:17:6"},"returnParameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":614,"src":"3493:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"3493:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3492:9:6"},"scope":1102,"src":"3419:125:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1147],"body":{"id":638,"nodeType":"Block","src":"3825:104:6","statements":[{"assignments":[626],"declarations":[{"constant":false,"id":626,"mutability":"mutable","name":"owner","nameLocation":"3843:5:6","nodeType":"VariableDeclaration","scope":638,"src":"3835:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":629,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":627,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"3851:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3851:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3835:28:6"},{"expression":{"arguments":[{"id":631,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"3883:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":632,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"3890:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"3894:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":630,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"3873:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3873:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":635,"nodeType":"ExpressionStatement","src":"3873:28:6"},{"expression":{"hexValue":"74727565","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3918:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":624,"id":637,"nodeType":"Return","src":"3911:11:6"}]},"documentation":{"id":615,"nodeType":"StructuredDocumentation","src":"3550:185:6","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":639,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3749:8:6","nodeType":"FunctionDefinition","overrides":{"id":621,"nodeType":"OverrideSpecifier","overrides":[],"src":"3801:8:6"},"parameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"to","nameLocation":"3766:2:6","nodeType":"VariableDeclaration","scope":639,"src":"3758:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":616,"name":"address","nodeType":"ElementaryTypeName","src":"3758:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":619,"mutability":"mutable","name":"amount","nameLocation":"3778:6:6","nodeType":"VariableDeclaration","scope":639,"src":"3770:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":618,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3757:28:6"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":639,"src":"3819:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":622,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:6"},"scope":1102,"src":"3740:189:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1157],"body":{"id":656,"nodeType":"Block","src":"4085:51:6","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":650,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"4102:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":652,"indexExpression":{"id":651,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"4114:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":654,"indexExpression":{"id":653,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4121:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4102:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":649,"id":655,"nodeType":"Return","src":"4095:34:6"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"3935:47:6","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":657,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3996:9:6","nodeType":"FunctionDefinition","overrides":{"id":646,"nodeType":"OverrideSpecifier","overrides":[],"src":"4058:8:6"},"parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"owner","nameLocation":"4014:5:6","nodeType":"VariableDeclaration","scope":657,"src":"4006:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"4006:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"spender","nameLocation":"4029:7:6","nodeType":"VariableDeclaration","scope":657,"src":"4021:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4005:32:6"},"returnParameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":657,"src":"4076:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"4076:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4075:9:6"},"scope":1102,"src":"3987:149:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1167],"body":{"id":681,"nodeType":"Block","src":"4533:108:6","statements":[{"assignments":[669],"declarations":[{"constant":false,"id":669,"mutability":"mutable","name":"owner","nameLocation":"4551:5:6","nodeType":"VariableDeclaration","scope":681,"src":"4543:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"4543:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":672,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":670,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"4559:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4543:28:6"},{"expression":{"arguments":[{"id":674,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"4590:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":675,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"4597:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":676,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"4606:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":673,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4581:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4581:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"ExpressionStatement","src":"4581:32:6"},{"expression":{"hexValue":"74727565","id":679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4630:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":667,"id":680,"nodeType":"Return","src":"4623:11:6"}]},"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"4142:297:6","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":682,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4453:7:6","nodeType":"FunctionDefinition","overrides":{"id":664,"nodeType":"OverrideSpecifier","overrides":[],"src":"4509:8:6"},"parameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"spender","nameLocation":"4469:7:6","nodeType":"VariableDeclaration","scope":682,"src":"4461:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"4461:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":662,"mutability":"mutable","name":"amount","nameLocation":"4486:6:6","nodeType":"VariableDeclaration","scope":682,"src":"4478:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"4478:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4460:33:6"},"returnParameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":682,"src":"4527:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":665,"name":"bool","nodeType":"ElementaryTypeName","src":"4527:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4526:6:6"},"scope":1102,"src":"4444:197:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1179],"body":{"id":714,"nodeType":"Block","src":"5306:153:6","statements":[{"assignments":[696],"declarations":[{"constant":false,"id":696,"mutability":"mutable","name":"spender","nameLocation":"5324:7:6","nodeType":"VariableDeclaration","scope":714,"src":"5316:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":699,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":697,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"5334:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5334:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5316:30:6"},{"expression":{"arguments":[{"id":701,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"5372:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":702,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"5378:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":703,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"5387:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":700,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"5356:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5356:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":705,"nodeType":"ExpressionStatement","src":"5356:38:6"},{"expression":{"arguments":[{"id":707,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"5414:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":708,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"5420:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":709,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"5424:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":706,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5404:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5404:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":711,"nodeType":"ExpressionStatement","src":"5404:27:6"},{"expression":{"hexValue":"74727565","id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5448:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":694,"id":713,"nodeType":"Return","src":"5441:11:6"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"4647:551:6","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":715,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5212:12:6","nodeType":"FunctionDefinition","overrides":{"id":691,"nodeType":"OverrideSpecifier","overrides":[],"src":"5282:8:6"},"parameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"from","nameLocation":"5233:4:6","nodeType":"VariableDeclaration","scope":715,"src":"5225:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"to","nameLocation":"5247:2:6","nodeType":"VariableDeclaration","scope":715,"src":"5239:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"5239:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":689,"mutability":"mutable","name":"amount","nameLocation":"5259:6:6","nodeType":"VariableDeclaration","scope":715,"src":"5251:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":688,"name":"uint256","nodeType":"ElementaryTypeName","src":"5251:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5224:42:6"},"returnParameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":715,"src":"5300:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":692,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5299:6:6"},"scope":1102,"src":"5203:256:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":743,"nodeType":"Block","src":"5948:140:6","statements":[{"assignments":[726],"declarations":[{"constant":false,"id":726,"mutability":"mutable","name":"owner","nameLocation":"5966:5:6","nodeType":"VariableDeclaration","scope":743,"src":"5958:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":725,"name":"address","nodeType":"ElementaryTypeName","src":"5958:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":729,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":727,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"5974:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5958:28:6"},{"expression":{"arguments":[{"id":731,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"6005:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"6012:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":734,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"6031:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":735,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"6038:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":733,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"6021:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":737,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"6049:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:38:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":730,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"5996:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5996:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":740,"nodeType":"ExpressionStatement","src":"5996:64:6"},{"expression":{"hexValue":"74727565","id":741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6077:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":724,"id":742,"nodeType":"Return","src":"6070:11:6"}]},"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"5465:384:6","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":744,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5863:17:6","nodeType":"FunctionDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"spender","nameLocation":"5889:7:6","nodeType":"VariableDeclaration","scope":744,"src":"5881:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"5881:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":720,"mutability":"mutable","name":"addedValue","nameLocation":"5906:10:6","nodeType":"VariableDeclaration","scope":744,"src":"5898:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":719,"name":"uint256","nodeType":"ElementaryTypeName","src":"5898:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5880:37:6"},"returnParameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":744,"src":"5942:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":722,"name":"bool","nodeType":"ElementaryTypeName","src":"5942:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5941:6:6"},"scope":1102,"src":"5854:234:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":784,"nodeType":"Block","src":"6674:328:6","statements":[{"assignments":[755],"declarations":[{"constant":false,"id":755,"mutability":"mutable","name":"owner","nameLocation":"6692:5:6","nodeType":"VariableDeclaration","scope":784,"src":"6684:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"6684:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":758,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":756,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"6700:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6684:28:6"},{"assignments":[760],"declarations":[{"constant":false,"id":760,"mutability":"mutable","name":"currentAllowance","nameLocation":"6730:16:6","nodeType":"VariableDeclaration","scope":784,"src":"6722:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"6722:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":765,"initialValue":{"arguments":[{"id":762,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6759:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":763,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"6766:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":761,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"6749:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6722:52:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"6792:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":768,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"6812:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6792:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6829:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":766,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6784:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6784:85:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":772,"nodeType":"ExpressionStatement","src":"6784:85:6"},{"id":781,"nodeType":"UncheckedBlock","src":"6879:95:6","statements":[{"expression":{"arguments":[{"id":774,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"6912:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":775,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"6919:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":776,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"6928:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":777,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"6947:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6928:34:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":773,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"6903:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6903:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"6903:60:6"}]},{"expression":{"hexValue":"74727565","id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6991:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":753,"id":783,"nodeType":"Return","src":"6984:11:6"}]},"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"6094:476:6","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":785,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6584:17:6","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"spender","nameLocation":"6610:7:6","nodeType":"VariableDeclaration","scope":785,"src":"6602:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"6602:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"subtractedValue","nameLocation":"6627:15:6","nodeType":"VariableDeclaration","scope":785,"src":"6619:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":748,"name":"uint256","nodeType":"ElementaryTypeName","src":"6619:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6601:42:6"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":785,"src":"6668:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":751,"name":"bool","nodeType":"ElementaryTypeName","src":"6668:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6667:6:6"},"scope":1102,"src":"6575:427:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":861,"nodeType":"Block","src":"7534:710:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":796,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"7552:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7568:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7560:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"7560:7:6","typeDescriptions":{}}},"id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7560:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7552:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7572:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7544:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7544:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":804,"nodeType":"ExpressionStatement","src":"7544:68:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":806,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"7630:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7636:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"7636:7:6","typeDescriptions":{}}},"id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7636:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7630:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7648:37:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":805,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7622:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7622:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"ExpressionStatement","src":"7622:64:6"},{"expression":{"arguments":[{"id":816,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"7718:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":817,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"7724:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":818,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"7728:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":815,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"7697:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":820,"nodeType":"ExpressionStatement","src":"7697:38:6"},{"assignments":[822],"declarations":[{"constant":false,"id":822,"mutability":"mutable","name":"fromBalance","nameLocation":"7754:11:6","nodeType":"VariableDeclaration","scope":861,"src":"7746:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":821,"name":"uint256","nodeType":"ElementaryTypeName","src":"7746:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":826,"initialValue":{"baseExpression":{"id":823,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"7768:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":825,"indexExpression":{"id":824,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"7778:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7768:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7746:37:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":828,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"7801:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":829,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"7816:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7824:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":827,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7793:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7793:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":833,"nodeType":"ExpressionStatement","src":"7793:72:6"},{"id":848,"nodeType":"UncheckedBlock","src":"7875:273:6","statements":[{"expression":{"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":834,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"7899:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":836,"indexExpression":{"id":835,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"7909:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7899:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":837,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"7917:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":838,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"7931:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7917:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:38:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":841,"nodeType":"ExpressionStatement","src":"7899:38:6"},{"expression":{"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":842,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"8114:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":844,"indexExpression":{"id":843,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"8124:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8114:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":845,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"8131:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8114:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":847,"nodeType":"ExpressionStatement","src":"8114:23:6"}]},{"eventCall":{"arguments":[{"id":850,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"8172:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":851,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"8178:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":852,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"8182:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":849,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"8163:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8163:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":854,"nodeType":"EmitStatement","src":"8158:31:6"},{"expression":{"arguments":[{"id":856,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"8220:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":857,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"8226:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":858,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"8230:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":855,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"8200:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8200:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":860,"nodeType":"ExpressionStatement","src":"8200:37:6"}]},"documentation":{"id":786,"nodeType":"StructuredDocumentation","src":"7008:443:6","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":862,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7465:9:6","nodeType":"FunctionDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"from","nameLocation":"7483:4:6","nodeType":"VariableDeclaration","scope":862,"src":"7475:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"7475:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"to","nameLocation":"7497:2:6","nodeType":"VariableDeclaration","scope":862,"src":"7489:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"7489:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"amount","nameLocation":"7509:6:6","nodeType":"VariableDeclaration","scope":862,"src":"7501:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":791,"name":"uint256","nodeType":"ElementaryTypeName","src":"7501:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7474:42:6"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[],"src":"7534:0:6"},"scope":1102,"src":"7456:788:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":918,"nodeType":"Block","src":"8585:470:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":871,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"8603:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8622:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8614:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"8614:7:6","typeDescriptions":{}}},"id":875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8614:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8603:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8626:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8595:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:65:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":879,"nodeType":"ExpressionStatement","src":"8595:65:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8692:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"8692:7:6","typeDescriptions":{}}},"id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":885,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"8704:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":886,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"8713:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":880,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"8671:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8671:49:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":888,"nodeType":"ExpressionStatement","src":"8671:49:6"},{"expression":{"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":889,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"8731:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":890,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"8747:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8731:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":892,"nodeType":"ExpressionStatement","src":"8731:22:6"},{"id":899,"nodeType":"UncheckedBlock","src":"8763:175:6","statements":[{"expression":{"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":893,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"8899:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":895,"indexExpression":{"id":894,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"8909:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8899:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":896,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"8921:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8899:28:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":898,"nodeType":"ExpressionStatement","src":"8899:28:6"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8969:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8961:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"8961:7:6","typeDescriptions":{}}},"id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8961:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":905,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"8973:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":906,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"8982:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":900,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"8952:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":908,"nodeType":"EmitStatement","src":"8947:42:6"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9028:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9020:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":910,"name":"address","nodeType":"ElementaryTypeName","src":"9020:7:6","typeDescriptions":{}}},"id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9020:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":914,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"9032:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":915,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"9041:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":909,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"9000:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9000:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":917,"nodeType":"ExpressionStatement","src":"9000:48:6"}]},"documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"8250:265:6","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":919,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8529:5:6","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"account","nameLocation":"8543:7:6","nodeType":"VariableDeclaration","scope":919,"src":"8535:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"8535:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"amount","nameLocation":"8560:6:6","nodeType":"VariableDeclaration","scope":919,"src":"8552:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8534:33:6"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[],"src":"8585:0:6"},"scope":1102,"src":"8520:535:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":990,"nodeType":"Block","src":"9440:594:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":928,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"9458:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9477:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9469:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"9469:7:6","typeDescriptions":{}}},"id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9469:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9458:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9481:35:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":927,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9450:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9450:67:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":936,"nodeType":"ExpressionStatement","src":"9450:67:6"},{"expression":{"arguments":[{"id":938,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"9549:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9566:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9558:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"9558:7:6","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9558:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":943,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9570:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":937,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"9528:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9528:49:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":945,"nodeType":"ExpressionStatement","src":"9528:49:6"},{"assignments":[947],"declarations":[{"constant":false,"id":947,"mutability":"mutable","name":"accountBalance","nameLocation":"9596:14:6","nodeType":"VariableDeclaration","scope":990,"src":"9588:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"9588:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":951,"initialValue":{"baseExpression":{"id":948,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"9613:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":950,"indexExpression":{"id":949,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"9623:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9613:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9588:43:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":953,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"9649:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":954,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9667:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9649:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9675:36:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":952,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9641:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9641:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":958,"nodeType":"ExpressionStatement","src":"9641:71:6"},{"id":971,"nodeType":"UncheckedBlock","src":"9722:194:6","statements":[{"expression":{"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":959,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"9746:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":961,"indexExpression":{"id":960,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"9756:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9746:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":962,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"9767:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":963,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9784:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9767:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9746:44:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":966,"nodeType":"ExpressionStatement","src":"9746:44:6"},{"expression":{"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":967,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"9883:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":968,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9899:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":970,"nodeType":"ExpressionStatement","src":"9883:22:6"}]},{"eventCall":{"arguments":[{"id":973,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"9940:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9957:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9949:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":974,"name":"address","nodeType":"ElementaryTypeName","src":"9949:7:6","typeDescriptions":{}}},"id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9949:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":978,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"9961:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":972,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"9931:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9931:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":980,"nodeType":"EmitStatement","src":"9926:42:6"},{"expression":{"arguments":[{"id":982,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"9999:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10016:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10008:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"10008:7:6","typeDescriptions":{}}},"id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10008:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":987,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"10020:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":981,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"9979:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9979:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":989,"nodeType":"ExpressionStatement","src":"9979:48:6"}]},"documentation":{"id":920,"nodeType":"StructuredDocumentation","src":"9061:309:6","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":991,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9384:5:6","nodeType":"FunctionDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"account","nameLocation":"9398:7:6","nodeType":"VariableDeclaration","scope":991,"src":"9390:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"9390:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"amount","nameLocation":"9415:6:6","nodeType":"VariableDeclaration","scope":991,"src":"9407:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9389:33:6"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[],"src":"9440:0:6"},"scope":1102,"src":"9375:659:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1035,"nodeType":"Block","src":"10540:257:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1002,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"10558:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10575:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10567:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"10567:7:6","typeDescriptions":{}}},"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10558:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10579:38:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10550:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10550:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1010,"nodeType":"ExpressionStatement","src":"10550:68:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1012,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"10636:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10647:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:6","typeDescriptions":{}}},"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10647:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10636:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10659:36:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1011,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10628:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10628:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1020,"nodeType":"ExpressionStatement","src":"10628:68:6"},{"expression":{"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1021,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"10707:11:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1024,"indexExpression":{"id":1022,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"10719:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10707:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1025,"indexExpression":{"id":1023,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"10726:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10707:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1026,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"10737:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10707:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1028,"nodeType":"ExpressionStatement","src":"10707:36:6"},{"eventCall":{"arguments":[{"id":1030,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"10767:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1031,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"10774:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1032,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"10783:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1029,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"10758:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10758:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1034,"nodeType":"EmitStatement","src":"10753:37:6"}]},"documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"10040:412:6","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1036,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10466:8:6","nodeType":"FunctionDefinition","parameters":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":994,"mutability":"mutable","name":"owner","nameLocation":"10483:5:6","nodeType":"VariableDeclaration","scope":1036,"src":"10475:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"spender","nameLocation":"10498:7:6","nodeType":"VariableDeclaration","scope":1036,"src":"10490:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"10490:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"amount","nameLocation":"10515:6:6","nodeType":"VariableDeclaration","scope":1036,"src":"10507:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":997,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10474:48:6"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"10540:0:6"},"scope":1102,"src":"10457:340:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1078,"nodeType":"Block","src":"11168:321:6","statements":[{"assignments":[1047],"declarations":[{"constant":false,"id":1047,"mutability":"mutable","name":"currentAllowance","nameLocation":"11186:16:6","nodeType":"VariableDeclaration","scope":1078,"src":"11178:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"11178:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1052,"initialValue":{"arguments":[{"id":1049,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"11215:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1050,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"11222:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1048,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"11205:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11205:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11178:52:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1053,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"11244:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11269:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1055,"name":"uint256","nodeType":"ElementaryTypeName","src":"11269:7:6","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1054,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11264:4:6","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11264:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11278:3:6","memberName":"max","nodeType":"MemberAccess","src":"11264:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11244:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1077,"nodeType":"IfStatement","src":"11240:243:6","trueBody":{"id":1076,"nodeType":"Block","src":"11283:200:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1061,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"11305:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1062,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"11325:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11305:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11333:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1060,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11297:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11297:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1066,"nodeType":"ExpressionStatement","src":"11297:68:6"},{"id":1075,"nodeType":"UncheckedBlock","src":"11379:94:6","statements":[{"expression":{"arguments":[{"id":1068,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"11416:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1069,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"11423:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1070,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"11432:16:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1071,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"11451:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11432:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1067,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"11407:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11407:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1074,"nodeType":"ExpressionStatement","src":"11407:51:6"}]}]}}]},"documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"10803:270:6","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11087:15:6","nodeType":"FunctionDefinition","parameters":{"id":1044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"owner","nameLocation":"11111:5:6","nodeType":"VariableDeclaration","scope":1079,"src":"11103:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"11103:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"spender","nameLocation":"11126:7:6","nodeType":"VariableDeclaration","scope":1079,"src":"11118:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1040,"name":"address","nodeType":"ElementaryTypeName","src":"11118:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1043,"mutability":"mutable","name":"amount","nameLocation":"11143:6:6","nodeType":"VariableDeclaration","scope":1079,"src":"11135:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1042,"name":"uint256","nodeType":"ElementaryTypeName","src":"11135:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11102:48:6"},"returnParameters":{"id":1045,"nodeType":"ParameterList","parameters":[],"src":"11168:0:6"},"scope":1102,"src":"11078:411:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1089,"nodeType":"Block","src":"12162:2:6","statements":[]},"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"11495:573:6","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1090,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12082:20:6","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"from","nameLocation":"12111:4:6","nodeType":"VariableDeclaration","scope":1090,"src":"12103:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"to","nameLocation":"12125:2:6","nodeType":"VariableDeclaration","scope":1090,"src":"12117:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"12117:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"amount","nameLocation":"12137:6:6","nodeType":"VariableDeclaration","scope":1090,"src":"12129:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"12129:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12102:42:6"},"returnParameters":{"id":1088,"nodeType":"ParameterList","parameters":[],"src":"12162:0:6"},"scope":1102,"src":"12073:91:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1100,"nodeType":"Block","src":"12840:2:6","statements":[]},"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"12170:577:6","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1101,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12761:19:6","nodeType":"FunctionDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"from","nameLocation":"12789:4:6","nodeType":"VariableDeclaration","scope":1101,"src":"12781:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"12781:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"to","nameLocation":"12803:2:6","nodeType":"VariableDeclaration","scope":1101,"src":"12795:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"12795:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"amount","nameLocation":"12815:6:6","nodeType":"VariableDeclaration","scope":1101,"src":"12807:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"12807:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12780:42:6"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[],"src":"12840:0:6"},"scope":1102,"src":"12752:90:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1103,"src":"1532:11312:6","usedErrors":[]}],"src":"105:12740:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1180]},"id":1181,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1104,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1105,"nodeType":"StructuredDocumentation","src":"131:70:7","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1180,"linearizedBaseContracts":[1180],"name":"IERC20","nameLocation":"212:6:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"225:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1114,"name":"Transfer","nameLocation":"394:8:7","nodeType":"EventDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:7","nodeType":"VariableDeclaration","scope":1114,"src":"403:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1110,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:7","nodeType":"VariableDeclaration","scope":1114,"src":"425:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1109,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1112,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:7","nodeType":"VariableDeclaration","scope":1114,"src":"445:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:7"},"src":"388:72:7"},{"anonymous":false,"documentation":{"id":1115,"nodeType":"StructuredDocumentation","src":"466:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1123,"name":"Approval","nameLocation":"625:8:7","nodeType":"EventDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1117,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:7","nodeType":"VariableDeclaration","scope":1123,"src":"634:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1119,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:7","nodeType":"VariableDeclaration","scope":1123,"src":"657:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1121,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:7","nodeType":"VariableDeclaration","scope":1123,"src":"682:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:7"},"src":"619:78:7"},{"documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"703:66:7","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1129,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:7","nodeType":"FunctionDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[],"src":"794:2:7"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1129,"src":"820:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:7"},"scope":1180,"src":"774:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"835:72:7","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1137,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:7","nodeType":"FunctionDefinition","parameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"account","nameLocation":"939:7:7","nodeType":"VariableDeclaration","scope":1137,"src":"931:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:7"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1137,"src":"971:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1134,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:7"},"scope":1180,"src":"912:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1138,"nodeType":"StructuredDocumentation","src":"986:202:7","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1147,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:7","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"to","nameLocation":"1219:2:7","nodeType":"VariableDeclaration","scope":1147,"src":"1211:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"amount","nameLocation":"1231:6:7","nodeType":"VariableDeclaration","scope":1147,"src":"1223:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:7"},"returnParameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1147,"src":"1257:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1144,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:7"},"scope":1180,"src":"1193:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1148,"nodeType":"StructuredDocumentation","src":"1269:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1157,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:7","nodeType":"FunctionDefinition","parameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"owner","nameLocation":"1565:5:7","nodeType":"VariableDeclaration","scope":1157,"src":"1557:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1152,"mutability":"mutable","name":"spender","nameLocation":"1580:7:7","nodeType":"VariableDeclaration","scope":1157,"src":"1572:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1151,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:7"},"returnParameters":{"id":1156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1157,"src":"1612:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:7"},"scope":1180,"src":"1538:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1158,"nodeType":"StructuredDocumentation","src":"1627:642:7","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1167,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:7","nodeType":"FunctionDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"spender","nameLocation":"2299:7:7","nodeType":"VariableDeclaration","scope":1167,"src":"2291:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1162,"mutability":"mutable","name":"amount","nameLocation":"2316:6:7","nodeType":"VariableDeclaration","scope":1167,"src":"2308:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:7"},"returnParameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1167,"src":"2342:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1164,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:7"},"scope":1180,"src":"2274:74:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"2354:287:7","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1179,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:7","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"from","nameLocation":"2676:4:7","nodeType":"VariableDeclaration","scope":1179,"src":"2668:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"to","nameLocation":"2690:2:7","nodeType":"VariableDeclaration","scope":1179,"src":"2682:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"amount","nameLocation":"2702:6:7","nodeType":"VariableDeclaration","scope":1179,"src":"2694:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1173,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:7"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1179,"src":"2728:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1176,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:7"},"scope":1180,"src":"2646:88:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1181,"src":"202:2534:7","usedErrors":[]}],"src":"106:2631:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"Context":[2172],"Counters":[2246],"ECDSA":[3167],"EIP712":[3371],"ERC20":[1102],"ERC20Permit":[1352],"IERC20":[1180],"IERC20Metadata":[2111],"IERC20Permit":[2147],"IERC5267":[491],"Math":[4273],"ShortString":[2251],"ShortStrings":[2462],"SignedMath":[5919],"StorageSlot":[2572],"Strings":[2801]},"id":1353,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1182,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"122:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1353,"sourceUnit":2148,"src":"147:28:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1184,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1353,"sourceUnit":1103,"src":"176:22:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1353,"sourceUnit":3168,"src":"199:47:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1186,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1353,"sourceUnit":3372,"src":"247:48:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"../../../utils/Counters.sol","id":1187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1353,"sourceUnit":2247,"src":"296:37:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1189,"name":"ERC20","nameLocations":["886:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"886:5:8"},"id":1190,"nodeType":"InheritanceSpecifier","src":"886:5:8"},{"baseName":{"id":1191,"name":"IERC20Permit","nameLocations":["893:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":2147,"src":"893:12:8"},"id":1192,"nodeType":"InheritanceSpecifier","src":"893:12:8"},{"baseName":{"id":1193,"name":"EIP712","nameLocations":["907:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3371,"src":"907:6:8"},"id":1194,"nodeType":"InheritanceSpecifier","src":"907:6:8"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1188,"nodeType":"StructuredDocumentation","src":"335:517:8","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"},"fullyImplemented":true,"id":1352,"linearizedBaseContracts":[1352,3371,491,2147,1102,2111,1180,2172],"name":"ERC20Permit","nameLocation":"871:11:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1198,"libraryName":{"id":1195,"name":"Counters","nameLocations":["926:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":2246,"src":"926:8:8"},"nodeType":"UsingForDirective","src":"920:36:8","typeName":{"id":1197,"nodeType":"UserDefinedTypeName","pathNode":{"id":1196,"name":"Counters.Counter","nameLocations":["939:8:8","948:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2178,"src":"939:16:8"},"referencedDeclaration":2178,"src":"939:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":1203,"mutability":"mutable","name":"_nonces","nameLocation":"1007:7:8","nodeType":"VariableDeclaration","scope":1352,"src":"962:52:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2178_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"typeName":{"id":1202,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"970:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"962:36:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2178_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1201,"nodeType":"UserDefinedTypeName","pathNode":{"id":1200,"name":"Counters.Counter","nameLocations":["981:8:8","990:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2178,"src":"981:16:8"},"referencedDeclaration":2178,"src":"981:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter"}}},"visibility":"private"},{"constant":true,"id":1208,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1098:16:8","nodeType":"VariableDeclaration","scope":1352,"src":"1073:147:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1073:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1135:84:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1205,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1125:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1125:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"1226:254:8","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":1211,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1553:32:8","nodeType":"VariableDeclaration","scope":1352,"src":"1537:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1537:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":1221,"nodeType":"Block","src":"1867:2:8","statements":[]},"documentation":{"id":1212,"nodeType":"StructuredDocumentation","src":"1592:220:8","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1222,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1217,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"1856:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1862:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1219,"kind":"baseConstructorSpecifier","modifierName":{"id":1216,"name":"EIP712","nameLocations":["1849:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":3371,"src":"1849:6:8"},"nodeType":"ModifierInvocation","src":"1849:17:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"name","nameLocation":"1843:4:8","nodeType":"VariableDeclaration","scope":1222,"src":"1829:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1213,"name":"string","nodeType":"ElementaryTypeName","src":"1829:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1828:20:8"},"returnParameters":{"id":1220,"nodeType":"ParameterList","parameters":[],"src":"1867:0:8"},"scope":1352,"src":"1817:52:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2132],"body":{"id":1294,"nodeType":"Block","src":"2128:428:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1242,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2146:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2152:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"2146:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1244,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"2165:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2146:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2175:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":1241,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2138:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2138:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1248,"nodeType":"ExpressionStatement","src":"2138:69:8"},{"assignments":[1250],"declarations":[{"constant":false,"id":1250,"mutability":"mutable","name":"structHash","nameLocation":"2226:10:8","nodeType":"VariableDeclaration","scope":1294,"src":"2218:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2218:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1264,"initialValue":{"arguments":[{"arguments":[{"id":1254,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"2260:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1255,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"2278:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1256,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"2285:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"2294:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1259,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"2311:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1258,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"2301:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2301:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1261,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"2319:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1252,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2249:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2253:6:8","memberName":"encode","nodeType":"MemberAccess","src":"2249:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:79:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1251,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2239:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2239:90:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2218:111:8"},{"assignments":[1266],"declarations":[{"constant":false,"id":1266,"mutability":"mutable","name":"hash","nameLocation":"2348:4:8","nodeType":"VariableDeclaration","scope":1294,"src":"2340:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1265,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2340:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1270,"initialValue":{"arguments":[{"id":1268,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"2372:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1267,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"2355:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2340:43:8"},{"assignments":[1272],"declarations":[{"constant":false,"id":1272,"mutability":"mutable","name":"signer","nameLocation":"2402:6:8","nodeType":"VariableDeclaration","scope":1294,"src":"2394:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"2394:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1280,"initialValue":{"arguments":[{"id":1275,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"2425:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1276,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"2431:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1277,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"2434:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1278,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"2437:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1273,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"2411:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3167_$","typeString":"type(library ECDSA)"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2417:7:8","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"2411:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2411:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2394:45:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1282,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"2457:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1283,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"2467:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2457:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2474:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":1281,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2449:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1287,"nodeType":"ExpressionStatement","src":"2449:58:8"},{"expression":{"arguments":[{"id":1289,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"2527:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1290,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"2534:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"2543:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1288,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"2518:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2518:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1293,"nodeType":"ExpressionStatement","src":"2518:31:8"}]},"documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"1875:50:8","text":" @dev See {IERC20Permit-permit}."},"functionSelector":"d505accf","id":1295,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1939:6:8","nodeType":"FunctionDefinition","overrides":{"id":1239,"nodeType":"OverrideSpecifier","overrides":[],"src":"2119:8:8"},"parameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"owner","nameLocation":"1963:5:8","nodeType":"VariableDeclaration","scope":1295,"src":"1955:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"1955:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"spender","nameLocation":"1986:7:8","nodeType":"VariableDeclaration","scope":1295,"src":"1978:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"1978:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"value","nameLocation":"2011:5:8","nodeType":"VariableDeclaration","scope":1295,"src":"2003:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"2003:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"deadline","nameLocation":"2034:8:8","nodeType":"VariableDeclaration","scope":1295,"src":"2026:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1230,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"v","nameLocation":"2058:1:8","nodeType":"VariableDeclaration","scope":1295,"src":"2052:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1232,"name":"uint8","nodeType":"ElementaryTypeName","src":"2052:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"r","nameLocation":"2077:1:8","nodeType":"VariableDeclaration","scope":1295,"src":"2069:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2069:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1237,"mutability":"mutable","name":"s","nameLocation":"2096:1:8","nodeType":"VariableDeclaration","scope":1295,"src":"2088:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2088:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1945:158:8"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[],"src":"2128:0:8"},"scope":1352,"src":"1930:626:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2140],"body":{"id":1310,"nodeType":"Block","src":"2695:48:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1304,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"2712:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2178_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1306,"indexExpression":{"id":1305,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"2720:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2712:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage","typeString":"struct Counters.Counter storage ref"}},"id":1307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2727:7:8","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2190,"src":"2712:22:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2178_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2178_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2712:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1303,"id":1309,"nodeType":"Return","src":"2705:31:8"}]},"documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"2562:50:8","text":" @dev See {IERC20Permit-nonces}."},"functionSelector":"7ecebe00","id":1311,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2626:6:8","nodeType":"FunctionDefinition","overrides":{"id":1300,"nodeType":"OverrideSpecifier","overrides":[],"src":"2668:8:8"},"parameters":{"id":1299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"owner","nameLocation":"2641:5:8","nodeType":"VariableDeclaration","scope":1311,"src":"2633:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"2633:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2632:15:8"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1311,"src":"2686:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"2686:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2685:9:8"},"scope":1352,"src":"2617:126:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2146],"body":{"id":1321,"nodeType":"Block","src":"2936:44:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1318,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"2953:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2953:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1317,"id":1320,"nodeType":"Return","src":"2946:27:8"}]},"documentation":{"id":1312,"nodeType":"StructuredDocumentation","src":"2749:60:8","text":" @dev See {IERC20Permit-DOMAIN_SEPARATOR}."},"functionSelector":"3644e515","id":1322,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2876:16:8","nodeType":"FunctionDefinition","overrides":{"id":1314,"nodeType":"OverrideSpecifier","overrides":[],"src":"2909:8:8"},"parameters":{"id":1313,"nodeType":"ParameterList","parameters":[],"src":"2892:2:8"},"returnParameters":{"id":1317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1322,"src":"2927:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2927:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2926:9:8"},"scope":1352,"src":"2867:113:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1350,"nodeType":"Block","src":"3188:126:8","statements":[{"assignments":[1334],"declarations":[{"constant":false,"id":1334,"mutability":"mutable","name":"nonce","nameLocation":"3223:5:8","nodeType":"VariableDeclaration","scope":1350,"src":"3198:30:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1333,"nodeType":"UserDefinedTypeName","pathNode":{"id":1332,"name":"Counters.Counter","nameLocations":["3198:8:8","3207:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2178,"src":"3198:16:8"},"referencedDeclaration":2178,"src":"3198:16:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"id":1338,"initialValue":{"baseExpression":{"id":1335,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"3231:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$2178_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1337,"indexExpression":{"id":1336,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"3239:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3231:14:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage","typeString":"struct Counters.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3198:47:8"},{"expression":{"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1339,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"3255:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1340,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"3265:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3271:7:8","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":2190,"src":"3265:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$2178_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2178_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3255:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1344,"nodeType":"ExpressionStatement","src":"3255:25:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1345,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"3290:5:8","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3296:9:8","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":2204,"src":"3290:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$2178_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$2178_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3290:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1349,"nodeType":"ExpressionStatement","src":"3290:17:8"}]},"documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"2986:120:8","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":1351,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3120:9:8","nodeType":"FunctionDefinition","parameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"owner","nameLocation":"3138:5:8","nodeType":"VariableDeclaration","scope":1351,"src":"3130:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1324,"name":"address","nodeType":"ElementaryTypeName","src":"3130:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3129:15:8"},"returnParameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"current","nameLocation":"3179:7:8","nodeType":"VariableDeclaration","scope":1351,"src":"3171:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"3171:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3170:17:8"},"scope":1352,"src":"3111:203:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1353,"src":"853:2463:8","usedErrors":[2259,2261]}],"src":"122:3195:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","exportedSymbols":{"Context":[2172],"Counters":[2246],"ECDSA":[3167],"EIP712":[3371],"ERC20":[1102],"ERC20Permit":[1352],"ERC20Votes":[2086],"IERC20":[1180],"IERC20Metadata":[2111],"IERC20Permit":[2147],"IERC5267":[491],"IERC5805":[500],"IERC6372":[515],"IVotes":[466],"Math":[4273],"SafeCast":[5814],"ShortString":[2251],"ShortStrings":[2462],"SignedMath":[5919],"StorageSlot":[2572],"Strings":[2801]},"id":2087,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1354,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"./ERC20Permit.sol","id":1355,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2087,"sourceUnit":1353,"src":"146:27:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5805.sol","file":"../../../interfaces/IERC5805.sol","id":1356,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2087,"sourceUnit":501,"src":"174:42:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../../../utils/math/Math.sol","id":1357,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2087,"sourceUnit":4274,"src":"217:38:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"../../../utils/math/SafeCast.sol","id":1358,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2087,"sourceUnit":5815,"src":"256:42:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1359,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2087,"sourceUnit":3168,"src":"299:47:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1361,"name":"ERC20Permit","nameLocations":["1275:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1352,"src":"1275:11:9"},"id":1362,"nodeType":"InheritanceSpecifier","src":"1275:11:9"},{"baseName":{"id":1363,"name":"IERC5805","nameLocations":["1288:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":500,"src":"1288:8:9"},"id":1364,"nodeType":"InheritanceSpecifier","src":"1288:8:9"}],"canonicalName":"ERC20Votes","contractDependencies":[],"contractKind":"contract","documentation":{"id":1360,"nodeType":"StructuredDocumentation","src":"348:894:9","text":" @dev Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's,\n and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1.\n NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module.\n This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either\n by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting\n power can be queried through the public accessors {getVotes} and {getPastVotes}.\n By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it\n requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked.\n _Available since v4.2._"},"fullyImplemented":true,"id":2086,"linearizedBaseContracts":[2086,500,466,515,1352,3371,491,2147,1102,2111,1180,2172],"name":"ERC20Votes","nameLocation":"1261:10:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Votes.Checkpoint","id":1369,"members":[{"constant":false,"id":1366,"mutability":"mutable","name":"fromBlock","nameLocation":"1338:9:9","nodeType":"VariableDeclaration","scope":1369,"src":"1331:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1365,"name":"uint32","nodeType":"ElementaryTypeName","src":"1331:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"votes","nameLocation":"1365:5:9","nodeType":"VariableDeclaration","scope":1369,"src":"1357:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1367,"name":"uint224","nodeType":"ElementaryTypeName","src":"1357:7:9","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"name":"Checkpoint","nameLocation":"1310:10:9","nodeType":"StructDefinition","scope":2086,"src":"1303:74:9","visibility":"public"},{"constant":true,"id":1374,"mutability":"constant","name":"_DELEGATION_TYPEHASH","nameLocation":"1408:20:9","nodeType":"VariableDeclaration","scope":2086,"src":"1383:127:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1383:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1449:60:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""},"value":"Delegation(address delegatee,uint256 nonce,uint256 expiry)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf","typeString":"literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""}],"id":1371,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1439:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1439:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":1378,"mutability":"mutable","name":"_delegates","nameLocation":"1553:10:9","nodeType":"VariableDeclaration","scope":2086,"src":"1517:46:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":1377,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1375,"name":"address","nodeType":"ElementaryTypeName","src":"1525:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1517:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1376,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1384,"mutability":"mutable","name":"_checkpoints","nameLocation":"1610:12:9","nodeType":"VariableDeclaration","scope":2086,"src":"1569:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"typeName":{"id":1383,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"1577:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1569:32:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1381,"nodeType":"UserDefinedTypeName","pathNode":{"id":1380,"name":"Checkpoint","nameLocations":["1588:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1369,"src":"1588:10:9"},"referencedDeclaration":1369,"src":"1588:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1382,"nodeType":"ArrayTypeName","src":"1588:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}}},"visibility":"private"},{"constant":false,"id":1388,"mutability":"mutable","name":"_totalSupplyCheckpoints","nameLocation":"1649:23:9","nodeType":"VariableDeclaration","scope":2086,"src":"1628:44:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1386,"nodeType":"UserDefinedTypeName","pathNode":{"id":1385,"name":"Checkpoint","nameLocations":["1628:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1369,"src":"1628:10:9"},"referencedDeclaration":1369,"src":"1628:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1387,"nodeType":"ArrayTypeName","src":"1628:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"private"},{"baseFunctions":[508],"body":{"id":1401,"nodeType":"Block","src":"1880:55:9","statements":[{"expression":{"arguments":[{"expression":{"id":1397,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1915:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1921:6:9","memberName":"number","nodeType":"MemberAccess","src":"1915:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1395,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"1897:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5814_$","typeString":"type(library SafeCast)"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1906:8:9","memberName":"toUint48","nodeType":"MemberAccess","referencedDeclaration":4926,"src":"1897:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint48_$","typeString":"function (uint256) pure returns (uint48)"}},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1897:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":1394,"id":1400,"nodeType":"Return","src":"1890:38:9"}]},"documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"1679:133:9","text":" @dev Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."},"functionSelector":"91ddadf4","id":1402,"implemented":true,"kind":"function","modifiers":[],"name":"clock","nameLocation":"1826:5:9","nodeType":"FunctionDefinition","overrides":{"id":1391,"nodeType":"OverrideSpecifier","overrides":[],"src":"1854:8:9"},"parameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"1831:2:9"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1402,"src":"1872:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1392,"name":"uint48","nodeType":"ElementaryTypeName","src":"1872:6:9","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"1871:8:9"},"scope":2086,"src":"1817:118:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[514],"body":{"id":1420,"nodeType":"Block","src":"2122:179:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1410,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"2189:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2189:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1412,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2200:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:6:9","memberName":"number","nodeType":"MemberAccess","src":"2200:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a2062726f6b656e20636c6f636b206d6f6465","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2214:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","typeString":"literal_string \"ERC20Votes: broken clock mode\""},"value":"ERC20Votes: broken clock mode"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df","typeString":"literal_string \"ERC20Votes: broken clock mode\""}],"id":1409,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2181:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:65:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1417,"nodeType":"ExpressionStatement","src":"2181:65:9"},{"expression":{"hexValue":"6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2263:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f79d44e499ce83a99049e0b7ebf2d6f56e249303be3c14798235137af5ea536","typeString":"literal_string \"mode=blocknumber&from=default\""},"value":"mode=blocknumber&from=default"},"functionReturnParameters":1408,"id":1419,"nodeType":"Return","src":"2256:38:9"}]},"documentation":{"id":1403,"nodeType":"StructuredDocumentation","src":"1941:48:9","text":" @dev Description of the clock"},"functionSelector":"4bf5d7e9","id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"CLOCK_MODE","nameLocation":"2056:10:9","nodeType":"FunctionDefinition","overrides":{"id":1405,"nodeType":"OverrideSpecifier","overrides":[],"src":"2089:8:9"},"parameters":{"id":1404,"nodeType":"ParameterList","parameters":[],"src":"2066:2:9"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1421,"src":"2107:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1406,"name":"string","nodeType":"ElementaryTypeName","src":"2107:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2106:15:9"},"scope":2086,"src":"2047:254:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1438,"nodeType":"Block","src":"2476:50:9","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1432,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"2493:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1434,"indexExpression":{"id":1433,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"2506:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2493:21:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1436,"indexExpression":{"id":1435,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"2515:3:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2493:26:9","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"functionReturnParameters":1431,"id":1437,"nodeType":"Return","src":"2486:33:9"}]},"documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"2307:66:9","text":" @dev Get the `pos`-th checkpoint for `account`."},"functionSelector":"f1127ed8","id":1439,"implemented":true,"kind":"function","modifiers":[],"name":"checkpoints","nameLocation":"2387:11:9","nodeType":"FunctionDefinition","parameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"account","nameLocation":"2407:7:9","nodeType":"VariableDeclaration","scope":1439,"src":"2399:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1423,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"pos","nameLocation":"2423:3:9","nodeType":"VariableDeclaration","scope":1439,"src":"2416:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1425,"name":"uint32","nodeType":"ElementaryTypeName","src":"2416:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2398:29:9"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1439,"src":"2457:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_memory_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1429,"nodeType":"UserDefinedTypeName","pathNode":{"id":1428,"name":"Checkpoint","nameLocations":["2457:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1369,"src":"2457:10:9"},"referencedDeclaration":1369,"src":"2457:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"src":"2456:19:9"},"scope":2086,"src":"2378:148:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1455,"nodeType":"Block","src":"2679:71:9","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1449,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"2714:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1451,"indexExpression":{"id":1450,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"2727:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2714:21:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2736:6:9","memberName":"length","nodeType":"MemberAccess","src":"2714:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1447,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"2696:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5814_$","typeString":"type(library SafeCast)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2705:8:9","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":4976,"src":"2696:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2696:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":1446,"id":1454,"nodeType":"Return","src":"2689:54:9"}]},"documentation":{"id":1440,"nodeType":"StructuredDocumentation","src":"2532:64:9","text":" @dev Get number of checkpoints for `account`."},"functionSelector":"6fcfff45","id":1456,"implemented":true,"kind":"function","modifiers":[],"name":"numCheckpoints","nameLocation":"2610:14:9","nodeType":"FunctionDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"mutability":"mutable","name":"account","nameLocation":"2633:7:9","nodeType":"VariableDeclaration","scope":1456,"src":"2625:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1441,"name":"address","nodeType":"ElementaryTypeName","src":"2625:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2624:17:9"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1456,"src":"2671:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1444,"name":"uint32","nodeType":"ElementaryTypeName","src":"2671:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2670:8:9"},"scope":2086,"src":"2601:149:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[443],"body":{"id":1469,"nodeType":"Block","src":"2921:43:9","statements":[{"expression":{"baseExpression":{"id":1465,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"2938:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1467,"indexExpression":{"id":1466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"2949:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2938:19:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1464,"id":1468,"nodeType":"Return","src":"2931:26:9"}]},"documentation":{"id":1457,"nodeType":"StructuredDocumentation","src":"2756:77:9","text":" @dev Get the address `account` is currently delegating to."},"functionSelector":"587cde1e","id":1470,"implemented":true,"kind":"function","modifiers":[],"name":"delegates","nameLocation":"2847:9:9","nodeType":"FunctionDefinition","overrides":{"id":1461,"nodeType":"OverrideSpecifier","overrides":[],"src":"2894:8:9"},"parameters":{"id":1460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"account","nameLocation":"2865:7:9","nodeType":"VariableDeclaration","scope":1470,"src":"2857:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1458,"name":"address","nodeType":"ElementaryTypeName","src":"2857:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2856:17:9"},"returnParameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1470,"src":"2912:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1462,"name":"address","nodeType":"ElementaryTypeName","src":"2912:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2911:9:9"},"scope":2086,"src":"2838:126:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[417],"body":{"id":1501,"nodeType":"Block","src":"3125:161:9","statements":[{"assignments":[1480],"declarations":[{"constant":false,"id":1480,"mutability":"mutable","name":"pos","nameLocation":"3143:3:9","nodeType":"VariableDeclaration","scope":1501,"src":"3135:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1479,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1485,"initialValue":{"expression":{"baseExpression":{"id":1481,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"3149:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1483,"indexExpression":{"id":1482,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"3162:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3149:21:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3171:6:9","memberName":"length","nodeType":"MemberAccess","src":"3149:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3135:42:9"},{"id":1500,"nodeType":"UncheckedBlock","src":"3187:93:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1486,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"3218:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3225:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3218:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1490,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"3233:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1492,"indexExpression":{"id":1491,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"3246:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3233:21:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},"id":1496,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1493,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"3255:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3261:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3255:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3233:30:9","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_storage","typeString":"struct ERC20Votes.Checkpoint storage ref"}},"id":1497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3264:5:9","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1368,"src":"3233:36:9","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3218:51:9","trueExpression":{"hexValue":"30","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3229:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1478,"id":1499,"nodeType":"Return","src":"3211:58:9"}]}]},"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"2970:68:9","text":" @dev Gets the current votes balance for `account`"},"functionSelector":"9ab24eb0","id":1502,"implemented":true,"kind":"function","modifiers":[],"name":"getVotes","nameLocation":"3052:8:9","nodeType":"FunctionDefinition","overrides":{"id":1475,"nodeType":"OverrideSpecifier","overrides":[],"src":"3098:8:9"},"parameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"account","nameLocation":"3069:7:9","nodeType":"VariableDeclaration","scope":1502,"src":"3061:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1472,"name":"address","nodeType":"ElementaryTypeName","src":"3061:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3060:17:9"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1502,"src":"3116:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1476,"name":"uint256","nodeType":"ElementaryTypeName","src":"3116:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3115:9:9"},"scope":2086,"src":"3043:243:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[427],"body":{"id":1528,"nodeType":"Block","src":"3571:143:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1514,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"3589:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1515,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"3601:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"3589:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3610:27:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""},"value":"ERC20Votes: future lookup"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""}],"id":1513,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3581:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3581:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1520,"nodeType":"ExpressionStatement","src":"3581:57:9"},{"expression":{"arguments":[{"baseExpression":{"id":1522,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"3674:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1524,"indexExpression":{"id":1523,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"3687:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3674:21:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1525,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"3697:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1521,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"3655:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3655:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1512,"id":1527,"nodeType":"Return","src":"3648:59:9"}]},"documentation":{"id":1503,"nodeType":"StructuredDocumentation","src":"3292:169:9","text":" @dev Retrieve the number of votes for `account` at the end of `timepoint`.\n Requirements:\n - `timepoint` must be in the past"},"functionSelector":"3a46b1a8","id":1529,"implemented":true,"kind":"function","modifiers":[],"name":"getPastVotes","nameLocation":"3475:12:9","nodeType":"FunctionDefinition","overrides":{"id":1509,"nodeType":"OverrideSpecifier","overrides":[],"src":"3544:8:9"},"parameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"account","nameLocation":"3496:7:9","nodeType":"VariableDeclaration","scope":1529,"src":"3488:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1504,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1507,"mutability":"mutable","name":"timepoint","nameLocation":"3513:9:9","nodeType":"VariableDeclaration","scope":1529,"src":"3505:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"3505:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3487:36:9"},"returnParameters":{"id":1512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1529,"src":"3562:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1510,"name":"uint256","nodeType":"ElementaryTypeName","src":"3562:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3561:9:9"},"scope":2086,"src":"3466:248:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[435],"body":{"id":1551,"nodeType":"Block","src":"4070:145:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1539,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"4088:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1540,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"4100:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4100:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"4088:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4109:27:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""},"value":"ERC20Votes: future lookup"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72","typeString":"literal_string \"ERC20Votes: future lookup\""}],"id":1538,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4080:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4080:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1545,"nodeType":"ExpressionStatement","src":"4080:57:9"},{"expression":{"arguments":[{"id":1547,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"4173:23:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1548,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"4198:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1546,"name":"_checkpointsLookup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"4154:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1537,"id":1550,"nodeType":"Return","src":"4147:61:9"}]},"documentation":{"id":1530,"nodeType":"StructuredDocumentation","src":"3720:251:9","text":" @dev Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances.\n It is NOT the sum of all the delegated votes!\n Requirements:\n - `timepoint` must be in the past"},"functionSelector":"8e539e8c","id":1552,"implemented":true,"kind":"function","modifiers":[],"name":"getPastTotalSupply","nameLocation":"3985:18:9","nodeType":"FunctionDefinition","overrides":{"id":1534,"nodeType":"OverrideSpecifier","overrides":[],"src":"4043:8:9"},"parameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1532,"mutability":"mutable","name":"timepoint","nameLocation":"4012:9:9","nodeType":"VariableDeclaration","scope":1552,"src":"4004:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1531,"name":"uint256","nodeType":"ElementaryTypeName","src":"4004:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4003:19:9"},"returnParameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1552,"src":"4061:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1535,"name":"uint256","nodeType":"ElementaryTypeName","src":"4061:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4060:9:9"},"scope":2086,"src":"3976:239:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1658,"nodeType":"Block","src":"4405:1789:9","statements":[{"assignments":[1565],"declarations":[{"constant":false,"id":1565,"mutability":"mutable","name":"length","nameLocation":"5501:6:9","nodeType":"VariableDeclaration","scope":1658,"src":"5493:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1564,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1568,"initialValue":{"expression":{"id":1566,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"5510:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5516:6:9","memberName":"length","nodeType":"MemberAccess","src":"5510:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5493:29:9"},{"assignments":[1570],"declarations":[{"constant":false,"id":1570,"mutability":"mutable","name":"low","nameLocation":"5541:3:9","nodeType":"VariableDeclaration","scope":1658,"src":"5533:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"5533:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1572,"initialValue":{"hexValue":"30","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5547:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5533:15:9"},{"assignments":[1574],"declarations":[{"constant":false,"id":1574,"mutability":"mutable","name":"high","nameLocation":"5566:4:9","nodeType":"VariableDeclaration","scope":1658,"src":"5558:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"5558:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1576,"initialValue":{"id":1575,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"5573:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5558:21:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1577,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"5594:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"35","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5603:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"5594:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1610,"nodeType":"IfStatement","src":"5590:242:9","trueBody":{"id":1609,"nodeType":"Block","src":"5606:226:9","statements":[{"assignments":[1581],"declarations":[{"constant":false,"id":1581,"mutability":"mutable","name":"mid","nameLocation":"5628:3:9","nodeType":"VariableDeclaration","scope":1609,"src":"5620:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1580,"name":"uint256","nodeType":"ElementaryTypeName","src":"5620:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1588,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1582,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"5634:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1585,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"5653:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1583,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"5643:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4273_$","typeString":"type(library Math)"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5648:4:9","memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":3777,"src":"5643:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5634:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5620:40:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1590,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"5692:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"id":1591,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"5699:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1589,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"5678:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1369_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5678:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5704:9:9","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1366,"src":"5678:35:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1594,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"5716:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5678:47:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1607,"nodeType":"Block","src":"5776:46:9","statements":[{"expression":{"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1601,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"5794:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1602,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"5800:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5806:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5800:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5794:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1606,"nodeType":"ExpressionStatement","src":"5794:13:9"}]},"id":1608,"nodeType":"IfStatement","src":"5674:148:9","trueBody":{"id":1600,"nodeType":"Block","src":"5727:43:9","statements":[{"expression":{"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1596,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"5745:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1597,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"5752:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5745:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1599,"nodeType":"ExpressionStatement","src":"5745:10:9"}]}}]}},{"body":{"id":1642,"nodeType":"Block","src":"5861:223:9","statements":[{"assignments":[1615],"declarations":[{"constant":false,"id":1615,"mutability":"mutable","name":"mid","nameLocation":"5883:3:9","nodeType":"VariableDeclaration","scope":1642,"src":"5875:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"5875:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1621,"initialValue":{"arguments":[{"id":1618,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"5902:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1619,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"5907:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1616,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"5889:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4273_$","typeString":"type(library Math)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5894:7:9","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3473,"src":"5889:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5875:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1623,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"5944:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"id":1624,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"5951:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1622,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"5930:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1369_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5930:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5956:9:9","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1366,"src":"5930:35:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1627,"name":"timepoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"5968:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5930:47:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1640,"nodeType":"Block","src":"6028:46:9","statements":[{"expression":{"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1634,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"6046:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1635,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"6052:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6058:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6052:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6046:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1639,"nodeType":"ExpressionStatement","src":"6046:13:9"}]},"id":1641,"nodeType":"IfStatement","src":"5926:148:9","trueBody":{"id":1633,"nodeType":"Block","src":"5979:43:9","statements":[{"expression":{"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1629,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"5997:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1630,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"6004:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5997:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1632,"nodeType":"ExpressionStatement","src":"5997:10:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1611,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"5849:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1612,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"5855:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5849:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1643,"nodeType":"WhileStatement","src":"5842:242:9"},{"id":1657,"nodeType":"UncheckedBlock","src":"6094:94:9","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1644,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"6125:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6133:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6125:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"arguments":[{"id":1649,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"6155:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1650,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"6162:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6169:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6162:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1648,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"6141:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1369_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6141:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1654,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6172:5:9","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1368,"src":"6141:36:9","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6125:52:9","trueExpression":{"hexValue":"30","id":1647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6137:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1563,"id":1656,"nodeType":"Return","src":"6118:59:9"}]}]},"documentation":{"id":1553,"nodeType":"StructuredDocumentation","src":"4221:73:9","text":" @dev Lookup a value in a list of (sorted) checkpoints."},"id":1659,"implemented":true,"kind":"function","modifiers":[],"name":"_checkpointsLookup","nameLocation":"4308:18:9","nodeType":"FunctionDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"ckpts","nameLocation":"4348:5:9","nodeType":"VariableDeclaration","scope":1659,"src":"4327:26:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1555,"nodeType":"UserDefinedTypeName","pathNode":{"id":1554,"name":"Checkpoint","nameLocations":["4327:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1369,"src":"4327:10:9"},"referencedDeclaration":1369,"src":"4327:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1556,"nodeType":"ArrayTypeName","src":"4327:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1559,"mutability":"mutable","name":"timepoint","nameLocation":"4363:9:9","nodeType":"VariableDeclaration","scope":1659,"src":"4355:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"4355:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4326:47:9"},"returnParameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1659,"src":"4396:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1561,"name":"uint256","nodeType":"ElementaryTypeName","src":"4396:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4395:9:9"},"scope":2086,"src":"4299:1895:9","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[449],"body":{"id":1672,"nodeType":"Block","src":"6336:51:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1667,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"6356:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6356:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1669,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1662,"src":"6370:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1666,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"6346:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1671,"nodeType":"ExpressionStatement","src":"6346:34:9"}]},"documentation":{"id":1660,"nodeType":"StructuredDocumentation","src":"6200:70:9","text":" @dev Delegate votes from the sender to `delegatee`."},"functionSelector":"5c19a95c","id":1673,"implemented":true,"kind":"function","modifiers":[],"name":"delegate","nameLocation":"6284:8:9","nodeType":"FunctionDefinition","overrides":{"id":1664,"nodeType":"OverrideSpecifier","overrides":[],"src":"6327:8:9"},"parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1662,"mutability":"mutable","name":"delegatee","nameLocation":"6301:9:9","nodeType":"VariableDeclaration","scope":1673,"src":"6293:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1661,"name":"address","nodeType":"ElementaryTypeName","src":"6293:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6292:19:9"},"returnParameters":{"id":1665,"nodeType":"ParameterList","parameters":[],"src":"6336:0:9"},"scope":2086,"src":"6275:112:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[465],"body":{"id":1732,"nodeType":"Block","src":"6646:392:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1691,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6664:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6670:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"6664:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1693,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"6683:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6664:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6691:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""},"value":"ERC20Votes: signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257","typeString":"literal_string \"ERC20Votes: signature expired\""}],"id":1690,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6656:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1697,"nodeType":"ExpressionStatement","src":"6656:67:9"},{"assignments":[1699],"declarations":[{"constant":false,"id":1699,"mutability":"mutable","name":"signer","nameLocation":"6741:6:9","nodeType":"VariableDeclaration","scope":1732,"src":"6733:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"6733:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1717,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1706,"name":"_DELEGATION_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"6815:20:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1707,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"6837:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1708,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"6848:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1709,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"6855:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1704,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6804:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6808:6:9","memberName":"encode","nodeType":"MemberAccess","src":"6804:10:9","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6804:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1703,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6794:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6794:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1702,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"6777:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6777:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1713,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"6878:1:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1714,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"6893:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1715,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"6908:1:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1700,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"6750:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3167_$","typeString":"type(library ECDSA)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6756:7:9","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3102,"src":"6750:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6750:169:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6733:186:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1719,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"6937:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1721,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6956:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1720,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"6946:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6946:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6937:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6965:27:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""},"value":"ERC20Votes: invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872","typeString":"literal_string \"ERC20Votes: invalid nonce\""}],"id":1718,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6929:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:64:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1726,"nodeType":"ExpressionStatement","src":"6929:64:9"},{"expression":{"arguments":[{"id":1728,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"7013:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1729,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"7021:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1727,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"7003:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7003:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1731,"nodeType":"ExpressionStatement","src":"7003:28:9"}]},"documentation":{"id":1674,"nodeType":"StructuredDocumentation","src":"6393:66:9","text":" @dev Delegates votes from signer to `delegatee`"},"functionSelector":"c3cda520","id":1733,"implemented":true,"kind":"function","modifiers":[],"name":"delegateBySig","nameLocation":"6473:13:9","nodeType":"FunctionDefinition","overrides":{"id":1688,"nodeType":"OverrideSpecifier","overrides":[],"src":"6637:8:9"},"parameters":{"id":1687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"delegatee","nameLocation":"6504:9:9","nodeType":"VariableDeclaration","scope":1733,"src":"6496:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1675,"name":"address","nodeType":"ElementaryTypeName","src":"6496:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1678,"mutability":"mutable","name":"nonce","nameLocation":"6531:5:9","nodeType":"VariableDeclaration","scope":1733,"src":"6523:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1677,"name":"uint256","nodeType":"ElementaryTypeName","src":"6523:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1680,"mutability":"mutable","name":"expiry","nameLocation":"6554:6:9","nodeType":"VariableDeclaration","scope":1733,"src":"6546:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"6546:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1682,"mutability":"mutable","name":"v","nameLocation":"6576:1:9","nodeType":"VariableDeclaration","scope":1733,"src":"6570:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1681,"name":"uint8","nodeType":"ElementaryTypeName","src":"6570:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1684,"mutability":"mutable","name":"r","nameLocation":"6595:1:9","nodeType":"VariableDeclaration","scope":1733,"src":"6587:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6587:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1686,"mutability":"mutable","name":"s","nameLocation":"6614:1:9","nodeType":"VariableDeclaration","scope":1733,"src":"6606:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6606:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6486:135:9"},"returnParameters":{"id":1689,"nodeType":"ParameterList","parameters":[],"src":"6646:0:9"},"scope":2086,"src":"6464:574:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1745,"nodeType":"Block","src":"7202:41:9","statements":[{"expression":{"expression":{"arguments":[{"id":1741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7224:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":1740,"name":"uint224","nodeType":"ElementaryTypeName","src":"7224:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":1739,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7219:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7219:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7233:3:9","memberName":"max","nodeType":"MemberAccess","src":"7219:17:9","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":1738,"id":1744,"nodeType":"Return","src":"7212:24:9"}]},"documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"7044:91:9","text":" @dev Maximum token supply. Defaults to `type(uint224).max` (2^224^ - 1)."},"id":1746,"implemented":true,"kind":"function","modifiers":[],"name":"_maxSupply","nameLocation":"7149:10:9","nodeType":"FunctionDefinition","parameters":{"id":1735,"nodeType":"ParameterList","parameters":[],"src":"7159:2:9"},"returnParameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1746,"src":"7193:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":1736,"name":"uint224","nodeType":"ElementaryTypeName","src":"7193:7:9","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"7192:9:9"},"scope":2086,"src":"7140:103:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[919],"body":{"id":1777,"nodeType":"Block","src":"7406:211:9","statements":[{"expression":{"arguments":[{"id":1758,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"7428:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1759,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"7437:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1755,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7416:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$2086_$","typeString":"type(contract super ERC20Votes)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7422:5:9","memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":919,"src":"7416:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7416:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1761,"nodeType":"ExpressionStatement","src":"7416:28:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1763,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"7462:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7462:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1765,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"7479:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint224_$","typeString":"function () view returns (uint224)"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7479:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"7462:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f766572666c6f77696e6720766f746573","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7493:50:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""},"value":"ERC20Votes: total supply risks overflowing votes"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699","typeString":"literal_string \"ERC20Votes: total supply risks overflowing votes\""}],"id":1762,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7454:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7454:90:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1770,"nodeType":"ExpressionStatement","src":"7454:90:9"},{"expression":{"arguments":[{"id":1772,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7572:23:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1773,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"7597:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1774,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"7603:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1771,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"7555:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7555:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1776,"nodeType":"ExpressionStatement","src":"7555:55:9"}]},"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"7249:78:9","text":" @dev Snapshots the totalSupply after it has been increased."},"id":1778,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7341:5:9","nodeType":"FunctionDefinition","overrides":{"id":1753,"nodeType":"OverrideSpecifier","overrides":[],"src":"7397:8:9"},"parameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"account","nameLocation":"7355:7:9","nodeType":"VariableDeclaration","scope":1778,"src":"7347:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"7347:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1751,"mutability":"mutable","name":"amount","nameLocation":"7372:6:9","nodeType":"VariableDeclaration","scope":1778,"src":"7364:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"7364:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7346:33:9"},"returnParameters":{"id":1754,"nodeType":"ParameterList","parameters":[],"src":"7406:0:9"},"scope":2086,"src":"7332:285:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[991],"body":{"id":1800,"nodeType":"Block","src":"7780:116:9","statements":[{"expression":{"arguments":[{"id":1790,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"7802:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1791,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"7811:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1787,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7790:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$2086_$","typeString":"type(contract super ERC20Votes)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7796:5:9","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":991,"src":"7790:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7790:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1793,"nodeType":"ExpressionStatement","src":"7790:28:9"},{"expression":{"arguments":[{"id":1795,"name":"_totalSupplyCheckpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7846:23:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1796,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"7871:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1797,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"7882:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1794,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"7829:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7829:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":1799,"nodeType":"ExpressionStatement","src":"7829:60:9"}]},"documentation":{"id":1779,"nodeType":"StructuredDocumentation","src":"7623:78:9","text":" @dev Snapshots the totalSupply after it has been decreased."},"id":1801,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7715:5:9","nodeType":"FunctionDefinition","overrides":{"id":1785,"nodeType":"OverrideSpecifier","overrides":[],"src":"7771:8:9"},"parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"account","nameLocation":"7729:7:9","nodeType":"VariableDeclaration","scope":1801,"src":"7721:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1780,"name":"address","nodeType":"ElementaryTypeName","src":"7721:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"amount","nameLocation":"7746:6:9","nodeType":"VariableDeclaration","scope":1801,"src":"7738:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"7738:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7720:33:9"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[],"src":"7780:0:9"},"scope":2086,"src":"7706:190:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1101],"body":{"id":1830,"nodeType":"Block","src":"8133:127:9","statements":[{"expression":{"arguments":[{"id":1815,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"8169:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1816,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"8175:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1817,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"8179:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1812,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"8143:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Votes_$2086_$","typeString":"type(contract super ERC20Votes)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8149:19:9","memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1101,"src":"8143:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8143:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1819,"nodeType":"ExpressionStatement","src":"8143:43:9"},{"expression":{"arguments":[{"arguments":[{"id":1822,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"8224:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1821,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"8214:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8214:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1825,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"8241:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1824,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"8231:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8231:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1827,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"8246:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1820,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"8197:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8197:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1829,"nodeType":"ExpressionStatement","src":"8197:56:9"}]},"documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"7902:129:9","text":" @dev Move voting power when tokens are transferred.\n Emits a {IVotes-DelegateVotesChanged} event."},"id":1831,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"8045:19:9","nodeType":"FunctionDefinition","overrides":{"id":1810,"nodeType":"OverrideSpecifier","overrides":[],"src":"8124:8:9"},"parameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1804,"mutability":"mutable","name":"from","nameLocation":"8073:4:9","nodeType":"VariableDeclaration","scope":1831,"src":"8065:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1803,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1806,"mutability":"mutable","name":"to","nameLocation":"8087:2:9","nodeType":"VariableDeclaration","scope":1831,"src":"8079:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"8079:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"amount","nameLocation":"8099:6:9","nodeType":"VariableDeclaration","scope":1831,"src":"8091:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"8091:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:42:9"},"returnParameters":{"id":1811,"nodeType":"ParameterList","parameters":[],"src":"8133:0:9"},"scope":2086,"src":"8036:224:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1869,"nodeType":"Block","src":"8505:306:9","statements":[{"assignments":[1840],"declarations":[{"constant":false,"id":1840,"mutability":"mutable","name":"currentDelegate","nameLocation":"8523:15:9","nodeType":"VariableDeclaration","scope":1869,"src":"8515:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1839,"name":"address","nodeType":"ElementaryTypeName","src":"8515:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1844,"initialValue":{"arguments":[{"id":1842,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"8551:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1841,"name":"delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"8541:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_address_$","typeString":"function (address) view returns (address)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8541:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8515:46:9"},{"assignments":[1846],"declarations":[{"constant":false,"id":1846,"mutability":"mutable","name":"delegatorBalance","nameLocation":"8579:16:9","nodeType":"VariableDeclaration","scope":1869,"src":"8571:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1845,"name":"uint256","nodeType":"ElementaryTypeName","src":"8571:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1850,"initialValue":{"arguments":[{"id":1848,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"8608:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1847,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"8598:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8598:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8571:47:9"},{"expression":{"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1851,"name":"_delegates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"8628:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":1853,"indexExpression":{"id":1852,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"8639:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8628:21:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1854,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"8652:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8628:33:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1856,"nodeType":"ExpressionStatement","src":"8628:33:9"},{"eventCall":{"arguments":[{"id":1858,"name":"delegator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"8693:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1859,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"8704:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1860,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"8721:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1857,"name":"DelegateChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"8677:15:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (address,address,address)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8677:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1862,"nodeType":"EmitStatement","src":"8672:59:9"},{"expression":{"arguments":[{"id":1864,"name":"currentDelegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"8759:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1865,"name":"delegatee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"8776:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1866,"name":"delegatorBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"8787:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1863,"name":"_moveVotingPower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"8742:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8742:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1868,"nodeType":"ExpressionStatement","src":"8742:62:9"}]},"documentation":{"id":1832,"nodeType":"StructuredDocumentation","src":"8266:160:9","text":" @dev Change delegation for `delegator` to `delegatee`.\n Emits events {IVotes-DelegateChanged} and {IVotes-DelegateVotesChanged}."},"id":1870,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"8440:9:9","nodeType":"FunctionDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1834,"mutability":"mutable","name":"delegator","nameLocation":"8458:9:9","nodeType":"VariableDeclaration","scope":1870,"src":"8450:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1833,"name":"address","nodeType":"ElementaryTypeName","src":"8450:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"delegatee","nameLocation":"8477:9:9","nodeType":"VariableDeclaration","scope":1870,"src":"8469:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"8469:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8449:38:9"},"returnParameters":{"id":1838,"nodeType":"ParameterList","parameters":[],"src":"8505:0:9"},"scope":2086,"src":"8431:380:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1940,"nodeType":"Block","src":"8893:521:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1879,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"8907:3:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1880,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"8914:3:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8907:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1882,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"8921:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8930:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8921:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8907:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1939,"nodeType":"IfStatement","src":"8903:505:9","trueBody":{"id":1938,"nodeType":"Block","src":"8933:475:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1886,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"8951:3:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8966:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8958:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1887,"name":"address","nodeType":"ElementaryTypeName","src":"8958:7:9","typeDescriptions":{}}},"id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8958:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8951:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1911,"nodeType":"IfStatement","src":"8947:221:9","trueBody":{"id":1910,"nodeType":"Block","src":"8970:198:9","statements":[{"assignments":[1893,1895],"declarations":[{"constant":false,"id":1893,"mutability":"mutable","name":"oldWeight","nameLocation":"8997:9:9","nodeType":"VariableDeclaration","scope":1910,"src":"8989:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"8989:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1895,"mutability":"mutable","name":"newWeight","nameLocation":"9016:9:9","nodeType":"VariableDeclaration","scope":1910,"src":"9008:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1894,"name":"uint256","nodeType":"ElementaryTypeName","src":"9008:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1903,"initialValue":{"arguments":[{"baseExpression":{"id":1897,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"9046:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1899,"indexExpression":{"id":1898,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"9059:3:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9046:17:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1900,"name":"_subtract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"9065:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1901,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"9076:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1896,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"9029:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9029:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8988:95:9"},{"eventCall":{"arguments":[{"id":1905,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"9127:3:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1906,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"9132:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1907,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"9143:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1904,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"9106:20:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9106:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1909,"nodeType":"EmitStatement","src":"9101:52:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1912,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"9186:3:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9193:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1913,"name":"address","nodeType":"ElementaryTypeName","src":"9193:7:9","typeDescriptions":{}}},"id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9193:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9186:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1937,"nodeType":"IfStatement","src":"9182:216:9","trueBody":{"id":1936,"nodeType":"Block","src":"9205:193:9","statements":[{"assignments":[1919,1921],"declarations":[{"constant":false,"id":1919,"mutability":"mutable","name":"oldWeight","nameLocation":"9232:9:9","nodeType":"VariableDeclaration","scope":1936,"src":"9224:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1918,"name":"uint256","nodeType":"ElementaryTypeName","src":"9224:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1921,"mutability":"mutable","name":"newWeight","nameLocation":"9251:9:9","nodeType":"VariableDeclaration","scope":1936,"src":"9243:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1920,"name":"uint256","nodeType":"ElementaryTypeName","src":"9243:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1929,"initialValue":{"arguments":[{"baseExpression":{"id":1923,"name":"_checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"9281:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_$","typeString":"mapping(address => struct ERC20Votes.Checkpoint storage ref[] storage ref)"}},"id":1925,"indexExpression":{"id":1924,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"9294:3:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9281:17:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"}},{"id":1926,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"9300:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},{"id":1927,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"9306:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage ref"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1922,"name":"_writeCheckpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"9264:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr_$_t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,function (uint256,uint256) view returns (uint256),uint256) returns (uint256,uint256)"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9264:49:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9223:90:9"},{"eventCall":{"arguments":[{"id":1931,"name":"dst","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"9357:3:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1932,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"9362:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1933,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"9373:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1930,"name":"DelegateVotesChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"9336:20:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9336:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1935,"nodeType":"EmitStatement","src":"9331:52:9"}]}}]}}]},"id":1941,"implemented":true,"kind":"function","modifiers":[],"name":"_moveVotingPower","nameLocation":"8826:16:9","nodeType":"FunctionDefinition","parameters":{"id":1877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"src","nameLocation":"8851:3:9","nodeType":"VariableDeclaration","scope":1941,"src":"8843:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1871,"name":"address","nodeType":"ElementaryTypeName","src":"8843:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1874,"mutability":"mutable","name":"dst","nameLocation":"8864:3:9","nodeType":"VariableDeclaration","scope":1941,"src":"8856:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"8856:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1876,"mutability":"mutable","name":"amount","nameLocation":"8877:6:9","nodeType":"VariableDeclaration","scope":1941,"src":"8869:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"8869:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8842:42:9"},"returnParameters":{"id":1878,"nodeType":"ParameterList","parameters":[],"src":"8893:0:9"},"scope":2086,"src":"8817:597:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2041,"nodeType":"Block","src":"9628:560:9","statements":[{"assignments":[1965],"declarations":[{"constant":false,"id":1965,"mutability":"mutable","name":"pos","nameLocation":"9646:3:9","nodeType":"VariableDeclaration","scope":2041,"src":"9638:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1964,"name":"uint256","nodeType":"ElementaryTypeName","src":"9638:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1968,"initialValue":{"expression":{"id":1966,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"9652:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9658:6:9","memberName":"length","nodeType":"MemberAccess","src":"9652:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9638:26:9"},{"id":2040,"nodeType":"UncheckedBlock","src":"9675:507:9","statements":[{"assignments":[1971],"declarations":[{"constant":false,"id":1971,"mutability":"mutable","name":"oldCkpt","nameLocation":"9717:7:9","nodeType":"VariableDeclaration","scope":2040,"src":"9699:25:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_memory_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":1970,"nodeType":"UserDefinedTypeName","pathNode":{"id":1969,"name":"Checkpoint","nameLocations":["9699:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1369,"src":"9699:10:9"},"referencedDeclaration":1369,"src":"9699:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"id":1986,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1972,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"9727:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9727:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1980,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"9771:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1981,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"9778:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9784:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9778:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1979,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"9757:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1369_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9757:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9727:59:9","trueExpression":{"arguments":[{"hexValue":"30","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9749:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9752:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1975,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"9738:10:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$1369_storage_ptr_$","typeString":"type(struct ERC20Votes.Checkpoint storage pointer)"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9738:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"nodeType":"VariableDeclarationStatement","src":"9699:87:9"},{"expression":{"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1987,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"9801:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1988,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"9813:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"id":1989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9821:5:9","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1368,"src":"9813:13:9","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9801:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1991,"nodeType":"ExpressionStatement","src":"9801:25:9"},{"expression":{"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1992,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"9840:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1994,"name":"oldWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"9855:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1995,"name":"delta","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"9866:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1993,"name":"op","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"9852:2:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9852:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9840:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1998,"nodeType":"ExpressionStatement","src":"9840:32:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1999,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"9891:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9897:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9891:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2002,"name":"oldCkpt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"9902:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}},"id":2003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9910:9:9","memberName":"fromBlock","nodeType":"MemberAccess","referencedDeclaration":1366,"src":"9902:17:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2004,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"9923:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"9902:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9891:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2038,"nodeType":"Block","src":"10038:134:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2028,"name":"clock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"10108:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint48_$","typeString":"function () view returns (uint48)"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10108:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"expression":{"id":2026,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"10090:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5814_$","typeString":"type(library SafeCast)"}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10099:8:9","memberName":"toUint32","nodeType":"MemberAccess","referencedDeclaration":4976,"src":"10090:17:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint32_$","typeString":"function (uint256) pure returns (uint32)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10090:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":2033,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"10144:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2031,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"10125:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5814_$","typeString":"type(library SafeCast)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10134:9:9","memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":4376,"src":"10125:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10125:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint224","typeString":"uint224"}],"id":2025,"name":"Checkpoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"10067:10:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Checkpoint_$1369_storage_ptr_$","typeString":"type(struct ERC20Votes.Checkpoint storage pointer)"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10079:9:9","10118:5:9"],"names":["fromBlock","votes"],"nodeType":"FunctionCall","src":"10067:89:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Checkpoint_$1369_memory_ptr","typeString":"struct ERC20Votes.Checkpoint memory"}],"expression":{"id":2022,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"10056:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10062:4:9","memberName":"push","nodeType":"MemberAccess","src":"10056:10:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr_$_t_struct$_Checkpoint_$1369_storage_$returns$__$attached_to$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,struct ERC20Votes.Checkpoint storage ref)"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:101:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2037,"nodeType":"ExpressionStatement","src":"10056:101:9"}]},"id":2039,"nodeType":"IfStatement","src":"9887:285:9","trueBody":{"id":2021,"nodeType":"Block","src":"9932:100:9","statements":[{"expression":{"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2009,"name":"ckpts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"9964:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2010,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"9971:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9977:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9971:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage ref[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2008,"name":"_unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"9950:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Checkpoint_$1369_storage_ptr_$","typeString":"function (struct ERC20Votes.Checkpoint storage ref[] storage pointer,uint256) pure returns (struct ERC20Votes.Checkpoint storage pointer)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9950:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_storage_ptr","typeString":"struct ERC20Votes.Checkpoint storage pointer"}},"id":2014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9980:5:9","memberName":"votes","nodeType":"MemberAccess","referencedDeclaration":1368,"src":"9950:35:9","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2017,"name":"newWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"10007:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2015,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"9988:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5814_$","typeString":"type(library SafeCast)"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9997:9:9","memberName":"toUint224","nodeType":"MemberAccess","referencedDeclaration":4376,"src":"9988:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint224_$","typeString":"function (uint256) pure returns (uint224)"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9988:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"9950:67:9","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"id":2020,"nodeType":"ExpressionStatement","src":"9950:67:9"}]}}]}]},"id":2042,"implemented":true,"kind":"function","modifiers":[],"name":"_writeCheckpoint","nameLocation":"9429:16:9","nodeType":"FunctionDefinition","parameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1945,"mutability":"mutable","name":"ckpts","nameLocation":"9476:5:9","nodeType":"VariableDeclaration","scope":2042,"src":"9455:26:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":1943,"nodeType":"UserDefinedTypeName","pathNode":{"id":1942,"name":"Checkpoint","nameLocations":["9455:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1369,"src":"9455:10:9"},"referencedDeclaration":1369,"src":"9455:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":1944,"nodeType":"ArrayTypeName","src":"9455:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":1955,"mutability":"mutable","name":"op","nameLocation":"9541:2:9","nodeType":"VariableDeclaration","scope":2042,"src":"9491:52:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"typeName":{"id":1954,"nodeType":"FunctionTypeName","parameterTypes":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1954,"src":"9500:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1946,"name":"uint256","nodeType":"ElementaryTypeName","src":"9500:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1954,"src":"9509:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"9509:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9499:18:9"},"returnParameterTypes":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1954,"src":"9532:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1951,"name":"uint256","nodeType":"ElementaryTypeName","src":"9532:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9531:9:9"},"src":"9491:52:9","stateMutability":"view","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"},"visibility":"internal"},"visibility":"internal"},{"constant":false,"id":1957,"mutability":"mutable","name":"delta","nameLocation":"9561:5:9","nodeType":"VariableDeclaration","scope":2042,"src":"9553:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1956,"name":"uint256","nodeType":"ElementaryTypeName","src":"9553:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9445:127:9"},"returnParameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"oldWeight","nameLocation":"9598:9:9","nodeType":"VariableDeclaration","scope":2042,"src":"9590:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"newWeight","nameLocation":"9617:9:9","nodeType":"VariableDeclaration","scope":2042,"src":"9609:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"9609:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:38:9"},"scope":2086,"src":"9420:768:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2055,"nodeType":"Block","src":"10261:29:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2051,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"10278:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2052,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"10282:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10278:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2050,"id":2054,"nodeType":"Return","src":"10271:12:9"}]},"id":2056,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"10203:4:9","nodeType":"FunctionDefinition","parameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"a","nameLocation":"10216:1:9","nodeType":"VariableDeclaration","scope":2056,"src":"10208:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"10208:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2046,"mutability":"mutable","name":"b","nameLocation":"10227:1:9","nodeType":"VariableDeclaration","scope":2056,"src":"10219:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"10219:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10207:22:9"},"returnParameters":{"id":2050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2056,"src":"10252:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2048,"name":"uint256","nodeType":"ElementaryTypeName","src":"10252:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10251:9:9"},"scope":2086,"src":"10194:96:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2069,"nodeType":"Block","src":"10368:29:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2065,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"10385:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2066,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"10389:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10385:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2064,"id":2068,"nodeType":"Return","src":"10378:12:9"}]},"id":2070,"implemented":true,"kind":"function","modifiers":[],"name":"_subtract","nameLocation":"10305:9:9","nodeType":"FunctionDefinition","parameters":{"id":2061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"a","nameLocation":"10323:1:9","nodeType":"VariableDeclaration","scope":2070,"src":"10315:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2057,"name":"uint256","nodeType":"ElementaryTypeName","src":"10315:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2060,"mutability":"mutable","name":"b","nameLocation":"10334:1:9","nodeType":"VariableDeclaration","scope":2070,"src":"10326:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"10326:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10314:22:9"},"returnParameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2070,"src":"10359:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2062,"name":"uint256","nodeType":"ElementaryTypeName","src":"10359:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10358:9:9"},"scope":2086,"src":"10296:101:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2084,"nodeType":"Block","src":"10653:126:9","statements":[{"AST":{"nodeType":"YulBlock","src":"10672:101:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10693:1:9","type":"","value":"0"},{"name":"ckpts.slot","nodeType":"YulIdentifier","src":"10696:10:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10686:6:9"},"nodeType":"YulFunctionCall","src":"10686:21:9"},"nodeType":"YulExpressionStatement","src":"10686:21:9"},{"nodeType":"YulAssignment","src":"10720:43:9","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10749:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10752:4:9","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"10739:9:9"},"nodeType":"YulFunctionCall","src":"10739:18:9"},{"name":"pos","nodeType":"YulIdentifier","src":"10759:3:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10735:3:9"},"nodeType":"YulFunctionCall","src":"10735:28:9"},"variableNames":[{"name":"result.slot","nodeType":"YulIdentifier","src":"10720:11:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2075,"isOffset":false,"isSlot":true,"src":"10696:10:9","suffix":"slot","valueSize":1},{"declaration":2077,"isOffset":false,"isSlot":false,"src":"10759:3:9","valueSize":1},{"declaration":2081,"isOffset":false,"isSlot":true,"src":"10720:11:9","suffix":"slot","valueSize":1}],"id":2083,"nodeType":"InlineAssembly","src":"10663:110:9"}]},"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"10403:132:9","text":" @dev Access an element of the array without performing bounds check. The position is assumed to be within bounds."},"id":2085,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeAccess","nameLocation":"10549:13:9","nodeType":"FunctionDefinition","parameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"ckpts","nameLocation":"10584:5:9","nodeType":"VariableDeclaration","scope":2085,"src":"10563:26:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"},"typeName":{"baseType":{"id":2073,"nodeType":"UserDefinedTypeName","pathNode":{"id":2072,"name":"Checkpoint","nameLocations":["10563:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1369,"src":"10563:10:9"},"referencedDeclaration":1369,"src":"10563:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"id":2074,"nodeType":"ArrayTypeName","src":"10563:12:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Checkpoint_$1369_storage_$dyn_storage_ptr","typeString":"struct ERC20Votes.Checkpoint[]"}},"visibility":"internal"},{"constant":false,"id":2077,"mutability":"mutable","name":"pos","nameLocation":"10599:3:9","nodeType":"VariableDeclaration","scope":2085,"src":"10591:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"10591:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10562:41:9"},"returnParameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"mutability":"mutable","name":"result","nameLocation":"10645:6:9","nodeType":"VariableDeclaration","scope":2085,"src":"10626:25:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"},"typeName":{"id":2080,"nodeType":"UserDefinedTypeName","pathNode":{"id":2079,"name":"Checkpoint","nameLocations":["10626:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1369,"src":"10626:10:9"},"referencedDeclaration":1369,"src":"10626:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Checkpoint_$1369_storage_ptr","typeString":"struct ERC20Votes.Checkpoint"}},"visibility":"internal"}],"src":"10625:27:9"},"scope":2086,"src":"10540:239:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2087,"src":"1243:9538:9","usedErrors":[2259,2261]}],"src":"121:10661:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1180],"IERC20Metadata":[2111]},"id":2112,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2088,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2089,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2112,"sourceUnit":1181,"src":"135:23:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2091,"name":"IERC20","nameLocations":["305:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1180,"src":"305:6:10"},"id":2092,"nodeType":"InheritanceSpecifier","src":"305:6:10"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2090,"nodeType":"StructuredDocumentation","src":"160:116:10","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":2111,"linearizedBaseContracts":[2111,1180],"name":"IERC20Metadata","nameLocation":"287:14:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2093,"nodeType":"StructuredDocumentation","src":"318:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2098,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:10","nodeType":"FunctionDefinition","parameters":{"id":2094,"nodeType":"ParameterList","parameters":[],"src":"390:2:10"},"returnParameters":{"id":2097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2098,"src":"416:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2095,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:10"},"scope":2111,"src":"377:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2099,"nodeType":"StructuredDocumentation","src":"437:56:10","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2104,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:10","nodeType":"FunctionDefinition","parameters":{"id":2100,"nodeType":"ParameterList","parameters":[],"src":"513:2:10"},"returnParameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2104,"src":"539:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2101,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:10"},"scope":2111,"src":"498:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2105,"nodeType":"StructuredDocumentation","src":"560:65:10","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2110,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:10","nodeType":"FunctionDefinition","parameters":{"id":2106,"nodeType":"ParameterList","parameters":[],"src":"647:2:10"},"returnParameters":{"id":2109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2110,"src":"673:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2107,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:10"},"scope":2111,"src":"630:50:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2112,"src":"277:405:10","usedErrors":[]}],"src":"110:573:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[2147]},"id":2148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2113,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"123:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":2114,"nodeType":"StructuredDocumentation","src":"148:480:11","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":2147,"linearizedBaseContracts":[2147],"name":"IERC20Permit","nameLocation":"639:12:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2115,"nodeType":"StructuredDocumentation","src":"658:792:11","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":2132,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1464:6:11","nodeType":"FunctionDefinition","parameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"owner","nameLocation":"1488:5:11","nodeType":"VariableDeclaration","scope":2132,"src":"1480:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2116,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2119,"mutability":"mutable","name":"spender","nameLocation":"1511:7:11","nodeType":"VariableDeclaration","scope":2132,"src":"1503:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2118,"name":"address","nodeType":"ElementaryTypeName","src":"1503:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2121,"mutability":"mutable","name":"value","nameLocation":"1536:5:11","nodeType":"VariableDeclaration","scope":2132,"src":"1528:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"deadline","nameLocation":"1559:8:11","nodeType":"VariableDeclaration","scope":2132,"src":"1551:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1551:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"v","nameLocation":"1583:1:11","nodeType":"VariableDeclaration","scope":2132,"src":"1577:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2124,"name":"uint8","nodeType":"ElementaryTypeName","src":"1577:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2127,"mutability":"mutable","name":"r","nameLocation":"1602:1:11","nodeType":"VariableDeclaration","scope":2132,"src":"1594:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1594:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2129,"mutability":"mutable","name":"s","nameLocation":"1621:1:11","nodeType":"VariableDeclaration","scope":2132,"src":"1613:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1613:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1470:158:11"},"returnParameters":{"id":2131,"nodeType":"ParameterList","parameters":[],"src":"1637:0:11"},"scope":2147,"src":"1455:183:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2133,"nodeType":"StructuredDocumentation","src":"1644:294:11","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":2140,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1952:6:11","nodeType":"FunctionDefinition","parameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"owner","nameLocation":"1967:5:11","nodeType":"VariableDeclaration","scope":2140,"src":"1959:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2134,"name":"address","nodeType":"ElementaryTypeName","src":"1959:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1958:15:11"},"returnParameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2140,"src":"1997:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2137,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:9:11"},"scope":2147,"src":"1943:63:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2141,"nodeType":"StructuredDocumentation","src":"2012:128:11","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":2146,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2207:16:11","nodeType":"FunctionDefinition","parameters":{"id":2142,"nodeType":"ParameterList","parameters":[],"src":"2223:2:11"},"returnParameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2146,"src":"2249:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2249:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2248:9:11"},"scope":2147,"src":"2198:60:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2148,"src":"629:1631:11","usedErrors":[]}],"src":"123:2138:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","exportedSymbols":{"Context":[2172],"Counters":[2246],"ECDSA":[3167],"EIP712":[3371],"ERC20":[1102],"ERC20Permit":[1352],"IERC20":[1180],"IERC20Metadata":[2111],"IERC20Permit":[2147],"IERC5267":[491],"Math":[4273],"ShortString":[2251],"ShortStrings":[2462],"SignedMath":[5919],"StorageSlot":[2572],"Strings":[2801]},"id":2151,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2149,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"./ERC20Permit.sol","id":2150,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2151,"sourceUnit":1353,"src":"218:27:12","symbolAliases":[],"unitAlias":""}],"src":"128:118:12"},"id":12},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2172]},"id":2173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2152,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2153,"nodeType":"StructuredDocumentation","src":"111:496:13","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2172,"linearizedBaseContracts":[2172],"name":"Context","nameLocation":"626:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2161,"nodeType":"Block","src":"702:34:13","statements":[{"expression":{"expression":{"id":2158,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:13","memberName":"sender","nodeType":"MemberAccess","src":"719:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2157,"id":2160,"nodeType":"Return","src":"712:17:13"}]},"id":2162,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:13","nodeType":"FunctionDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[],"src":"659:2:13"},"returnParameters":{"id":2157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2162,"src":"693:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2155,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:13"},"scope":2172,"src":"640:96:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2170,"nodeType":"Block","src":"809:32:13","statements":[{"expression":{"expression":{"id":2167,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:13","memberName":"data","nodeType":"MemberAccess","src":"826:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2166,"id":2169,"nodeType":"Return","src":"819:15:13"}]},"id":2171,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:13","nodeType":"FunctionDefinition","parameters":{"id":2163,"nodeType":"ParameterList","parameters":[],"src":"759:2:13"},"returnParameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2171,"src":"793:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2164,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:13"},"scope":2172,"src":"742:99:13","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2173,"src":"608:235:13","usedErrors":[]}],"src":"86:758:13"},"id":13},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[2246]},"id":2247,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2174,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":2175,"nodeType":"StructuredDocumentation","src":"112:311:14","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":2246,"linearizedBaseContracts":[2246],"name":"Counters","nameLocation":"432:8:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":2178,"members":[{"constant":false,"id":2177,"mutability":"mutable","name":"_value","nameLocation":"794:6:14","nodeType":"VariableDeclaration","scope":2178,"src":"786:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2176,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:14","nodeType":"StructDefinition","scope":2246,"src":"447:374:14","visibility":"public"},{"body":{"id":2189,"nodeType":"Block","src":"901:38:14","statements":[{"expression":{"expression":{"id":2186,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"918:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2187,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:14","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"918:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2185,"id":2188,"nodeType":"Return","src":"911:21:14"}]},"id":2190,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:14","nodeType":"FunctionDefinition","parameters":{"id":2182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2181,"mutability":"mutable","name":"counter","nameLocation":"860:7:14","nodeType":"VariableDeclaration","scope":2190,"src":"844:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2180,"nodeType":"UserDefinedTypeName","pathNode":{"id":2179,"name":"Counter","nameLocations":["844:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2178,"src":"844:7:14"},"referencedDeclaration":2178,"src":"844:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:14"},"returnParameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2190,"src":"892:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:14"},"scope":2246,"src":"827:112:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2203,"nodeType":"Block","src":"998:70:14","statements":[{"id":2202,"nodeType":"UncheckedBlock","src":"1008:54:14","statements":[{"expression":{"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2196,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"1032:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:14","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"1032:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2201,"nodeType":"ExpressionStatement","src":"1032:19:14"}]}]},"id":2204,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:14","nodeType":"FunctionDefinition","parameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"counter","nameLocation":"980:7:14","nodeType":"VariableDeclaration","scope":2204,"src":"964:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2192,"nodeType":"UserDefinedTypeName","pathNode":{"id":2191,"name":"Counter","nameLocations":["964:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2178,"src":"964:7:14"},"referencedDeclaration":2178,"src":"964:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:14"},"returnParameters":{"id":2195,"nodeType":"ParameterList","parameters":[],"src":"998:0:14"},"scope":2246,"src":"945:123:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2231,"nodeType":"Block","src":"1127:176:14","statements":[{"assignments":[2211],"declarations":[{"constant":false,"id":2211,"mutability":"mutable","name":"value","nameLocation":"1145:5:14","nodeType":"VariableDeclaration","scope":2231,"src":"1137:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2214,"initialValue":{"expression":{"id":2212,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"1153:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:14","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"1153:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"1185:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":2215,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2221,"nodeType":"ExpressionStatement","src":"1177:49:14"},{"id":2230,"nodeType":"UncheckedBlock","src":"1236:61:14","statements":[{"expression":{"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2222,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"1260:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:14","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"1260:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2211,"src":"1277:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2229,"nodeType":"ExpressionStatement","src":"1260:26:14"}]}]},"id":2232,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:14","nodeType":"FunctionDefinition","parameters":{"id":2208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2207,"mutability":"mutable","name":"counter","nameLocation":"1109:7:14","nodeType":"VariableDeclaration","scope":2232,"src":"1093:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2206,"nodeType":"UserDefinedTypeName","pathNode":{"id":2205,"name":"Counter","nameLocations":["1093:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2178,"src":"1093:7:14"},"referencedDeclaration":2178,"src":"1093:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:14"},"returnParameters":{"id":2209,"nodeType":"ParameterList","parameters":[],"src":"1127:0:14"},"scope":2246,"src":"1074:229:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2244,"nodeType":"Block","src":"1358:35:14","statements":[{"expression":{"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2238,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"1368:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":2240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:14","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"1368:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2243,"nodeType":"ExpressionStatement","src":"1368:18:14"}]},"id":2245,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:14","nodeType":"FunctionDefinition","parameters":{"id":2236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"counter","nameLocation":"1340:7:14","nodeType":"VariableDeclaration","scope":2245,"src":"1324:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":2234,"nodeType":"UserDefinedTypeName","pathNode":{"id":2233,"name":"Counter","nameLocations":["1324:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2178,"src":"1324:7:14"},"referencedDeclaration":2178,"src":"1324:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$2178_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:14"},"returnParameters":{"id":2237,"nodeType":"ParameterList","parameters":[],"src":"1358:0:14"},"scope":2246,"src":"1309:84:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2247,"src":"424:971:14","usedErrors":[]}],"src":"87:1309:14"},"id":14},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2251],"ShortStrings":[2462],"StorageSlot":[2572]},"id":2463,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2248,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"106:23:15"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2249,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2463,"sourceUnit":2573,"src":"131:27:15","symbolAliases":[],"unitAlias":""},{"canonicalName":"ShortString","id":2251,"name":"ShortString","nameLocation":"333:11:15","nodeType":"UserDefinedValueTypeDefinition","src":"328:28:15","underlyingType":{"id":2250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"348:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"358:876:15","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2462,"linearizedBaseContracts":[2462],"name":"ShortStrings","nameLocation":"1243:12:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2255,"mutability":"constant","name":"_FALLBACK_SENTINEL","nameLocation":"1350:18:15","nodeType":"VariableDeclaration","scope":2462,"src":"1325:112:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1325:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:66:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2259,"name":"StringTooLong","nameLocation":"1450:13:15","nodeType":"ErrorDefinition","parameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2257,"mutability":"mutable","name":"str","nameLocation":"1471:3:15","nodeType":"VariableDeclaration","scope":2259,"src":"1464:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2256,"name":"string","nodeType":"ElementaryTypeName","src":"1464:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1463:12:15"},"src":"1444:32:15"},{"errorSelector":"b3512b0c","id":2261,"name":"InvalidShortString","nameLocation":"1487:18:15","nodeType":"ErrorDefinition","parameters":{"id":2260,"nodeType":"ParameterList","parameters":[],"src":"1505:2:15"},"src":"1481:27:15"},{"body":{"id":2304,"nodeType":"Block","src":"1767:208:15","statements":[{"assignments":[2271],"declarations":[{"constant":false,"id":2271,"mutability":"mutable","name":"bstr","nameLocation":"1790:4:15","nodeType":"VariableDeclaration","scope":2304,"src":"1777:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2270,"name":"bytes","nodeType":"ElementaryTypeName","src":"1777:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2276,"initialValue":{"arguments":[{"id":2274,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"1803:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1797:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2272,"name":"bytes","nodeType":"ElementaryTypeName","src":"1797:5:15","typeDescriptions":{}}},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1797:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1777:30:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2277,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"1821:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1826:6:15","memberName":"length","nodeType":"MemberAccess","src":"1821:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1835:2:15","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1821:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2286,"nodeType":"IfStatement","src":"1817:72:15","trueBody":{"id":2285,"nodeType":"Block","src":"1839:50:15","statements":[{"errorCall":{"arguments":[{"id":2282,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2264,"src":"1874:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2281,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"1860:13:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1860:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2284,"nodeType":"RevertStatement","src":"1853:25:15"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2295,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"1946:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1938:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1938:7:15","typeDescriptions":{}}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1930:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1930:7:15","typeDescriptions":{}}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1930:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2298,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"1955:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1960:6:15","memberName":"length","nodeType":"MemberAccess","src":"1955:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1930:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1922:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1922:7:15","typeDescriptions":{}}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1922:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2287,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"1905:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2251_$","typeString":"type(ShortString)"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1917:4:15","memberName":"wrap","nodeType":"MemberAccess","src":"1905:16:15","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2251_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1905:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"functionReturnParameters":2269,"id":2303,"nodeType":"Return","src":"1898:70:15"}]},"documentation":{"id":2262,"nodeType":"StructuredDocumentation","src":"1514:170:15","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2305,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1698:13:15","nodeType":"FunctionDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"mutability":"mutable","name":"str","nameLocation":"1726:3:15","nodeType":"VariableDeclaration","scope":2305,"src":"1712:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2263,"name":"string","nodeType":"ElementaryTypeName","src":"1712:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1711:19:15"},"returnParameters":{"id":2269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2305,"src":"1754:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"},"typeName":{"id":2267,"nodeType":"UserDefinedTypeName","pathNode":{"id":2266,"name":"ShortString","nameLocations":["1754:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"1754:11:15"},"referencedDeclaration":2251,"src":"1754:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"visibility":"internal"}],"src":"1753:13:15"},"scope":2462,"src":"1689:286:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2330,"nodeType":"Block","src":"2133:331:15","statements":[{"assignments":[2315],"declarations":[{"constant":false,"id":2315,"mutability":"mutable","name":"len","nameLocation":"2151:3:15","nodeType":"VariableDeclaration","scope":2330,"src":"2143:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2319,"initialValue":{"arguments":[{"id":2317,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"2168:4:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}],"id":2316,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"2157:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2251_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2157:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2143:30:15"},{"assignments":[2321],"declarations":[{"constant":false,"id":2321,"mutability":"mutable","name":"str","nameLocation":"2275:3:15","nodeType":"VariableDeclaration","scope":2330,"src":"2261:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2320,"name":"string","nodeType":"ElementaryTypeName","src":"2261:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2326,"initialValue":{"arguments":[{"hexValue":"3332","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2292:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2281:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2322,"name":"string","nodeType":"ElementaryTypeName","src":"2285:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2261:34:15"},{"AST":{"nodeType":"YulBlock","src":"2357:81:15","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2378:3:15"},{"name":"len","nodeType":"YulIdentifier","src":"2383:3:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2371:6:15"},"nodeType":"YulFunctionCall","src":"2371:16:15"},"nodeType":"YulExpressionStatement","src":"2371:16:15"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2411:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"2416:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2407:3:15"},"nodeType":"YulFunctionCall","src":"2407:14:15"},{"name":"sstr","nodeType":"YulIdentifier","src":"2423:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2400:6:15"},"nodeType":"YulFunctionCall","src":"2400:28:15"},"nodeType":"YulExpressionStatement","src":"2400:28:15"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2315,"isOffset":false,"isSlot":false,"src":"2383:3:15","valueSize":1},{"declaration":2309,"isOffset":false,"isSlot":false,"src":"2423:4:15","valueSize":1},{"declaration":2321,"isOffset":false,"isSlot":false,"src":"2378:3:15","valueSize":1},{"declaration":2321,"isOffset":false,"isSlot":false,"src":"2411:3:15","valueSize":1}],"id":2327,"nodeType":"InlineAssembly","src":"2348:90:15"},{"expression":{"id":2328,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"2454:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2313,"id":2329,"nodeType":"Return","src":"2447:10:15"}]},"documentation":{"id":2306,"nodeType":"StructuredDocumentation","src":"1981:73:15","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2331,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2068:8:15","nodeType":"FunctionDefinition","parameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"sstr","nameLocation":"2089:4:15","nodeType":"VariableDeclaration","scope":2331,"src":"2077:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"},"typeName":{"id":2308,"nodeType":"UserDefinedTypeName","pathNode":{"id":2307,"name":"ShortString","nameLocations":["2077:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"2077:11:15"},"referencedDeclaration":2251,"src":"2077:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"visibility":"internal"}],"src":"2076:18:15"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2331,"src":"2118:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2311,"name":"string","nodeType":"ElementaryTypeName","src":"2118:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2117:15:15"},"scope":2462,"src":"2059:405:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2362,"nodeType":"Block","src":"2606:175:15","statements":[{"assignments":[2341],"declarations":[{"constant":false,"id":2341,"mutability":"mutable","name":"result","nameLocation":"2624:6:15","nodeType":"VariableDeclaration","scope":2362,"src":"2616:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2351,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2346,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2335,"src":"2660:4:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}],"expression":{"id":2344,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"2641:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2251_$","typeString":"type(ShortString)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2653:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"2641:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2251_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2641:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2633:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:15","typeDescriptions":{}}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2669:4:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2633:40:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2616:57:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2352,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"2687:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2696:2:15","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2687:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2359,"nodeType":"IfStatement","src":"2683:69:15","trueBody":{"id":2358,"nodeType":"Block","src":"2700:52:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2355,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"2721:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2721:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2357,"nodeType":"RevertStatement","src":"2714:27:15"}]}},{"expression":{"id":2360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"2768:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2339,"id":2361,"nodeType":"Return","src":"2761:13:15"}]},"documentation":{"id":2332,"nodeType":"StructuredDocumentation","src":"2470:61:15","text":" @dev Return the length of a `ShortString`."},"id":2363,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2545:10:15","nodeType":"FunctionDefinition","parameters":{"id":2336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"sstr","nameLocation":"2568:4:15","nodeType":"VariableDeclaration","scope":2363,"src":"2556:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"},"typeName":{"id":2334,"nodeType":"UserDefinedTypeName","pathNode":{"id":2333,"name":"ShortString","nameLocations":["2556:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"2556:11:15"},"referencedDeclaration":2251,"src":"2556:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"visibility":"internal"}],"src":"2555:18:15"},"returnParameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2363,"src":"2597:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2597:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2596:9:15"},"scope":2462,"src":"2536:245:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2402,"nodeType":"Block","src":"3004:232:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"3024:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3018:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2374,"name":"bytes","nodeType":"ElementaryTypeName","src":"3018:5:15","typeDescriptions":{}}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3018:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3031:6:15","memberName":"length","nodeType":"MemberAccess","src":"3018:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3040:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3018:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2400,"nodeType":"Block","src":"3102:128:15","statements":[{"expression":{"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2389,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"3142:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2386,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"3116:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2572_$","typeString":"type(library StorageSlot)"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3128:13:15","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2549,"src":"3116:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2480_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2480_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3149:5:15","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2479,"src":"3116:38:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"3157:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3116:46:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2394,"nodeType":"ExpressionStatement","src":"3116:46:15"},{"expression":{"arguments":[{"id":2397,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"3200:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2395,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"3183:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2251_$","typeString":"type(ShortString)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3195:4:15","memberName":"wrap","nodeType":"MemberAccess","src":"3183:16:15","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2251_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3183:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"functionReturnParameters":2373,"id":2399,"nodeType":"Return","src":"3176:43:15"}]},"id":2401,"nodeType":"IfStatement","src":"3014:216:15","trueBody":{"id":2385,"nodeType":"Block","src":"3044:52:15","statements":[{"expression":{"arguments":[{"id":2382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"3079:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2381,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"3065:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2251_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3065:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"functionReturnParameters":2373,"id":2384,"nodeType":"Return","src":"3058:27:15"}]}}]},"documentation":{"id":2364,"nodeType":"StructuredDocumentation","src":"2787:103:15","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2403,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2904:25:15","nodeType":"FunctionDefinition","parameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"value","nameLocation":"2944:5:15","nodeType":"VariableDeclaration","scope":2403,"src":"2930:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2365,"name":"string","nodeType":"ElementaryTypeName","src":"2930:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2368,"mutability":"mutable","name":"store","nameLocation":"2966:5:15","nodeType":"VariableDeclaration","scope":2403,"src":"2951:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2367,"name":"string","nodeType":"ElementaryTypeName","src":"2951:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2929:43:15"},"returnParameters":{"id":2373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2403,"src":"2991:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"},"typeName":{"id":2371,"nodeType":"UserDefinedTypeName","pathNode":{"id":2370,"name":"ShortString","nameLocations":["2991:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"2991:11:15"},"referencedDeclaration":2251,"src":"2991:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"visibility":"internal"}],"src":"2990:13:15"},"scope":2462,"src":"2895:341:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2429,"nodeType":"Block","src":"3476:159:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"3509:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}],"expression":{"id":2414,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"3490:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2251_$","typeString":"type(ShortString)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3502:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"3490:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2251_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3490:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2418,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"3519:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3490:47:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2427,"nodeType":"Block","src":"3592:37:15","statements":[{"expression":{"id":2425,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"3613:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2413,"id":2426,"nodeType":"Return","src":"3606:12:15"}]},"id":2428,"nodeType":"IfStatement","src":"3486:143:15","trueBody":{"id":2424,"nodeType":"Block","src":"3539:47:15","statements":[{"expression":{"arguments":[{"id":2421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"3569:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}],"id":2420,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"3560:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2251_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2413,"id":2423,"nodeType":"Return","src":"3553:22:15"}]}}]},"documentation":{"id":2404,"nodeType":"StructuredDocumentation","src":"3242:120:15","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2430,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3376:20:15","nodeType":"FunctionDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2407,"mutability":"mutable","name":"value","nameLocation":"3409:5:15","nodeType":"VariableDeclaration","scope":2430,"src":"3397:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"},"typeName":{"id":2406,"nodeType":"UserDefinedTypeName","pathNode":{"id":2405,"name":"ShortString","nameLocations":["3397:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"3397:11:15"},"referencedDeclaration":2251,"src":"3397:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2409,"mutability":"mutable","name":"store","nameLocation":"3431:5:15","nodeType":"VariableDeclaration","scope":2430,"src":"3416:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2408,"name":"string","nodeType":"ElementaryTypeName","src":"3416:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3396:41:15"},"returnParameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2430,"src":"3461:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2411,"name":"string","nodeType":"ElementaryTypeName","src":"3461:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3460:15:15"},"scope":2462,"src":"3367:268:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2460,"nodeType":"Block","src":"4108:175:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"4141:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}],"expression":{"id":2441,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"4122:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2251_$","typeString":"type(ShortString)"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4134:6:15","memberName":"unwrap","nodeType":"MemberAccess","src":"4122:18:15","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2251_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4122:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2445,"name":"_FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"4151:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4122:47:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2458,"nodeType":"Block","src":"4226:51:15","statements":[{"expression":{"expression":{"arguments":[{"id":2454,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"4253:5:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4247:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2452,"name":"bytes","nodeType":"ElementaryTypeName","src":"4247:5:15","typeDescriptions":{}}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4247:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4260:6:15","memberName":"length","nodeType":"MemberAccess","src":"4247:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2440,"id":2457,"nodeType":"Return","src":"4240:26:15"}]},"id":2459,"nodeType":"IfStatement","src":"4118:159:15","trueBody":{"id":2451,"nodeType":"Block","src":"4171:49:15","statements":[{"expression":{"arguments":[{"id":2448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2434,"src":"4203:5:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}],"id":2447,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"4192:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2251_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2440,"id":2450,"nodeType":"Return","src":"4185:24:15"}]}}]},"documentation":{"id":2431,"nodeType":"StructuredDocumentation","src":"3641:357:15","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2461,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4012:22:15","nodeType":"FunctionDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2434,"mutability":"mutable","name":"value","nameLocation":"4047:5:15","nodeType":"VariableDeclaration","scope":2461,"src":"4035:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"},"typeName":{"id":2433,"nodeType":"UserDefinedTypeName","pathNode":{"id":2432,"name":"ShortString","nameLocations":["4035:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"4035:11:15"},"referencedDeclaration":2251,"src":"4035:11:15","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2436,"mutability":"mutable","name":"store","nameLocation":"4069:5:15","nodeType":"VariableDeclaration","scope":2461,"src":"4054:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2435,"name":"string","nodeType":"ElementaryTypeName","src":"4054:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4034:41:15"},"returnParameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2461,"src":"4099:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2438,"name":"uint256","nodeType":"ElementaryTypeName","src":"4099:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4098:9:15"},"scope":2462,"src":"4003:280:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2463,"src":"1235:3050:15","usedErrors":[2259,2261]}],"src":"106:4180:15"},"id":15},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2572]},"id":2573,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2464,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"218:1201:16","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":2572,"linearizedBaseContracts":[2572],"name":"StorageSlot","nameLocation":"1428:11:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2468,"members":[{"constant":false,"id":2467,"mutability":"mutable","name":"value","nameLocation":"1483:5:16","nodeType":"VariableDeclaration","scope":2468,"src":"1475:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2466,"name":"address","nodeType":"ElementaryTypeName","src":"1475:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1453:11:16","nodeType":"StructDefinition","scope":2572,"src":"1446:49:16","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2471,"members":[{"constant":false,"id":2470,"mutability":"mutable","name":"value","nameLocation":"1535:5:16","nodeType":"VariableDeclaration","scope":2471,"src":"1530:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2469,"name":"bool","nodeType":"ElementaryTypeName","src":"1530:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1508:11:16","nodeType":"StructDefinition","scope":2572,"src":"1501:46:16","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2474,"members":[{"constant":false,"id":2473,"mutability":"mutable","name":"value","nameLocation":"1590:5:16","nodeType":"VariableDeclaration","scope":2474,"src":"1582:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1560:11:16","nodeType":"StructDefinition","scope":2572,"src":"1553:49:16","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2477,"members":[{"constant":false,"id":2476,"mutability":"mutable","name":"value","nameLocation":"1645:5:16","nodeType":"VariableDeclaration","scope":2477,"src":"1637:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2475,"name":"uint256","nodeType":"ElementaryTypeName","src":"1637:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1615:11:16","nodeType":"StructDefinition","scope":2572,"src":"1608:49:16","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2480,"members":[{"constant":false,"id":2479,"mutability":"mutable","name":"value","nameLocation":"1698:5:16","nodeType":"VariableDeclaration","scope":2480,"src":"1691:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2478,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1670:10:16","nodeType":"StructDefinition","scope":2572,"src":"1663:47:16","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2483,"members":[{"constant":false,"id":2482,"mutability":"mutable","name":"value","nameLocation":"1749:5:16","nodeType":"VariableDeclaration","scope":2483,"src":"1743:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2481,"name":"bytes","nodeType":"ElementaryTypeName","src":"1743:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1723:9:16","nodeType":"StructDefinition","scope":2572,"src":"1716:45:16","visibility":"public"},{"body":{"id":2493,"nodeType":"Block","src":"1943:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2005:38:16","statements":[{"nodeType":"YulAssignment","src":"2019:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2029:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2019:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2490,"isOffset":false,"isSlot":true,"src":"2019:6:16","suffix":"slot","valueSize":1},{"declaration":2486,"isOffset":false,"isSlot":false,"src":"2029:4:16","valueSize":1}],"id":2492,"nodeType":"InlineAssembly","src":"1996:47:16"}]},"documentation":{"id":2484,"nodeType":"StructuredDocumentation","src":"1767:87:16","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2494,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1868:14:16","nodeType":"FunctionDefinition","parameters":{"id":2487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2486,"mutability":"mutable","name":"slot","nameLocation":"1891:4:16","nodeType":"VariableDeclaration","scope":2494,"src":"1883:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1882:14:16"},"returnParameters":{"id":2491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2490,"mutability":"mutable","name":"r","nameLocation":"1940:1:16","nodeType":"VariableDeclaration","scope":2494,"src":"1920:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2468_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2489,"nodeType":"UserDefinedTypeName","pathNode":{"id":2488,"name":"AddressSlot","nameLocations":["1920:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2468,"src":"1920:11:16"},"referencedDeclaration":2468,"src":"1920:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2468_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1919:23:16"},"scope":2572,"src":"1859:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2504,"nodeType":"Block","src":"2231:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2293:38:16","statements":[{"nodeType":"YulAssignment","src":"2307:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2317:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2307:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2501,"isOffset":false,"isSlot":true,"src":"2307:6:16","suffix":"slot","valueSize":1},{"declaration":2497,"isOffset":false,"isSlot":false,"src":"2317:4:16","valueSize":1}],"id":2503,"nodeType":"InlineAssembly","src":"2284:47:16"}]},"documentation":{"id":2495,"nodeType":"StructuredDocumentation","src":"2055:87:16","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2505,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2156:14:16","nodeType":"FunctionDefinition","parameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"slot","nameLocation":"2179:4:16","nodeType":"VariableDeclaration","scope":2505,"src":"2171:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2171:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2170:14:16"},"returnParameters":{"id":2502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2501,"mutability":"mutable","name":"r","nameLocation":"2228:1:16","nodeType":"VariableDeclaration","scope":2505,"src":"2208:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2471_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2500,"nodeType":"UserDefinedTypeName","pathNode":{"id":2499,"name":"BooleanSlot","nameLocations":["2208:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2471,"src":"2208:11:16"},"referencedDeclaration":2471,"src":"2208:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2471_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2207:23:16"},"scope":2572,"src":"2147:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2515,"nodeType":"Block","src":"2519:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2581:38:16","statements":[{"nodeType":"YulAssignment","src":"2595:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2605:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2595:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2512,"isOffset":false,"isSlot":true,"src":"2595:6:16","suffix":"slot","valueSize":1},{"declaration":2508,"isOffset":false,"isSlot":false,"src":"2605:4:16","valueSize":1}],"id":2514,"nodeType":"InlineAssembly","src":"2572:47:16"}]},"documentation":{"id":2506,"nodeType":"StructuredDocumentation","src":"2343:87:16","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2516,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2444:14:16","nodeType":"FunctionDefinition","parameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"slot","nameLocation":"2467:4:16","nodeType":"VariableDeclaration","scope":2516,"src":"2459:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2459:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2458:14:16"},"returnParameters":{"id":2513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"r","nameLocation":"2516:1:16","nodeType":"VariableDeclaration","scope":2516,"src":"2496:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2474_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2511,"nodeType":"UserDefinedTypeName","pathNode":{"id":2510,"name":"Bytes32Slot","nameLocations":["2496:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2474,"src":"2496:11:16"},"referencedDeclaration":2474,"src":"2496:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2474_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2495:23:16"},"scope":2572,"src":"2435:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2526,"nodeType":"Block","src":"2807:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2869:38:16","statements":[{"nodeType":"YulAssignment","src":"2883:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"2893:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2883:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2523,"isOffset":false,"isSlot":true,"src":"2883:6:16","suffix":"slot","valueSize":1},{"declaration":2519,"isOffset":false,"isSlot":false,"src":"2893:4:16","valueSize":1}],"id":2525,"nodeType":"InlineAssembly","src":"2860:47:16"}]},"documentation":{"id":2517,"nodeType":"StructuredDocumentation","src":"2631:87:16","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2527,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2732:14:16","nodeType":"FunctionDefinition","parameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"slot","nameLocation":"2755:4:16","nodeType":"VariableDeclaration","scope":2527,"src":"2747:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2747:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2746:14:16"},"returnParameters":{"id":2524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"mutability":"mutable","name":"r","nameLocation":"2804:1:16","nodeType":"VariableDeclaration","scope":2527,"src":"2784:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2477_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2522,"nodeType":"UserDefinedTypeName","pathNode":{"id":2521,"name":"Uint256Slot","nameLocations":["2784:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":2477,"src":"2784:11:16"},"referencedDeclaration":2477,"src":"2784:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2477_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2783:23:16"},"scope":2572,"src":"2723:190:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2537,"nodeType":"Block","src":"3092:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3154:38:16","statements":[{"nodeType":"YulAssignment","src":"3168:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"3178:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3168:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2534,"isOffset":false,"isSlot":true,"src":"3168:6:16","suffix":"slot","valueSize":1},{"declaration":2530,"isOffset":false,"isSlot":false,"src":"3178:4:16","valueSize":1}],"id":2536,"nodeType":"InlineAssembly","src":"3145:47:16"}]},"documentation":{"id":2528,"nodeType":"StructuredDocumentation","src":"2919:86:16","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2538,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3019:13:16","nodeType":"FunctionDefinition","parameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"slot","nameLocation":"3041:4:16","nodeType":"VariableDeclaration","scope":2538,"src":"3033:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3032:14:16"},"returnParameters":{"id":2535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"r","nameLocation":"3089:1:16","nodeType":"VariableDeclaration","scope":2538,"src":"3070:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2480_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2533,"nodeType":"UserDefinedTypeName","pathNode":{"id":2532,"name":"StringSlot","nameLocations":["3070:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2480,"src":"3070:10:16"},"referencedDeclaration":2480,"src":"3070:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2480_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3069:22:16"},"scope":2572,"src":"3010:188:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2548,"nodeType":"Block","src":"3400:112:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3462:44:16","statements":[{"nodeType":"YulAssignment","src":"3476:20:16","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3486:10:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3476:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2545,"isOffset":false,"isSlot":true,"src":"3476:6:16","suffix":"slot","valueSize":1},{"declaration":2541,"isOffset":false,"isSlot":true,"src":"3486:10:16","suffix":"slot","valueSize":1}],"id":2547,"nodeType":"InlineAssembly","src":"3453:53:16"}]},"documentation":{"id":2539,"nodeType":"StructuredDocumentation","src":"3204:101:16","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2549,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3319:13:16","nodeType":"FunctionDefinition","parameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"store","nameLocation":"3348:5:16","nodeType":"VariableDeclaration","scope":2549,"src":"3333:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2540,"name":"string","nodeType":"ElementaryTypeName","src":"3333:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3332:22:16"},"returnParameters":{"id":2546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"r","nameLocation":"3397:1:16","nodeType":"VariableDeclaration","scope":2549,"src":"3378:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2480_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2544,"nodeType":"UserDefinedTypeName","pathNode":{"id":2543,"name":"StringSlot","nameLocations":["3378:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":2480,"src":"3378:10:16"},"referencedDeclaration":2480,"src":"3378:10:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2480_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3377:22:16"},"scope":2572,"src":"3310:202:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2559,"nodeType":"Block","src":"3688:106:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3750:38:16","statements":[{"nodeType":"YulAssignment","src":"3764:14:16","value":{"name":"slot","nodeType":"YulIdentifier","src":"3774:4:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3764:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2556,"isOffset":false,"isSlot":true,"src":"3764:6:16","suffix":"slot","valueSize":1},{"declaration":2552,"isOffset":false,"isSlot":false,"src":"3774:4:16","valueSize":1}],"id":2558,"nodeType":"InlineAssembly","src":"3741:47:16"}]},"documentation":{"id":2550,"nodeType":"StructuredDocumentation","src":"3518:85:16","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2560,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3617:12:16","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2552,"mutability":"mutable","name":"slot","nameLocation":"3638:4:16","nodeType":"VariableDeclaration","scope":2560,"src":"3630:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3630:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3629:14:16"},"returnParameters":{"id":2557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"mutability":"mutable","name":"r","nameLocation":"3685:1:16","nodeType":"VariableDeclaration","scope":2560,"src":"3667:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2483_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2555,"nodeType":"UserDefinedTypeName","pathNode":{"id":2554,"name":"BytesSlot","nameLocations":["3667:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2483,"src":"3667:9:16"},"referencedDeclaration":2483,"src":"3667:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2483_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3666:21:16"},"scope":2572,"src":"3608:186:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2570,"nodeType":"Block","src":"3991:112:16","statements":[{"AST":{"nodeType":"YulBlock","src":"4053:44:16","statements":[{"nodeType":"YulAssignment","src":"4067:20:16","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4077:10:16"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4067:6:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2567,"isOffset":false,"isSlot":true,"src":"4067:6:16","suffix":"slot","valueSize":1},{"declaration":2563,"isOffset":false,"isSlot":true,"src":"4077:10:16","suffix":"slot","valueSize":1}],"id":2569,"nodeType":"InlineAssembly","src":"4044:53:16"}]},"documentation":{"id":2561,"nodeType":"StructuredDocumentation","src":"3800:99:16","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2571,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3913:12:16","nodeType":"FunctionDefinition","parameters":{"id":2564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"store","nameLocation":"3940:5:16","nodeType":"VariableDeclaration","scope":2571,"src":"3926:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2562,"name":"bytes","nodeType":"ElementaryTypeName","src":"3926:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3925:21:16"},"returnParameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"r","nameLocation":"3988:1:16","nodeType":"VariableDeclaration","scope":2571,"src":"3970:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2483_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2566,"nodeType":"UserDefinedTypeName","pathNode":{"id":2565,"name":"BytesSlot","nameLocations":["3970:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":2483,"src":"3970:9:16"},"referencedDeclaration":2483,"src":"3970:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2483_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3969:21:16"},"scope":2572,"src":"3904:199:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2573,"src":"1420:2685:16","usedErrors":[]}],"src":"193:3913:16"},"id":16},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4273],"SignedMath":[5919],"Strings":[2801]},"id":2802,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2574,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:17"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2575,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2802,"sourceUnit":4274,"src":"126:25:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2576,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2802,"sourceUnit":5920,"src":"152:31:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2577,"nodeType":"StructuredDocumentation","src":"185:34:17","text":" @dev String operations."},"fullyImplemented":true,"id":2801,"linearizedBaseContracts":[2801],"name":"Strings","nameLocation":"228:7:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2580,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:17","nodeType":"VariableDeclaration","scope":2801,"src":"242:54:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2578,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2583,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:17","nodeType":"VariableDeclaration","scope":2801,"src":"302:43:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2581,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2630,"nodeType":"Block","src":"518:625:17","statements":[{"id":2629,"nodeType":"UncheckedBlock","src":"528:609:17","statements":[{"assignments":[2592],"declarations":[{"constant":false,"id":2592,"mutability":"mutable","name":"length","nameLocation":"560:6:17","nodeType":"VariableDeclaration","scope":2629,"src":"552:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2599,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"580:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2593,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"569:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4273_$","typeString":"type(library Math)"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:17","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4110,"src":"569:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:17"},{"assignments":[2601],"declarations":[{"constant":false,"id":2601,"mutability":"mutable","name":"buffer","nameLocation":"618:6:17","nodeType":"VariableDeclaration","scope":2629,"src":"604:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2600,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2606,"initialValue":{"arguments":[{"id":2604,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"638:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2602,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:17"},{"assignments":[2608],"declarations":[{"constant":false,"id":2608,"mutability":"mutable","name":"ptr","nameLocation":"667:3:17","nodeType":"VariableDeclaration","scope":2629,"src":"659:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2607,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2609,"nodeType":"VariableDeclarationStatement","src":"659:11:17"},{"AST":{"nodeType":"YulBlock","src":"740:67:17","statements":[{"nodeType":"YulAssignment","src":"758:35:17","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:17","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:17"},"nodeType":"YulFunctionCall","src":"777:15:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:17"},"nodeType":"YulFunctionCall","src":"765:28:17"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2601,"isOffset":false,"isSlot":false,"src":"769:6:17","valueSize":1},{"declaration":2592,"isOffset":false,"isSlot":false,"src":"785:6:17","valueSize":1},{"declaration":2608,"isOffset":false,"isSlot":false,"src":"758:3:17","valueSize":1}],"id":2610,"nodeType":"InlineAssembly","src":"731:76:17"},{"body":{"id":2625,"nodeType":"Block","src":"833:267:17","statements":[{"expression":{"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:17","subExpression":{"id":2612,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"851:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2614,"nodeType":"ExpressionStatement","src":"851:5:17"},{"AST":{"nodeType":"YulBlock","src":"934:84:17","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:17"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:17","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:17"},"nodeType":"YulFunctionCall","src":"974:14:17"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:17"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:17"},"nodeType":"YulFunctionCall","src":"969:30:17"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:17"},"nodeType":"YulFunctionCall","src":"956:44:17"},"nodeType":"YulExpressionStatement","src":"956:44:17"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2580,"isOffset":false,"isSlot":false,"src":"990:8:17","valueSize":1},{"declaration":2608,"isOffset":false,"isSlot":false,"src":"964:3:17","valueSize":1},{"declaration":2586,"isOffset":false,"isSlot":false,"src":"978:5:17","valueSize":1}],"id":2615,"nodeType":"InlineAssembly","src":"925:93:17"},{"expression":{"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"1035:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2619,"nodeType":"ExpressionStatement","src":"1035:11:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"1068:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2624,"nodeType":"IfStatement","src":"1064:21:17","trueBody":{"id":2623,"nodeType":"Break","src":"1080:5:17"}}]},"condition":{"hexValue":"74727565","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2626,"nodeType":"WhileStatement","src":"820:280:17"},{"expression":{"id":2627,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"1120:6:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2590,"id":2628,"nodeType":"Return","src":"1113:13:17"}]}]},"documentation":{"id":2584,"nodeType":"StructuredDocumentation","src":"352:90:17","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2631,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:17","nodeType":"FunctionDefinition","parameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"value","nameLocation":"473:5:17","nodeType":"VariableDeclaration","scope":2631,"src":"465:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2585,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:17"},"returnParameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2631,"src":"503:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2588,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:17"},"scope":2801,"src":"447:696:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2658,"nodeType":"Block","src":"1313:103:17","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"1354:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:17","trueExpression":{"hexValue":"2d","id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"1400:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2650,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"1385:10:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5919_$","typeString":"type(library SignedMath)"}},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:17","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5918,"src":"1385:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2649,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[2631,2659],"referencedDeclaration":2631,"src":"1376:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2641,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2639,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:17","typeDescriptions":{}}},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2638,"id":2657,"nodeType":"Return","src":"1323:86:17"}]},"documentation":{"id":2632,"nodeType":"StructuredDocumentation","src":"1149:89:17","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2659,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:17","nodeType":"FunctionDefinition","parameters":{"id":2635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2634,"mutability":"mutable","name":"value","nameLocation":"1268:5:17","nodeType":"VariableDeclaration","scope":2659,"src":"1261:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2633,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:17"},"returnParameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2659,"src":"1298:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2636,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:17"},"scope":2801,"src":"1243:173:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2678,"nodeType":"Block","src":"1595:100:17","statements":[{"id":2677,"nodeType":"UncheckedBlock","src":"1605:84:17","statements":[{"expression":{"arguments":[{"id":2668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"1648:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"1667:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2669,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"1655:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4273_$","typeString":"type(library Math)"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:17","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4233,"src":"1655:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2667,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2679,2755,2775],"referencedDeclaration":2755,"src":"1636:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2666,"id":2676,"nodeType":"Return","src":"1629:49:17"}]}]},"documentation":{"id":2660,"nodeType":"StructuredDocumentation","src":"1422:94:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2679,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:17","nodeType":"FunctionDefinition","parameters":{"id":2663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"value","nameLocation":"1550:5:17","nodeType":"VariableDeclaration","scope":2679,"src":"1542:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:17"},"returnParameters":{"id":2666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2679,"src":"1580:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2664,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:17"},"scope":2801,"src":"1521:174:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2754,"nodeType":"Block","src":"1908:347:17","statements":[{"assignments":[2690],"declarations":[{"constant":false,"id":2690,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:17","nodeType":"VariableDeclaration","scope":2754,"src":"1918:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2689,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2699,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2694,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"1954:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2691,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:17"},{"expression":{"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2700,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"1975:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2702,"indexExpression":{"hexValue":"30","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2705,"nodeType":"ExpressionStatement","src":"1975:15:17"},{"expression":{"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2706,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"2000:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2708,"indexExpression":{"hexValue":"31","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2711,"nodeType":"ExpressionStatement","src":"2000:15:17"},{"body":{"id":2740,"nodeType":"Block","src":"2070:83:17","statements":[{"expression":{"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2726,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"2084:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2728,"indexExpression":{"id":2727,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"2091:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2729,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"2096:8:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2733,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"2105:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2735,"nodeType":"ExpressionStatement","src":"2084:33:17"},{"expression":{"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"2131:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2739,"nodeType":"ExpressionStatement","src":"2131:11:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2720,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"2058:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2741,"initializationExpression":{"assignments":[2713],"declarations":[{"constant":false,"id":2713,"mutability":"mutable","name":"i","nameLocation":"2038:1:17","nodeType":"VariableDeclaration","scope":2741,"src":"2030:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2712,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2719,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2715,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2684,"src":"2046:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:17"},"loopExpression":{"expression":{"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:17","subExpression":{"id":2723,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"2067:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2725,"nodeType":"ExpressionStatement","src":"2065:3:17"},"nodeType":"ForStatement","src":"2025:128:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"2170:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2742,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2748,"nodeType":"ExpressionStatement","src":"2162:55:17"},{"expression":{"arguments":[{"id":2751,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"2241:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2749,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:17","typeDescriptions":{}}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2688,"id":2753,"nodeType":"Return","src":"2227:21:17"}]},"documentation":{"id":2680,"nodeType":"StructuredDocumentation","src":"1701:112:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2755,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:17","nodeType":"FunctionDefinition","parameters":{"id":2685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2682,"mutability":"mutable","name":"value","nameLocation":"1847:5:17","nodeType":"VariableDeclaration","scope":2755,"src":"1839:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2681,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2684,"mutability":"mutable","name":"length","nameLocation":"1862:6:17","nodeType":"VariableDeclaration","scope":2755,"src":"1854:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2683,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:17"},"returnParameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2755,"src":"1893:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2686,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:17"},"scope":2801,"src":"1818:437:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2774,"nodeType":"Block","src":"2480:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2768,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"2525:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2766,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:17","typeDescriptions":{}}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2764,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:17","typeDescriptions":{}}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2771,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"2533:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2763,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2679,2755,2775],"referencedDeclaration":2755,"src":"2497:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2762,"id":2773,"nodeType":"Return","src":"2490:59:17"}]},"documentation":{"id":2756,"nodeType":"StructuredDocumentation","src":"2261:141:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2775,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:17","nodeType":"FunctionDefinition","parameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2758,"mutability":"mutable","name":"addr","nameLocation":"2436:4:17","nodeType":"VariableDeclaration","scope":2775,"src":"2428:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2757,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:17"},"returnParameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2775,"src":"2465:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2760,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:17"},"scope":2801,"src":"2407:149:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2799,"nodeType":"Block","src":"2711:66:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2788,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"2744:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2786,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:17","typeDescriptions":{}}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2785,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2794,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"2767:1:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2792,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:17","typeDescriptions":{}}},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2791,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2784,"id":2798,"nodeType":"Return","src":"2721:49:17"}]},"documentation":{"id":2776,"nodeType":"StructuredDocumentation","src":"2562:66:17","text":" @dev Returns true if the two strings are equal."},"id":2800,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:17","nodeType":"FunctionDefinition","parameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2778,"mutability":"mutable","name":"a","nameLocation":"2662:1:17","nodeType":"VariableDeclaration","scope":2800,"src":"2648:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2777,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2780,"mutability":"mutable","name":"b","nameLocation":"2679:1:17","nodeType":"VariableDeclaration","scope":2800,"src":"2665:15:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2779,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:17"},"returnParameters":{"id":2784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2800,"src":"2705:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2782,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:17"},"scope":2801,"src":"2633:144:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2802,"src":"220:2559:17","usedErrors":[]}],"src":"101:2679:17"},"id":17},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3167],"Math":[4273],"SignedMath":[5919],"Strings":[2801]},"id":3168,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2803,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:18"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2804,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3168,"sourceUnit":2802,"src":"137:24:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2805,"nodeType":"StructuredDocumentation","src":"163:205:18","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3167,"linearizedBaseContracts":[3167],"name":"ECDSA","nameLocation":"377:5:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2811,"members":[{"id":2806,"name":"NoError","nameLocation":"417:7:18","nodeType":"EnumValue","src":"417:7:18"},{"id":2807,"name":"InvalidSignature","nameLocation":"434:16:18","nodeType":"EnumValue","src":"434:16:18"},{"id":2808,"name":"InvalidSignatureLength","nameLocation":"460:22:18","nodeType":"EnumValue","src":"460:22:18"},{"id":2809,"name":"InvalidSignatureS","nameLocation":"492:17:18","nodeType":"EnumValue","src":"492:17:18"},{"id":2810,"name":"InvalidSignatureV","nameLocation":"519:17:18","nodeType":"EnumValue","src":"519:17:18"}],"name":"RecoverError","nameLocation":"394:12:18","nodeType":"EnumDefinition","src":"389:175:18"},{"body":{"id":2854,"nodeType":"Block","src":"624:457:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2817,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"638:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2818,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"647:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2811_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"660:7:18","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2806,"src":"647:20:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}},"src":"638:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2823,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"734:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2824,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"743:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2811_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"756:16:18","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2807,"src":"743:29:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}},"src":"734:38:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2832,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"843:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2833,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"852:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2811_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"865:22:18","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2808,"src":"852:35:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}},"src":"843:44:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2841,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"965:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2842,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"974:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2811_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"987:17:18","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2809,"src":"974:30:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}},"src":"965:39:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2850,"nodeType":"IfStatement","src":"961:114:18","trueBody":{"id":2849,"nodeType":"Block","src":"1006:69:18","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1027:36:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":2845,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1020:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1020:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2848,"nodeType":"ExpressionStatement","src":"1020:44:18"}]}},"id":2851,"nodeType":"IfStatement","src":"839:236:18","trueBody":{"id":2840,"nodeType":"Block","src":"889:66:18","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"910:33:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":2836,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"903:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"903:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2839,"nodeType":"ExpressionStatement","src":"903:41:18"}]}},"id":2852,"nodeType":"IfStatement","src":"730:345:18","trueBody":{"id":2831,"nodeType":"Block","src":"774:59:18","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":2828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"795:26:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":2827,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"788:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"788:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2830,"nodeType":"ExpressionStatement","src":"788:34:18"}]}},"id":2853,"nodeType":"IfStatement","src":"634:441:18","trueBody":{"id":2822,"nodeType":"Block","src":"669:55:18","statements":[{"functionReturnParameters":2816,"id":2821,"nodeType":"Return","src":"683:7:18"}]}}]},"id":2855,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"579:11:18","nodeType":"FunctionDefinition","parameters":{"id":2815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2814,"mutability":"mutable","name":"error","nameLocation":"604:5:18","nodeType":"VariableDeclaration","scope":2855,"src":"591:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2813,"nodeType":"UserDefinedTypeName","pathNode":{"id":2812,"name":"RecoverError","nameLocations":["591:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2811,"src":"591:12:18"},"referencedDeclaration":2811,"src":"591:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"590:20:18"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[],"src":"624:0:18"},"scope":3167,"src":"570:511:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2900,"nodeType":"Block","src":"2249:626:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2868,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"2263:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2273:6:18","memberName":"length","nodeType":"MemberAccess","src":"2263:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2283:2:18","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2263:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2898,"nodeType":"Block","src":"2788:81:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2818:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2810:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2890,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:18","typeDescriptions":{}}},"id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2810:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2894,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"2822:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2811_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:22:18","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2808,"src":"2822:35:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}}],"id":2896,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2809:49:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2811_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2867,"id":2897,"nodeType":"Return","src":"2802:56:18"}]},"id":2899,"nodeType":"IfStatement","src":"2259:610:18","trueBody":{"id":2889,"nodeType":"Block","src":"2287:495:18","statements":[{"assignments":[2873],"declarations":[{"constant":false,"id":2873,"mutability":"mutable","name":"r","nameLocation":"2309:1:18","nodeType":"VariableDeclaration","scope":2889,"src":"2301:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2301:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2874,"nodeType":"VariableDeclarationStatement","src":"2301:9:18"},{"assignments":[2876],"declarations":[{"constant":false,"id":2876,"mutability":"mutable","name":"s","nameLocation":"2332:1:18","nodeType":"VariableDeclaration","scope":2889,"src":"2324:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2877,"nodeType":"VariableDeclarationStatement","src":"2324:9:18"},{"assignments":[2879],"declarations":[{"constant":false,"id":2879,"mutability":"mutable","name":"v","nameLocation":"2353:1:18","nodeType":"VariableDeclaration","scope":2889,"src":"2347:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2878,"name":"uint8","nodeType":"ElementaryTypeName","src":"2347:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2880,"nodeType":"VariableDeclarationStatement","src":"2347:7:18"},{"AST":{"nodeType":"YulBlock","src":"2555:171:18","statements":[{"nodeType":"YulAssignment","src":"2573:32:18","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2588:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2599:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2584:3:18"},"nodeType":"YulFunctionCall","src":"2584:20:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2578:5:18"},"nodeType":"YulFunctionCall","src":"2578:27:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2573:1:18"}]},{"nodeType":"YulAssignment","src":"2622:32:18","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2637:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2648:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2633:3:18"},"nodeType":"YulFunctionCall","src":"2633:20:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2627:5:18"},"nodeType":"YulFunctionCall","src":"2627:27:18"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2622:1:18"}]},{"nodeType":"YulAssignment","src":"2671:41:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2681:1:18","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2694:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2705:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2690:3:18"},"nodeType":"YulFunctionCall","src":"2690:20:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2684:5:18"},"nodeType":"YulFunctionCall","src":"2684:27:18"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2676:4:18"},"nodeType":"YulFunctionCall","src":"2676:36:18"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2671:1:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2873,"isOffset":false,"isSlot":false,"src":"2573:1:18","valueSize":1},{"declaration":2876,"isOffset":false,"isSlot":false,"src":"2622:1:18","valueSize":1},{"declaration":2860,"isOffset":false,"isSlot":false,"src":"2588:9:18","valueSize":1},{"declaration":2860,"isOffset":false,"isSlot":false,"src":"2637:9:18","valueSize":1},{"declaration":2860,"isOffset":false,"isSlot":false,"src":"2694:9:18","valueSize":1},{"declaration":2879,"isOffset":false,"isSlot":false,"src":"2671:1:18","valueSize":1}],"id":2881,"nodeType":"InlineAssembly","src":"2546:180:18"},{"expression":{"arguments":[{"id":2883,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2858,"src":"2757:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2884,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"2763:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2885,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"2766:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2886,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"2769:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2882,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2901,2975,3069],"referencedDeclaration":3069,"src":"2746:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2811_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2811_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2867,"id":2888,"nodeType":"Return","src":"2739:32:18"}]}}]},"documentation":{"id":2856,"nodeType":"StructuredDocumentation","src":"1087:1053:18","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":2901,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2154:10:18","nodeType":"FunctionDefinition","parameters":{"id":2861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2858,"mutability":"mutable","name":"hash","nameLocation":"2173:4:18","nodeType":"VariableDeclaration","scope":2901,"src":"2165:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2860,"mutability":"mutable","name":"signature","nameLocation":"2192:9:18","nodeType":"VariableDeclaration","scope":2901,"src":"2179:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2859,"name":"bytes","nodeType":"ElementaryTypeName","src":"2179:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2164:38:18"},"returnParameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2901,"src":"2226:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2862,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2901,"src":"2235:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2865,"nodeType":"UserDefinedTypeName","pathNode":{"id":2864,"name":"RecoverError","nameLocations":["2235:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2811,"src":"2235:12:18"},"referencedDeclaration":2811,"src":"2235:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2225:23:18"},"scope":3167,"src":"2145:730:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2927,"nodeType":"Block","src":"3748:140:18","statements":[{"assignments":[2912,2915],"declarations":[{"constant":false,"id":2912,"mutability":"mutable","name":"recovered","nameLocation":"3767:9:18","nodeType":"VariableDeclaration","scope":2927,"src":"3759:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2911,"name":"address","nodeType":"ElementaryTypeName","src":"3759:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2915,"mutability":"mutable","name":"error","nameLocation":"3791:5:18","nodeType":"VariableDeclaration","scope":2927,"src":"3778:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2914,"nodeType":"UserDefinedTypeName","pathNode":{"id":2913,"name":"RecoverError","nameLocations":["3778:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2811,"src":"3778:12:18"},"referencedDeclaration":2811,"src":"3778:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2920,"initialValue":{"arguments":[{"id":2917,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2904,"src":"3811:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2918,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"3817:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2916,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2901,2975,3069],"referencedDeclaration":2901,"src":"3800:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2811_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3800:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2811_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3758:69:18"},{"expression":{"arguments":[{"id":2922,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"3849:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}],"id":2921,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"3837:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2811_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3837:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2924,"nodeType":"ExpressionStatement","src":"3837:18:18"},{"expression":{"id":2925,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2912,"src":"3872:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2910,"id":2926,"nodeType":"Return","src":"3865:16:18"}]},"documentation":{"id":2902,"nodeType":"StructuredDocumentation","src":"2881:775:18","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":2928,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3670:7:18","nodeType":"FunctionDefinition","parameters":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"hash","nameLocation":"3686:4:18","nodeType":"VariableDeclaration","scope":2928,"src":"3678:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3678:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2906,"mutability":"mutable","name":"signature","nameLocation":"3705:9:18","nodeType":"VariableDeclaration","scope":2928,"src":"3692:22:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2905,"name":"bytes","nodeType":"ElementaryTypeName","src":"3692:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3677:38:18"},"returnParameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2928,"src":"3739:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2908,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3738:9:18"},"scope":3167,"src":"3661:227:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2974,"nodeType":"Block","src":"4245:203:18","statements":[{"assignments":[2944],"declarations":[{"constant":false,"id":2944,"mutability":"mutable","name":"s","nameLocation":"4263:1:18","nodeType":"VariableDeclaration","scope":2974,"src":"4255:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2943,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2951,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2945,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"4267:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4280:66:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4272:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2946,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4272:7:18","typeDescriptions":{}}},"id":2949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:75:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4267:80:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4255:92:18"},{"assignments":[2953],"declarations":[{"constant":false,"id":2953,"mutability":"mutable","name":"v","nameLocation":"4363:1:18","nodeType":"VariableDeclaration","scope":2974,"src":"4357:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2952,"name":"uint8","nodeType":"ElementaryTypeName","src":"4357:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2966,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2958,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"4382:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4374:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2956,"name":"uint256","nodeType":"ElementaryTypeName","src":"4374:7:18","typeDescriptions":{}}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4374:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4389:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4374:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2962,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4373:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4396:2:18","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4373:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4367:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2954,"name":"uint8","nodeType":"ElementaryTypeName","src":"4367:5:18","typeDescriptions":{}}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4367:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4357:42:18"},{"expression":{"arguments":[{"id":2968,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"4427:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2969,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"4433:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2970,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"4436:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2971,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"4439:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2967,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2901,2975,3069],"referencedDeclaration":3069,"src":"4416:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2811_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4416:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2811_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2942,"id":2973,"nodeType":"Return","src":"4409:32:18"}]},"documentation":{"id":2929,"nodeType":"StructuredDocumentation","src":"3894:243:18","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":2975,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4151:10:18","nodeType":"FunctionDefinition","parameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2931,"mutability":"mutable","name":"hash","nameLocation":"4170:4:18","nodeType":"VariableDeclaration","scope":2975,"src":"4162:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4162:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2933,"mutability":"mutable","name":"r","nameLocation":"4184:1:18","nodeType":"VariableDeclaration","scope":2975,"src":"4176:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4176:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2935,"mutability":"mutable","name":"vs","nameLocation":"4195:2:18","nodeType":"VariableDeclaration","scope":2975,"src":"4187:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4187:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4161:37:18"},"returnParameters":{"id":2942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2975,"src":"4222:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2937,"name":"address","nodeType":"ElementaryTypeName","src":"4222:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2975,"src":"4231:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2940,"nodeType":"UserDefinedTypeName","pathNode":{"id":2939,"name":"RecoverError","nameLocations":["4231:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2811,"src":"4231:12:18"},"referencedDeclaration":2811,"src":"4231:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4221:23:18"},"scope":3167,"src":"4142:306:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3004,"nodeType":"Block","src":"4699:136:18","statements":[{"assignments":[2988,2991],"declarations":[{"constant":false,"id":2988,"mutability":"mutable","name":"recovered","nameLocation":"4718:9:18","nodeType":"VariableDeclaration","scope":3004,"src":"4710:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2987,"name":"address","nodeType":"ElementaryTypeName","src":"4710:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2991,"mutability":"mutable","name":"error","nameLocation":"4742:5:18","nodeType":"VariableDeclaration","scope":3004,"src":"4729:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2990,"nodeType":"UserDefinedTypeName","pathNode":{"id":2989,"name":"RecoverError","nameLocations":["4729:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2811,"src":"4729:12:18"},"referencedDeclaration":2811,"src":"4729:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2997,"initialValue":{"arguments":[{"id":2993,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"4762:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2994,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"4768:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2995,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2982,"src":"4771:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2992,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2901,2975,3069],"referencedDeclaration":2975,"src":"4751:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2811_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4751:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2811_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4709:65:18"},{"expression":{"arguments":[{"id":2999,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"4796:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}],"id":2998,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"4784:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2811_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3001,"nodeType":"ExpressionStatement","src":"4784:18:18"},{"expression":{"id":3002,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"4819:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2986,"id":3003,"nodeType":"Return","src":"4812:16:18"}]},"documentation":{"id":2976,"nodeType":"StructuredDocumentation","src":"4454:154:18","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":3005,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4622:7:18","nodeType":"FunctionDefinition","parameters":{"id":2983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"hash","nameLocation":"4638:4:18","nodeType":"VariableDeclaration","scope":3005,"src":"4630:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4630:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2980,"mutability":"mutable","name":"r","nameLocation":"4652:1:18","nodeType":"VariableDeclaration","scope":3005,"src":"4644:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2979,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2982,"mutability":"mutable","name":"vs","nameLocation":"4663:2:18","nodeType":"VariableDeclaration","scope":3005,"src":"4655:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4655:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4629:37:18"},"returnParameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3005,"src":"4690:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2984,"name":"address","nodeType":"ElementaryTypeName","src":"4690:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4689:9:18"},"scope":3167,"src":"4613:222:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3068,"nodeType":"Block","src":"5120:1345:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3024,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"6016:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"6008:7:18","typeDescriptions":{}}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6021:66:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6008:79:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3037,"nodeType":"IfStatement","src":"6004:161:18","trueBody":{"id":3036,"nodeType":"Block","src":"6089:76:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6119:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6111:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3028,"name":"address","nodeType":"ElementaryTypeName","src":"6111:7:18","typeDescriptions":{}}},"id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6111:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3032,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"6123:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2811_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6136:17:18","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2809,"src":"6123:30:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}}],"id":3034,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6110:44:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2811_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3021,"id":3035,"nodeType":"Return","src":"6103:51:18"}]}},{"assignments":[3039],"declarations":[{"constant":false,"id":3039,"mutability":"mutable","name":"signer","nameLocation":"6267:6:18","nodeType":"VariableDeclaration","scope":3068,"src":"6259:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3038,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3046,"initialValue":{"arguments":[{"id":3041,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"6286:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3042,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"6292:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3043,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"6295:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3044,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"6298:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3040,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6276:9:18","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6276:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6259:41:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3047,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"6314:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6332:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6324:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3048,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:18","typeDescriptions":{}}},"id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6324:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6314:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3062,"nodeType":"IfStatement","src":"6310:101:18","trueBody":{"id":3061,"nodeType":"Block","src":"6336:75:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6366:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6358:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3053,"name":"address","nodeType":"ElementaryTypeName","src":"6358:7:18","typeDescriptions":{}}},"id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6358:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3057,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"6370:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2811_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6383:16:18","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2807,"src":"6370:29:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}}],"id":3059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6357:43:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2811_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3021,"id":3060,"nodeType":"Return","src":"6350:50:18"}]}},{"expression":{"components":[{"id":3063,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"6429:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3064,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2811,"src":"6437:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2811_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6450:7:18","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2806,"src":"6437:20:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}}],"id":3066,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:30:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2811_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":3021,"id":3067,"nodeType":"Return","src":"6421:37:18"}]},"documentation":{"id":3006,"nodeType":"StructuredDocumentation","src":"4841:163:18","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":3069,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5018:10:18","nodeType":"FunctionDefinition","parameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3008,"mutability":"mutable","name":"hash","nameLocation":"5037:4:18","nodeType":"VariableDeclaration","scope":3069,"src":"5029:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5029:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3010,"mutability":"mutable","name":"v","nameLocation":"5049:1:18","nodeType":"VariableDeclaration","scope":3069,"src":"5043:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3009,"name":"uint8","nodeType":"ElementaryTypeName","src":"5043:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3012,"mutability":"mutable","name":"r","nameLocation":"5060:1:18","nodeType":"VariableDeclaration","scope":3069,"src":"5052:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3011,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5052:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3014,"mutability":"mutable","name":"s","nameLocation":"5071:1:18","nodeType":"VariableDeclaration","scope":3069,"src":"5063:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3013,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5028:45:18"},"returnParameters":{"id":3021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3069,"src":"5097:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3016,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3069,"src":"5106:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3019,"nodeType":"UserDefinedTypeName","pathNode":{"id":3018,"name":"RecoverError","nameLocations":["5106:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2811,"src":"5106:12:18"},"referencedDeclaration":2811,"src":"5106:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5096:23:18"},"scope":3167,"src":"5009:1456:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3101,"nodeType":"Block","src":"6692:138:18","statements":[{"assignments":[3084,3087],"declarations":[{"constant":false,"id":3084,"mutability":"mutable","name":"recovered","nameLocation":"6711:9:18","nodeType":"VariableDeclaration","scope":3101,"src":"6703:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3083,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3087,"mutability":"mutable","name":"error","nameLocation":"6735:5:18","nodeType":"VariableDeclaration","scope":3101,"src":"6722:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3086,"nodeType":"UserDefinedTypeName","pathNode":{"id":3085,"name":"RecoverError","nameLocations":["6722:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2811,"src":"6722:12:18"},"referencedDeclaration":2811,"src":"6722:12:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":3094,"initialValue":{"arguments":[{"id":3089,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"6755:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3090,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"6761:1:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3091,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"6764:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3092,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"6767:1:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3088,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2901,2975,3069],"referencedDeclaration":3069,"src":"6744:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2811_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6744:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2811_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"6702:67:18"},{"expression":{"arguments":[{"id":3096,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"6791:5:18","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2811","typeString":"enum ECDSA.RecoverError"}],"id":3095,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"6779:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2811_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6779:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3098,"nodeType":"ExpressionStatement","src":"6779:18:18"},{"expression":{"id":3099,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"6814:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3082,"id":3100,"nodeType":"Return","src":"6807:16:18"}]},"documentation":{"id":3070,"nodeType":"StructuredDocumentation","src":"6471:122:18","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3102,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6607:7:18","nodeType":"FunctionDefinition","parameters":{"id":3079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"hash","nameLocation":"6623:4:18","nodeType":"VariableDeclaration","scope":3102,"src":"6615:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3071,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6615:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3074,"mutability":"mutable","name":"v","nameLocation":"6635:1:18","nodeType":"VariableDeclaration","scope":3102,"src":"6629:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3073,"name":"uint8","nodeType":"ElementaryTypeName","src":"6629:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3076,"mutability":"mutable","name":"r","nameLocation":"6646:1:18","nodeType":"VariableDeclaration","scope":3102,"src":"6638:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6638:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3078,"mutability":"mutable","name":"s","nameLocation":"6657:1:18","nodeType":"VariableDeclaration","scope":3102,"src":"6649:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6649:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6614:45:18"},"returnParameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3102,"src":"6683:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3080,"name":"address","nodeType":"ElementaryTypeName","src":"6683:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6682:9:18"},"scope":3167,"src":"6598:232:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3111,"nodeType":"Block","src":"7206:310:18","statements":[{"AST":{"nodeType":"YulBlock","src":"7362:148:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7383:4:18","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"7389:34:18","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:18"},"nodeType":"YulFunctionCall","src":"7376:48:18"},"nodeType":"YulExpressionStatement","src":"7376:48:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7444:4:18","type":"","value":"0x1c"},{"name":"hash","nodeType":"YulIdentifier","src":"7450:4:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7437:6:18"},"nodeType":"YulFunctionCall","src":"7437:18:18"},"nodeType":"YulExpressionStatement","src":"7437:18:18"},{"nodeType":"YulAssignment","src":"7468:32:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7489:4:18","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:18","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7479:9:18"},"nodeType":"YulFunctionCall","src":"7479:21:18"},"variableNames":[{"name":"message","nodeType":"YulIdentifier","src":"7468:7:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3105,"isOffset":false,"isSlot":false,"src":"7450:4:18","valueSize":1},{"declaration":3108,"isOffset":false,"isSlot":false,"src":"7468:7:18","valueSize":1}],"id":3110,"nodeType":"InlineAssembly","src":"7353:157:18"}]},"documentation":{"id":3103,"nodeType":"StructuredDocumentation","src":"6836:279:18","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3112,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7129:22:18","nodeType":"FunctionDefinition","parameters":{"id":3106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3105,"mutability":"mutable","name":"hash","nameLocation":"7160:4:18","nodeType":"VariableDeclaration","scope":3112,"src":"7152:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7151:14:18"},"returnParameters":{"id":3109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3108,"mutability":"mutable","name":"message","nameLocation":"7197:7:18","nodeType":"VariableDeclaration","scope":3112,"src":"7189:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7189:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7188:17:18"},"scope":3167,"src":"7120:396:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3133,"nodeType":"Block","src":"7881:116:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7925:32:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":3126,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"7976:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7978:6:18","memberName":"length","nodeType":"MemberAccess","src":"7976:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3124,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"7959:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2801_$","typeString":"type(library Strings)"}},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7967:8:18","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2631,"src":"7959:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7959:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3129,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"7987:1:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3121,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7908:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7912:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"7908:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:81:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3120,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7898:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7898:92:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3119,"id":3132,"nodeType":"Return","src":"7891:99:18"}]},"documentation":{"id":3113,"nodeType":"StructuredDocumentation","src":"7522:274:18","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":3134,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7810:22:18","nodeType":"FunctionDefinition","parameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"s","nameLocation":"7846:1:18","nodeType":"VariableDeclaration","scope":3134,"src":"7833:14:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3114,"name":"bytes","nodeType":"ElementaryTypeName","src":"7833:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:16:18"},"returnParameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3134,"src":"7872:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7872:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7871:9:18"},"scope":3167,"src":"7801:196:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3145,"nodeType":"Block","src":"8443:290:18","statements":[{"AST":{"nodeType":"YulBlock","src":"8505:222:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8519:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8536:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8530:5:18"},"nodeType":"YulFunctionCall","src":"8530:11:18"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8523:3:18","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8561:3:18"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"8566:10:18","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8554:6:18"},"nodeType":"YulFunctionCall","src":"8554:23:18"},"nodeType":"YulExpressionStatement","src":"8554:23:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8601:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8606:4:18","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8597:3:18"},"nodeType":"YulFunctionCall","src":"8597:14:18"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"8613:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8590:6:18"},"nodeType":"YulFunctionCall","src":"8590:39:18"},"nodeType":"YulExpressionStatement","src":"8590:39:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8653:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8658:4:18","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8649:3:18"},"nodeType":"YulFunctionCall","src":"8649:14:18"},{"name":"structHash","nodeType":"YulIdentifier","src":"8665:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8642:6:18"},"nodeType":"YulFunctionCall","src":"8642:34:18"},"nodeType":"YulExpressionStatement","src":"8642:34:18"},{"nodeType":"YulAssignment","src":"8689:28:18","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8707:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"8712:4:18","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8697:9:18"},"nodeType":"YulFunctionCall","src":"8697:20:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8689:4:18"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3142,"isOffset":false,"isSlot":false,"src":"8689:4:18","valueSize":1},{"declaration":3137,"isOffset":false,"isSlot":false,"src":"8613:15:18","valueSize":1},{"declaration":3139,"isOffset":false,"isSlot":false,"src":"8665:10:18","valueSize":1}],"id":3144,"nodeType":"InlineAssembly","src":"8496:231:18"}]},"documentation":{"id":3135,"nodeType":"StructuredDocumentation","src":"8003:328:18","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":3146,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8345:15:18","nodeType":"FunctionDefinition","parameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3137,"mutability":"mutable","name":"domainSeparator","nameLocation":"8369:15:18","nodeType":"VariableDeclaration","scope":3146,"src":"8361:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8361:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3139,"mutability":"mutable","name":"structHash","nameLocation":"8394:10:18","nodeType":"VariableDeclaration","scope":3146,"src":"8386:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8386:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8360:45:18"},"returnParameters":{"id":3143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"mutability":"mutable","name":"data","nameLocation":"8437:4:18","nodeType":"VariableDeclaration","scope":3146,"src":"8429:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8429:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8428:14:18"},"scope":3167,"src":"8336:397:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3165,"nodeType":"Block","src":"9048:80:18","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:10:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3160,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"9104:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3161,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"9115:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3157,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9075:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9079:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"9075:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9075:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3156,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9065:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9065:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3155,"id":3164,"nodeType":"Return","src":"9058:63:18"}]},"documentation":{"id":3147,"nodeType":"StructuredDocumentation","src":"8739:193:18","text":" @dev Returns an Ethereum Signed Data with intended validator, created from a\n `validator` and `data` according to the version 0 of EIP-191.\n See {recover}."},"id":3166,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"8946:31:18","nodeType":"FunctionDefinition","parameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3149,"mutability":"mutable","name":"validator","nameLocation":"8986:9:18","nodeType":"VariableDeclaration","scope":3166,"src":"8978:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3148,"name":"address","nodeType":"ElementaryTypeName","src":"8978:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3151,"mutability":"mutable","name":"data","nameLocation":"9010:4:18","nodeType":"VariableDeclaration","scope":3166,"src":"8997:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3150,"name":"bytes","nodeType":"ElementaryTypeName","src":"8997:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8977:38:18"},"returnParameters":{"id":3155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3166,"src":"9039:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9039:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:9:18"},"scope":3167,"src":"8937:191:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3168,"src":"369:8761:18","usedErrors":[]}],"src":"112:9019:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"ECDSA":[3167],"EIP712":[3371],"IERC5267":[491],"Math":[4273],"ShortString":[2251],"ShortStrings":[2462],"SignedMath":[5919],"StorageSlot":[2572],"Strings":[2801]},"id":3372,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3169,"literals":["solidity","^","0.8",".8"],"nodeType":"PragmaDirective","src":"113:23:19"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":3170,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3372,"sourceUnit":3168,"src":"138:21:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3372,"sourceUnit":2463,"src":"160:29:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3172,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3372,"sourceUnit":492,"src":"190:39:19","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3174,"name":"IERC5267","nameLocations":["1837:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":491,"src":"1837:8:19"},"id":3175,"nodeType":"InheritanceSpecifier","src":"1837:8:19"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3173,"nodeType":"StructuredDocumentation","src":"231:1577:19","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n _Available since v3.4._\n @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"fullyImplemented":true,"id":3371,"linearizedBaseContracts":[3371,491],"name":"EIP712","nameLocation":"1827:6:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3177,"libraryName":{"id":3176,"name":"ShortStrings","nameLocations":["1858:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2462,"src":"1858:12:19"},"nodeType":"UsingForDirective","src":"1852:25:19"},{"constant":true,"id":3182,"mutability":"constant","name":"_TYPE_HASH","nameLocation":"1908:10:19","nodeType":"VariableDeclaration","scope":3371,"src":"1883:141:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1883:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1939:84:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3179,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1929:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:95:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3184,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2249:22:19","nodeType":"VariableDeclaration","scope":3371,"src":"2223:48:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2223:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3186,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2303:14:19","nodeType":"VariableDeclaration","scope":3371,"src":"2277:40:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"2277:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3188,"mutability":"immutable","name":"_cachedThis","nameLocation":"2349:11:19","nodeType":"VariableDeclaration","scope":3371,"src":"2323:37:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3187,"name":"address","nodeType":"ElementaryTypeName","src":"2323:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3190,"mutability":"immutable","name":"_hashedName","nameLocation":"2393:11:19","nodeType":"VariableDeclaration","scope":3371,"src":"2367:37:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2367:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3192,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2436:14:19","nodeType":"VariableDeclaration","scope":3371,"src":"2410:40:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2410:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3195,"mutability":"immutable","name":"_name","nameLocation":"2487:5:19","nodeType":"VariableDeclaration","scope":3371,"src":"2457:35:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"},"typeName":{"id":3194,"nodeType":"UserDefinedTypeName","pathNode":{"id":3193,"name":"ShortString","nameLocations":["2457:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"2457:11:19"},"referencedDeclaration":2251,"src":"2457:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3198,"mutability":"immutable","name":"_version","nameLocation":"2528:8:19","nodeType":"VariableDeclaration","scope":3371,"src":"2498:38:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"},"typeName":{"id":3197,"nodeType":"UserDefinedTypeName","pathNode":{"id":3196,"name":"ShortString","nameLocations":["2498:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":2251,"src":"2498:11:19"},"referencedDeclaration":2251,"src":"2498:11:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3200,"mutability":"mutable","name":"_nameFallback","nameLocation":"2557:13:19","nodeType":"VariableDeclaration","scope":3371,"src":"2542:28:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3199,"name":"string","nodeType":"ElementaryTypeName","src":"2542:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3202,"mutability":"mutable","name":"_versionFallback","nameLocation":"2591:16:19","nodeType":"VariableDeclaration","scope":3371,"src":"2576:31:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3201,"name":"string","nodeType":"ElementaryTypeName","src":"2576:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3259,"nodeType":"Block","src":"3233:376:19","statements":[{"expression":{"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3210,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"3243:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3213,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"3282:13:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3211,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"3251:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3256:25:19","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2403,"src":"3251:30:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2251_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"src":"3243:53:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"id":3216,"nodeType":"ExpressionStatement","src":"3243:53:19"},{"expression":{"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3217,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"3306:8:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3220,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"3351:16:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3218,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"3317:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3325:25:19","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2403,"src":"3317:33:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2251_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3317:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"src":"3306:62:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"id":3223,"nodeType":"ExpressionStatement","src":"3306:62:19"},{"expression":{"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3224,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"3378:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3228,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"3408:4:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3402:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3226,"name":"bytes","nodeType":"ElementaryTypeName","src":"3402:5:19","typeDescriptions":{}}},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3402:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3225,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3392:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3392:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3378:36:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3232,"nodeType":"ExpressionStatement","src":"3378:36:19"},{"expression":{"id":3240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3233,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"3424:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3237,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"3457:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3451:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3235,"name":"bytes","nodeType":"ElementaryTypeName","src":"3451:5:19","typeDescriptions":{}}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3451:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3234,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3441:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3441:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3424:42:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3241,"nodeType":"ExpressionStatement","src":"3424:42:19"},{"expression":{"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3242,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"3477:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3243,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3494:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3500:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"3494:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3477:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3246,"nodeType":"ExpressionStatement","src":"3477:30:19"},{"expression":{"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3247,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"3517:22:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3248,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"3542:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3517:48:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3251,"nodeType":"ExpressionStatement","src":"3517:48:19"},{"expression":{"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3252,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"3575:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3255,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3597:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3371","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3371","typeString":"contract EIP712"}],"id":3254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3589:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3253,"name":"address","nodeType":"ElementaryTypeName","src":"3589:7:19","typeDescriptions":{}}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3589:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3575:27:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3258,"nodeType":"ExpressionStatement","src":"3575:27:19"}]},"documentation":{"id":3203,"nodeType":"StructuredDocumentation","src":"2614:559:19","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3260,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"name","nameLocation":"3204:4:19","nodeType":"VariableDeclaration","scope":3260,"src":"3190:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3204,"name":"string","nodeType":"ElementaryTypeName","src":"3190:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3207,"mutability":"mutable","name":"version","nameLocation":"3224:7:19","nodeType":"VariableDeclaration","scope":3260,"src":"3210:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3206,"name":"string","nodeType":"ElementaryTypeName","src":"3210:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3189:43:19"},"returnParameters":{"id":3209,"nodeType":"ParameterList","parameters":[],"src":"3233:0:19"},"scope":3371,"src":"3178:431:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3285,"nodeType":"Block","src":"3757:200:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3268,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3779:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3371","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3371","typeString":"contract EIP712"}],"id":3267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3771:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3266,"name":"address","nodeType":"ElementaryTypeName","src":"3771:7:19","typeDescriptions":{}}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3771:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3270,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"3788:11:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3771:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3272,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3803:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3809:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"3803:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3274,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"3820:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3803:31:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3771:63:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3283,"nodeType":"Block","src":"3896:55:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3280,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"3917:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3917:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3265,"id":3282,"nodeType":"Return","src":"3910:30:19"}]},"id":3284,"nodeType":"IfStatement","src":"3767:184:19","trueBody":{"id":3279,"nodeType":"Block","src":"3836:54:19","statements":[{"expression":{"id":3277,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3184,"src":"3857:22:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3265,"id":3278,"nodeType":"Return","src":"3850:29:19"}]}}]},"documentation":{"id":3261,"nodeType":"StructuredDocumentation","src":"3615:75:19","text":" @dev Returns the domain separator for the current chain."},"id":3286,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3704:18:19","nodeType":"FunctionDefinition","parameters":{"id":3262,"nodeType":"ParameterList","parameters":[],"src":"3722:2:19"},"returnParameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3286,"src":"3748:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3748:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3747:9:19"},"scope":3371,"src":"3695:262:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3306,"nodeType":"Block","src":"4027:116:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3294,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"4065:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3295,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"4077:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3296,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"4090:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3297,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4106:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4112:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"4106:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3301,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4129:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3371","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3371","typeString":"contract EIP712"}],"id":3300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4121:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3299,"name":"address","nodeType":"ElementaryTypeName","src":"4121:7:19","typeDescriptions":{}}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4121:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3292,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4054:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4058:6:19","memberName":"encode","nodeType":"MemberAccess","src":"4054:10:19","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4054:81:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3291,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4044:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4044:92:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3290,"id":3305,"nodeType":"Return","src":"4037:99:19"}]},"id":3307,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3972:21:19","nodeType":"FunctionDefinition","parameters":{"id":3287,"nodeType":"ParameterList","parameters":[],"src":"3993:2:19"},"returnParameters":{"id":3290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3307,"src":"4018:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4018:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4017:9:19"},"scope":3371,"src":"3963:180:19","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3322,"nodeType":"Block","src":"4854:79:19","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3317,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"4893:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4893:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3319,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"4915:10:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3315,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"4871:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3167_$","typeString":"type(library ECDSA)"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4877:15:19","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3146,"src":"4871:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4871:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3314,"id":3321,"nodeType":"Return","src":"4864:62:19"}]},"documentation":{"id":3308,"nodeType":"StructuredDocumentation","src":"4149:614:19","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3323,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4777:16:19","nodeType":"FunctionDefinition","parameters":{"id":3311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3310,"mutability":"mutable","name":"structHash","nameLocation":"4802:10:19","nodeType":"VariableDeclaration","scope":3323,"src":"4794:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4794:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4793:20:19"},"returnParameters":{"id":3314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3323,"src":"4845:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4845:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4844:9:19"},"scope":3371,"src":"4768:165:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[490],"body":{"id":3369,"nodeType":"Block","src":"5366:288:19","statements":[{"expression":{"components":[{"hexValue":"0f","id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5397:7:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[{"id":3346,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"5454:13:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3344,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"5427:5:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5433:20:19","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2430,"src":"5427:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2251_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2251_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5427:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":3350,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"5512:16:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3348,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"5482:8:19","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2251","typeString":"ShortString"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5491:20:19","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2430,"src":"5482:29:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2251_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2251_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5482:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3352,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5543:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5549:7:19","memberName":"chainid","nodeType":"MemberAccess","src":"5543:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3356,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5578:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3371","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3371","typeString":"contract EIP712"}],"id":3355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5570:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3354,"name":"address","nodeType":"ElementaryTypeName","src":"5570:7:19","typeDescriptions":{}}},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5570:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5605:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5597:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5597:7:19","typeDescriptions":{}}},"id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5597:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5635:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5621:13:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3362,"name":"uint256","nodeType":"ElementaryTypeName","src":"5625:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3363,"nodeType":"ArrayTypeName","src":"5625:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5621:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3367,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5383:264:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3342,"id":3368,"nodeType":"Return","src":"5376:271:19"}]},"documentation":{"id":3324,"nodeType":"StructuredDocumentation","src":"4939:77:19","text":" @dev See {EIP-5267}.\n _Available since v4.9._"},"functionSelector":"84b0196e","id":3370,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5030:12:19","nodeType":"FunctionDefinition","overrides":{"id":3326,"nodeType":"OverrideSpecifier","overrides":[],"src":"5097:8:19"},"parameters":{"id":3325,"nodeType":"ParameterList","parameters":[],"src":"5042:2:19"},"returnParameters":{"id":3342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3328,"mutability":"mutable","name":"fields","nameLocation":"5143:6:19","nodeType":"VariableDeclaration","scope":3370,"src":"5136:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3327,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5136:6:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3330,"mutability":"mutable","name":"name","nameLocation":"5177:4:19","nodeType":"VariableDeclaration","scope":3370,"src":"5163:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3329,"name":"string","nodeType":"ElementaryTypeName","src":"5163:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3332,"mutability":"mutable","name":"version","nameLocation":"5209:7:19","nodeType":"VariableDeclaration","scope":3370,"src":"5195:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3331,"name":"string","nodeType":"ElementaryTypeName","src":"5195:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3334,"mutability":"mutable","name":"chainId","nameLocation":"5238:7:19","nodeType":"VariableDeclaration","scope":3370,"src":"5230:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3333,"name":"uint256","nodeType":"ElementaryTypeName","src":"5230:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3336,"mutability":"mutable","name":"verifyingContract","nameLocation":"5267:17:19","nodeType":"VariableDeclaration","scope":3370,"src":"5259:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3335,"name":"address","nodeType":"ElementaryTypeName","src":"5259:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3338,"mutability":"mutable","name":"salt","nameLocation":"5306:4:19","nodeType":"VariableDeclaration","scope":3370,"src":"5298:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5298:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3341,"mutability":"mutable","name":"extensions","nameLocation":"5341:10:19","nodeType":"VariableDeclaration","scope":3370,"src":"5324:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3339,"name":"uint256","nodeType":"ElementaryTypeName","src":"5324:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3340,"nodeType":"ArrayTypeName","src":"5324:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5122:239:19"},"scope":3371,"src":"5021:633:19","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3372,"src":"1809:3847:19","usedErrors":[2259,2261]}],"src":"113:5544:19"},"id":19},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3395],"IERC165":[3407]},"id":3396,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3373,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:20"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3374,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3396,"sourceUnit":3408,"src":"124:23:20","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3376,"name":"IERC165","nameLocations":["754:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":3407,"src":"754:7:20"},"id":3377,"nodeType":"InheritanceSpecifier","src":"754:7:20"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3375,"nodeType":"StructuredDocumentation","src":"149:576:20","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":3395,"linearizedBaseContracts":[3395,3407],"name":"ERC165","nameLocation":"744:6:20","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3406],"body":{"id":3393,"nodeType":"Block","src":"920:64:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3386,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"937:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3388,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"957:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3407_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3407_$","typeString":"type(contract IERC165)"}],"id":3387,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3407","typeString":"type(contract IERC165)"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:20","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3385,"id":3392,"nodeType":"Return","src":"930:47:20"}]},"documentation":{"id":3378,"nodeType":"StructuredDocumentation","src":"768:56:20","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3394,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:20","nodeType":"FunctionDefinition","overrides":{"id":3382,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:20"},"parameters":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:20","nodeType":"VariableDeclaration","scope":3394,"src":"856:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3379,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:20"},"returnParameters":{"id":3385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3394,"src":"914:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3383,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:20"},"scope":3395,"src":"829:155:20","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3396,"src":"726:260:20","usedErrors":[]}],"src":"99:888:20"},"id":20},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3407]},"id":3408,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3397,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3398,"nodeType":"StructuredDocumentation","src":"125:279:21","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3407,"linearizedBaseContracts":[3407],"name":"IERC165","nameLocation":"415:7:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3399,"nodeType":"StructuredDocumentation","src":"429:340:21","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3406,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:21","nodeType":"FunctionDefinition","parameters":{"id":3402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:21","nodeType":"VariableDeclaration","scope":3406,"src":"801:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3400,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:21"},"returnParameters":{"id":3405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3406,"src":"844:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3403,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:21"},"scope":3407,"src":"774:76:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3408,"src":"405:447:21","usedErrors":[]}],"src":"100:753:21"},"id":21},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4273]},"id":4274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3409,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3410,"nodeType":"StructuredDocumentation","src":"128:73:22","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4273,"linearizedBaseContracts":[4273],"name":"Math","nameLocation":"210:4:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3414,"members":[{"id":3411,"name":"Down","nameLocation":"245:4:22","nodeType":"EnumValue","src":"245:4:22"},{"id":3412,"name":"Up","nameLocation":"287:2:22","nodeType":"EnumValue","src":"287:2:22"},{"id":3413,"name":"Zero","nameLocation":"318:4:22","nodeType":"EnumValue","src":"318:4:22"}],"name":"Rounding","nameLocation":"226:8:22","nodeType":"EnumDefinition","src":"221:122:22"},{"body":{"id":3431,"nodeType":"Block","src":"480:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3424,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"497:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3425,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"501:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3428,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"509:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:22","trueExpression":{"id":3427,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"505:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3423,"id":3430,"nodeType":"Return","src":"490:20:22"}]},"documentation":{"id":3415,"nodeType":"StructuredDocumentation","src":"349:59:22","text":" @dev Returns the largest of two numbers."},"id":3432,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:22","nodeType":"FunctionDefinition","parameters":{"id":3420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3417,"mutability":"mutable","name":"a","nameLocation":"434:1:22","nodeType":"VariableDeclaration","scope":3432,"src":"426:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3416,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3419,"mutability":"mutable","name":"b","nameLocation":"445:1:22","nodeType":"VariableDeclaration","scope":3432,"src":"437:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3418,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:22"},"returnParameters":{"id":3423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3432,"src":"471:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3421,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:22"},"scope":4273,"src":"413:104:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3449,"nodeType":"Block","src":"655:37:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3442,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"672:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3443,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"676:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3446,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3437,"src":"684:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:22","trueExpression":{"id":3445,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3435,"src":"680:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3441,"id":3448,"nodeType":"Return","src":"665:20:22"}]},"documentation":{"id":3433,"nodeType":"StructuredDocumentation","src":"523:60:22","text":" @dev Returns the smallest of two numbers."},"id":3450,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:22","nodeType":"FunctionDefinition","parameters":{"id":3438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"mutability":"mutable","name":"a","nameLocation":"609:1:22","nodeType":"VariableDeclaration","scope":3450,"src":"601:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3434,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3437,"mutability":"mutable","name":"b","nameLocation":"620:1:22","nodeType":"VariableDeclaration","scope":3450,"src":"612:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3436,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:22"},"returnParameters":{"id":3441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3440,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3450,"src":"646:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3439,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:22"},"scope":4273,"src":"588:104:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3472,"nodeType":"Block","src":"876:82:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"931:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3461,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"935:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3463,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3464,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"941:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3465,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"945:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3467,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3459,"id":3471,"nodeType":"Return","src":"923:28:22"}]},"documentation":{"id":3451,"nodeType":"StructuredDocumentation","src":"698:102:22","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3473,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:22","nodeType":"FunctionDefinition","parameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"a","nameLocation":"830:1:22","nodeType":"VariableDeclaration","scope":3473,"src":"822:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3452,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3455,"mutability":"mutable","name":"b","nameLocation":"841:1:22","nodeType":"VariableDeclaration","scope":3473,"src":"833:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:22"},"returnParameters":{"id":3459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3473,"src":"867:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3457,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:22"},"scope":4273,"src":"805:153:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3497,"nodeType":"Block","src":"1228:123:22","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3483,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"1316:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3487,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"1330:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3491,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"1339:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:22","trueExpression":{"hexValue":"30","id":3486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3482,"id":3496,"nodeType":"Return","src":"1309:35:22"}]},"documentation":{"id":3474,"nodeType":"StructuredDocumentation","src":"964:188:22","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3498,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:22","nodeType":"FunctionDefinition","parameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"a","nameLocation":"1182:1:22","nodeType":"VariableDeclaration","scope":3498,"src":"1174:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3478,"mutability":"mutable","name":"b","nameLocation":"1193:1:22","nodeType":"VariableDeclaration","scope":3498,"src":"1185:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:22"},"returnParameters":{"id":3482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3498,"src":"1219:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:22"},"scope":4273,"src":"1157:194:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3620,"nodeType":"Block","src":"1765:4115:22","statements":[{"id":3619,"nodeType":"UncheckedBlock","src":"1775:4099:22","statements":[{"assignments":[3511],"declarations":[{"constant":false,"id":3511,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:22","nodeType":"VariableDeclaration","scope":3619,"src":"2096:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3510,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3512,"nodeType":"VariableDeclarationStatement","src":"2096:13:22"},{"assignments":[3514],"declarations":[{"constant":false,"id":3514,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:22","nodeType":"VariableDeclaration","scope":3619,"src":"2168:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3513,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3515,"nodeType":"VariableDeclarationStatement","src":"2168:13:22"},{"AST":{"nodeType":"YulBlock","src":"2248:157:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:22"},"nodeType":"YulFunctionCall","src":"2289:6:22"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:22"},"nodeType":"YulFunctionCall","src":"2276:20:22"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:22","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:22"},"nodeType":"YulFunctionCall","src":"2322:9:22"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:22"}]},{"nodeType":"YulAssignment","src":"2348:43:22","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:22"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:22"},"nodeType":"YulFunctionCall","src":"2361:14:22"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:22"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:22"},"nodeType":"YulFunctionCall","src":"2377:13:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:22"},"nodeType":"YulFunctionCall","src":"2357:34:22"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3511,"isOffset":false,"isSlot":false,"src":"2313:5:22","valueSize":1},{"declaration":3511,"isOffset":false,"isSlot":false,"src":"2369:5:22","valueSize":1},{"declaration":3511,"isOffset":false,"isSlot":false,"src":"2384:5:22","valueSize":1},{"declaration":3514,"isOffset":false,"isSlot":false,"src":"2348:5:22","valueSize":1},{"declaration":3501,"isOffset":false,"isSlot":false,"src":"2283:1:22","valueSize":1},{"declaration":3501,"isOffset":false,"isSlot":false,"src":"2326:1:22","valueSize":1},{"declaration":3503,"isOffset":false,"isSlot":false,"src":"2286:1:22","valueSize":1},{"declaration":3503,"isOffset":false,"isSlot":false,"src":"2329:1:22","valueSize":1}],"id":3516,"nodeType":"InlineAssembly","src":"2239:166:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3517,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"2486:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3525,"nodeType":"IfStatement","src":"2482:368:22","trueBody":{"id":3524,"nodeType":"Block","src":"2498:352:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3520,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"2816:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3521,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"2824:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3509,"id":3523,"nodeType":"Return","src":"2809:26:22"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3527,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"2960:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3528,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"2974:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":3526,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3532,"nodeType":"ExpressionStatement","src":"2952:53:22"},{"assignments":[3534],"declarations":[{"constant":false,"id":3534,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:22","nodeType":"VariableDeclaration","scope":3619,"src":"3261:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3533,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3535,"nodeType":"VariableDeclarationStatement","src":"3261:17:22"},{"AST":{"nodeType":"YulBlock","src":"3301:291:22","statements":[{"nodeType":"YulAssignment","src":"3370:38:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:22"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:22"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:22"},"nodeType":"YulFunctionCall","src":"3383:25:22"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:22"}]},{"nodeType":"YulAssignment","src":"3490:41:22","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:22"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:22"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:22"},"nodeType":"YulFunctionCall","src":"3510:20:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:22"},"nodeType":"YulFunctionCall","src":"3499:32:22"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:22"}]},{"nodeType":"YulAssignment","src":"3548:30:22","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:22"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:22"},"nodeType":"YulFunctionCall","src":"3557:21:22"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3505,"isOffset":false,"isSlot":false,"src":"3396:11:22","valueSize":1},{"declaration":3511,"isOffset":false,"isSlot":false,"src":"3524:5:22","valueSize":1},{"declaration":3511,"isOffset":false,"isSlot":false,"src":"3548:5:22","valueSize":1},{"declaration":3511,"isOffset":false,"isSlot":false,"src":"3561:5:22","valueSize":1},{"declaration":3514,"isOffset":false,"isSlot":false,"src":"3490:5:22","valueSize":1},{"declaration":3514,"isOffset":false,"isSlot":false,"src":"3503:5:22","valueSize":1},{"declaration":3534,"isOffset":false,"isSlot":false,"src":"3370:9:22","valueSize":1},{"declaration":3534,"isOffset":false,"isSlot":false,"src":"3513:9:22","valueSize":1},{"declaration":3534,"isOffset":false,"isSlot":false,"src":"3568:9:22","valueSize":1},{"declaration":3501,"isOffset":false,"isSlot":false,"src":"3390:1:22","valueSize":1},{"declaration":3503,"isOffset":false,"isSlot":false,"src":"3393:1:22","valueSize":1}],"id":3536,"nodeType":"InlineAssembly","src":"3292:300:22"},{"assignments":[3538],"declarations":[{"constant":false,"id":3538,"mutability":"mutable","name":"twos","nameLocation":"3907:4:22","nodeType":"VariableDeclaration","scope":3619,"src":"3899:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3537,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3546,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3539,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"3914:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:22","subExpression":{"id":3540,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"3930:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3544,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:22"},{"AST":{"nodeType":"YulBlock","src":"3969:362:22","statements":[{"nodeType":"YulAssignment","src":"4034:37:22","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:22"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:22"},"nodeType":"YulFunctionCall","src":"4049:22:22"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:22"}]},{"nodeType":"YulAssignment","src":"4138:25:22","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:22"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:22"},"nodeType":"YulFunctionCall","src":"4147:16:22"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:22"}]},{"nodeType":"YulAssignment","src":"4278:39:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:22","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:22"},"nodeType":"YulFunctionCall","src":"4294:12:22"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:22"},"nodeType":"YulFunctionCall","src":"4290:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:22"},"nodeType":"YulFunctionCall","src":"4286:31:22"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3505,"isOffset":false,"isSlot":false,"src":"4034:11:22","valueSize":1},{"declaration":3505,"isOffset":false,"isSlot":false,"src":"4053:11:22","valueSize":1},{"declaration":3511,"isOffset":false,"isSlot":false,"src":"4138:5:22","valueSize":1},{"declaration":3511,"isOffset":false,"isSlot":false,"src":"4151:5:22","valueSize":1},{"declaration":3538,"isOffset":false,"isSlot":false,"src":"4066:4:22","valueSize":1},{"declaration":3538,"isOffset":false,"isSlot":false,"src":"4158:4:22","valueSize":1},{"declaration":3538,"isOffset":false,"isSlot":false,"src":"4278:4:22","valueSize":1},{"declaration":3538,"isOffset":false,"isSlot":false,"src":"4301:4:22","valueSize":1},{"declaration":3538,"isOffset":false,"isSlot":false,"src":"4308:4:22","valueSize":1}],"id":3547,"nodeType":"InlineAssembly","src":"3960:371:22"},{"expression":{"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3548,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"4397:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3549,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"4406:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3550,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"4414:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3553,"nodeType":"ExpressionStatement","src":"4397:21:22"},{"assignments":[3555],"declarations":[{"constant":false,"id":3555,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:22","nodeType":"VariableDeclaration","scope":3619,"src":"4736:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3562,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3557,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"4759:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:22"},{"expression":{"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3563,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"4992:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3565,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"5007:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3566,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"5021:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3570,"nodeType":"ExpressionStatement","src":"4992:36:22"},{"expression":{"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3571,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"5061:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3573,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"5076:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3574,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"5090:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3578,"nodeType":"ExpressionStatement","src":"5061:36:22"},{"expression":{"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3579,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"5131:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3581,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"5146:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3582,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"5160:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3586,"nodeType":"ExpressionStatement","src":"5131:36:22"},{"expression":{"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3587,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"5201:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3589,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"5216:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3590,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"5230:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3594,"nodeType":"ExpressionStatement","src":"5201:36:22"},{"expression":{"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3595,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"5271:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3597,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"5286:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3598,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"5300:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3602,"nodeType":"ExpressionStatement","src":"5271:36:22"},{"expression":{"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3603,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"5342:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3605,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"5357:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3606,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"5371:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3610,"nodeType":"ExpressionStatement","src":"5342:36:22"},{"expression":{"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3611,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"5812:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3612,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"5821:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3613,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"5829:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3616,"nodeType":"ExpressionStatement","src":"5812:24:22"},{"expression":{"id":3617,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"5857:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3509,"id":3618,"nodeType":"Return","src":"5850:13:22"}]}]},"documentation":{"id":3499,"nodeType":"StructuredDocumentation","src":"1357:305:22","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3621,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:22","nodeType":"FunctionDefinition","parameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3501,"mutability":"mutable","name":"x","nameLocation":"1691:1:22","nodeType":"VariableDeclaration","scope":3621,"src":"1683:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3500,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3503,"mutability":"mutable","name":"y","nameLocation":"1702:1:22","nodeType":"VariableDeclaration","scope":3621,"src":"1694:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3502,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3505,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:22","nodeType":"VariableDeclaration","scope":3621,"src":"1705:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3504,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:22"},"returnParameters":{"id":3509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3508,"mutability":"mutable","name":"result","nameLocation":"1757:6:22","nodeType":"VariableDeclaration","scope":3621,"src":"1749:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3507,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:22"},"scope":4273,"src":"1667:4213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3664,"nodeType":"Block","src":"6122:189:22","statements":[{"assignments":[3637],"declarations":[{"constant":false,"id":3637,"mutability":"mutable","name":"result","nameLocation":"6140:6:22","nodeType":"VariableDeclaration","scope":3664,"src":"6132:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3643,"initialValue":{"arguments":[{"id":3639,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"6156:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3640,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"6159:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3641,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"6162:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3638,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3621,3665],"referencedDeclaration":3621,"src":"6149:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:22"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3644,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"6188:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3645,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"6200:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3414_$","typeString":"type(enum Math.Rounding)"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3412,"src":"6200:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"}},"src":"6188:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3649,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"6222:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3650,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"6225:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3651,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"6228:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3648,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3661,"nodeType":"IfStatement","src":"6184:98:22","trueBody":{"id":3660,"nodeType":"Block","src":"6246:36:22","statements":[{"expression":{"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"6260:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3659,"nodeType":"ExpressionStatement","src":"6260:11:22"}]}},{"expression":{"id":3662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"6298:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3635,"id":3663,"nodeType":"Return","src":"6291:13:22"}]},"documentation":{"id":3622,"nodeType":"StructuredDocumentation","src":"5886:121:22","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3665,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:22","nodeType":"FunctionDefinition","parameters":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"x","nameLocation":"6036:1:22","nodeType":"VariableDeclaration","scope":3665,"src":"6028:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3623,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3626,"mutability":"mutable","name":"y","nameLocation":"6047:1:22","nodeType":"VariableDeclaration","scope":3665,"src":"6039:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3625,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3628,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:22","nodeType":"VariableDeclaration","scope":3665,"src":"6050:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3627,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3631,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:22","nodeType":"VariableDeclaration","scope":3665,"src":"6071:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"},"typeName":{"id":3630,"nodeType":"UserDefinedTypeName","pathNode":{"id":3629,"name":"Rounding","nameLocations":["6071:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3414,"src":"6071:8:22"},"referencedDeclaration":3414,"src":"6071:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:22"},"returnParameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3665,"src":"6113:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3633,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:22"},"scope":4273,"src":"6012:299:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3776,"nodeType":"Block","src":"6587:1585:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3673,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"6601:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3679,"nodeType":"IfStatement","src":"6597:45:22","trueBody":{"id":3678,"nodeType":"Block","src":"6609:33:22","statements":[{"expression":{"hexValue":"30","id":3676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3672,"id":3677,"nodeType":"Return","src":"6623:8:22"}]}},{"assignments":[3681],"declarations":[{"constant":false,"id":3681,"mutability":"mutable","name":"result","nameLocation":"7329:6:22","nodeType":"VariableDeclaration","scope":3776,"src":"7321:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3680,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3690,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3684,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"7349:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3683,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3945,3981],"referencedDeclaration":3945,"src":"7344:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3688,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:22"},{"id":3775,"nodeType":"UncheckedBlock","src":"7758:408:22","statements":[{"expression":{"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3691,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"7782:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3692,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"7792:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3693,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"7801:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3694,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"7805:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3701,"nodeType":"ExpressionStatement","src":"7782:35:22"},{"expression":{"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"7831:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3703,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"7841:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3704,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"7850:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3705,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"7854:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3708,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3712,"nodeType":"ExpressionStatement","src":"7831:35:22"},{"expression":{"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"7880:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3714,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"7890:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3715,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"7899:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3716,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"7903:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3723,"nodeType":"ExpressionStatement","src":"7880:35:22"},{"expression":{"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3724,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"7929:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3725,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"7939:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3726,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"7948:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3727,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"7952:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3730,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3734,"nodeType":"ExpressionStatement","src":"7929:35:22"},{"expression":{"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3735,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"7978:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3736,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"7988:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3737,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"7997:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3738,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"8001:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3745,"nodeType":"ExpressionStatement","src":"7978:35:22"},{"expression":{"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3746,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"8027:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3747,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"8037:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3748,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"8046:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3749,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"8050:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3752,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3756,"nodeType":"ExpressionStatement","src":"8027:35:22"},{"expression":{"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3757,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"8076:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3758,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"8086:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3759,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"8095:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"8099:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3763,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3767,"nodeType":"ExpressionStatement","src":"8076:35:22"},{"expression":{"arguments":[{"id":3769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"8136:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3770,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"8144:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3771,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"8148:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3768,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"8132:3:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3672,"id":3774,"nodeType":"Return","src":"8125:30:22"}]}]},"documentation":{"id":3666,"nodeType":"StructuredDocumentation","src":"6317:208:22","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3777,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:22","nodeType":"FunctionDefinition","parameters":{"id":3669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3668,"mutability":"mutable","name":"a","nameLocation":"6552:1:22","nodeType":"VariableDeclaration","scope":3777,"src":"6544:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3667,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:22"},"returnParameters":{"id":3672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3777,"src":"6578:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:22"},"scope":4273,"src":"6530:1642:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3812,"nodeType":"Block","src":"8348:161:22","statements":[{"id":3811,"nodeType":"UncheckedBlock","src":"8358:145:22","statements":[{"assignments":[3789],"declarations":[{"constant":false,"id":3789,"mutability":"mutable","name":"result","nameLocation":"8390:6:22","nodeType":"VariableDeclaration","scope":3811,"src":"8382:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3788,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3793,"initialValue":{"arguments":[{"id":3791,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"8404:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3790,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3777,3813],"referencedDeclaration":3777,"src":"8399:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3794,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"8427:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3795,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"8437:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3796,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"8449:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3414_$","typeString":"type(enum Math.Rounding)"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3412,"src":"8449:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"}},"src":"8437:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3799,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"8464:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3800,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"8473:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3802,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"8482:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:22","trueExpression":{"hexValue":"31","id":3805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3787,"id":3810,"nodeType":"Return","src":"8420:72:22"}]}]},"documentation":{"id":3778,"nodeType":"StructuredDocumentation","src":"8178:89:22","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3813,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:22","nodeType":"FunctionDefinition","parameters":{"id":3784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3780,"mutability":"mutable","name":"a","nameLocation":"8294:1:22","nodeType":"VariableDeclaration","scope":3813,"src":"8286:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3779,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3783,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:22","nodeType":"VariableDeclaration","scope":3813,"src":"8297:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"},"typeName":{"id":3782,"nodeType":"UserDefinedTypeName","pathNode":{"id":3781,"name":"Rounding","nameLocations":["8297:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3414,"src":"8297:8:22"},"referencedDeclaration":3414,"src":"8297:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:22"},"returnParameters":{"id":3787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3813,"src":"8339:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3785,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:22"},"scope":4273,"src":"8272:237:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3944,"nodeType":"Block","src":"8694:922:22","statements":[{"assignments":[3822],"declarations":[{"constant":false,"id":3822,"mutability":"mutable","name":"result","nameLocation":"8712:6:22","nodeType":"VariableDeclaration","scope":3944,"src":"8704:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3821,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3824,"initialValue":{"hexValue":"30","id":3823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:22"},{"id":3941,"nodeType":"UncheckedBlock","src":"8732:855:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"8760:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3839,"nodeType":"IfStatement","src":"8756:99:22","trueBody":{"id":3838,"nodeType":"Block","src":"8778:77:22","statements":[{"expression":{"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"8796:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3833,"nodeType":"ExpressionStatement","src":"8796:13:22"},{"expression":{"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3834,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"8827:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3837,"nodeType":"ExpressionStatement","src":"8827:13:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"8872:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3854,"nodeType":"IfStatement","src":"8868:96:22","trueBody":{"id":3853,"nodeType":"Block","src":"8889:75:22","statements":[{"expression":{"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"8907:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3848,"nodeType":"ExpressionStatement","src":"8907:12:22"},{"expression":{"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3849,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"8937:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3852,"nodeType":"ExpressionStatement","src":"8937:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"8981:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3869,"nodeType":"IfStatement","src":"8977:96:22","trueBody":{"id":3868,"nodeType":"Block","src":"8998:75:22","statements":[{"expression":{"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"9016:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3863,"nodeType":"ExpressionStatement","src":"9016:12:22"},{"expression":{"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3864,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"9046:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3867,"nodeType":"ExpressionStatement","src":"9046:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"9090:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3884,"nodeType":"IfStatement","src":"9086:96:22","trueBody":{"id":3883,"nodeType":"Block","src":"9107:75:22","statements":[{"expression":{"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"9125:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3878,"nodeType":"ExpressionStatement","src":"9125:12:22"},{"expression":{"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3879,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"9155:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3882,"nodeType":"ExpressionStatement","src":"9155:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"9199:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3899,"nodeType":"IfStatement","src":"9195:93:22","trueBody":{"id":3898,"nodeType":"Block","src":"9215:73:22","statements":[{"expression":{"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"9233:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3893,"nodeType":"ExpressionStatement","src":"9233:11:22"},{"expression":{"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3894,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"9262:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3897,"nodeType":"ExpressionStatement","src":"9262:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"9305:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3914,"nodeType":"IfStatement","src":"9301:93:22","trueBody":{"id":3913,"nodeType":"Block","src":"9321:73:22","statements":[{"expression":{"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"9339:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3908,"nodeType":"ExpressionStatement","src":"9339:11:22"},{"expression":{"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3909,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"9368:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3912,"nodeType":"ExpressionStatement","src":"9368:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"9411:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3929,"nodeType":"IfStatement","src":"9407:93:22","trueBody":{"id":3928,"nodeType":"Block","src":"9427:73:22","statements":[{"expression":{"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"9445:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3923,"nodeType":"ExpressionStatement","src":"9445:11:22"},{"expression":{"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3924,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"9474:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3927,"nodeType":"ExpressionStatement","src":"9474:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3816,"src":"9517:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3940,"nodeType":"IfStatement","src":"9513:64:22","trueBody":{"id":3939,"nodeType":"Block","src":"9533:44:22","statements":[{"expression":{"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3935,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"9551:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3938,"nodeType":"ExpressionStatement","src":"9551:11:22"}]}}]},{"expression":{"id":3942,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"9603:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3820,"id":3943,"nodeType":"Return","src":"9596:13:22"}]},"documentation":{"id":3814,"nodeType":"StructuredDocumentation","src":"8515:113:22","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3945,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:22","nodeType":"FunctionDefinition","parameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3816,"mutability":"mutable","name":"value","nameLocation":"8655:5:22","nodeType":"VariableDeclaration","scope":3945,"src":"8647:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:22"},"returnParameters":{"id":3820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3945,"src":"8685:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3818,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:22"},"scope":4273,"src":"8633:983:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3980,"nodeType":"Block","src":"9849:165:22","statements":[{"id":3979,"nodeType":"UncheckedBlock","src":"9859:149:22","statements":[{"assignments":[3957],"declarations":[{"constant":false,"id":3957,"mutability":"mutable","name":"result","nameLocation":"9891:6:22","nodeType":"VariableDeclaration","scope":3979,"src":"9883:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3956,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3961,"initialValue":{"arguments":[{"id":3959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"9905:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3958,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3945,3981],"referencedDeclaration":3945,"src":"9900:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3962,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"9932:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3963,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"9942:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3964,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"9954:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3414_$","typeString":"type(enum Math.Rounding)"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3412,"src":"9954:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"}},"src":"9942:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3968,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"9974:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"9983:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:22","trueExpression":{"hexValue":"31","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3955,"id":3978,"nodeType":"Return","src":"9925:72:22"}]}]},"documentation":{"id":3946,"nodeType":"StructuredDocumentation","src":"9622:142:22","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3981,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:22","nodeType":"FunctionDefinition","parameters":{"id":3952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3948,"mutability":"mutable","name":"value","nameLocation":"9791:5:22","nodeType":"VariableDeclaration","scope":3981,"src":"9783:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3947,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3951,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:22","nodeType":"VariableDeclaration","scope":3981,"src":"9798:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"},"typeName":{"id":3950,"nodeType":"UserDefinedTypeName","pathNode":{"id":3949,"name":"Rounding","nameLocations":["9798:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3414,"src":"9798:8:22"},"referencedDeclaration":3414,"src":"9798:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:22"},"returnParameters":{"id":3955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3981,"src":"9840:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3953,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:22"},"scope":4273,"src":"9769:245:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4109,"nodeType":"Block","src":"10201:854:22","statements":[{"assignments":[3990],"declarations":[{"constant":false,"id":3990,"mutability":"mutable","name":"result","nameLocation":"10219:6:22","nodeType":"VariableDeclaration","scope":4109,"src":"10211:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3989,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3992,"initialValue":{"hexValue":"30","id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:22"},{"id":4106,"nodeType":"UncheckedBlock","src":"10239:787:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"10267:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4009,"nodeType":"IfStatement","src":"10263:103:22","trueBody":{"id":4008,"nodeType":"Block","src":"10286:80:22","statements":[{"expression":{"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"10304:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4003,"nodeType":"ExpressionStatement","src":"10304:17:22"},{"expression":{"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4004,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"10339:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4007,"nodeType":"ExpressionStatement","src":"10339:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"10383:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4026,"nodeType":"IfStatement","src":"10379:103:22","trueBody":{"id":4025,"nodeType":"Block","src":"10402:80:22","statements":[{"expression":{"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"10420:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4020,"nodeType":"ExpressionStatement","src":"10420:17:22"},{"expression":{"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4021,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"10455:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4024,"nodeType":"ExpressionStatement","src":"10455:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"10499:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4043,"nodeType":"IfStatement","src":"10495:103:22","trueBody":{"id":4042,"nodeType":"Block","src":"10518:80:22","statements":[{"expression":{"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"10536:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4037,"nodeType":"ExpressionStatement","src":"10536:17:22"},{"expression":{"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4038,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"10571:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4041,"nodeType":"ExpressionStatement","src":"10571:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"10615:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4060,"nodeType":"IfStatement","src":"10611:100:22","trueBody":{"id":4059,"nodeType":"Block","src":"10633:78:22","statements":[{"expression":{"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"10651:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4054,"nodeType":"ExpressionStatement","src":"10651:16:22"},{"expression":{"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4055,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"10685:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4058,"nodeType":"ExpressionStatement","src":"10685:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"10728:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4077,"nodeType":"IfStatement","src":"10724:100:22","trueBody":{"id":4076,"nodeType":"Block","src":"10746:78:22","statements":[{"expression":{"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"10764:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4071,"nodeType":"ExpressionStatement","src":"10764:16:22"},{"expression":{"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4072,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"10798:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4075,"nodeType":"ExpressionStatement","src":"10798:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"10841:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4094,"nodeType":"IfStatement","src":"10837:100:22","trueBody":{"id":4093,"nodeType":"Block","src":"10859:78:22","statements":[{"expression":{"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"10877:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4088,"nodeType":"ExpressionStatement","src":"10877:16:22"},{"expression":{"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4089,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"10911:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4092,"nodeType":"ExpressionStatement","src":"10911:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3984,"src":"10954:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4105,"nodeType":"IfStatement","src":"10950:66:22","trueBody":{"id":4104,"nodeType":"Block","src":"10972:44:22","statements":[{"expression":{"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4100,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"10990:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4103,"nodeType":"ExpressionStatement","src":"10990:11:22"}]}}]},{"expression":{"id":4107,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"11042:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3988,"id":4108,"nodeType":"Return","src":"11035:13:22"}]},"documentation":{"id":3982,"nodeType":"StructuredDocumentation","src":"10020:114:22","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":4110,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:22","nodeType":"FunctionDefinition","parameters":{"id":3985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3984,"mutability":"mutable","name":"value","nameLocation":"10162:5:22","nodeType":"VariableDeclaration","scope":4110,"src":"10154:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3983,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:22"},"returnParameters":{"id":3988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4110,"src":"10192:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3986,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:22"},"scope":4273,"src":"10139:916:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4145,"nodeType":"Block","src":"11290:167:22","statements":[{"id":4144,"nodeType":"UncheckedBlock","src":"11300:151:22","statements":[{"assignments":[4122],"declarations":[{"constant":false,"id":4122,"mutability":"mutable","name":"result","nameLocation":"11332:6:22","nodeType":"VariableDeclaration","scope":4144,"src":"11324:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4121,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4126,"initialValue":{"arguments":[{"id":4124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"11347:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4123,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4110,4146],"referencedDeclaration":4110,"src":"11341:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"11374:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4128,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"11384:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4129,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"11396:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3414_$","typeString":"type(enum Math.Rounding)"}},"id":4130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3412,"src":"11396:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"}},"src":"11384:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4133,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"11417:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"11426:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:22","trueExpression":{"hexValue":"31","id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4141,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4120,"id":4143,"nodeType":"Return","src":"11367:73:22"}]}]},"documentation":{"id":4111,"nodeType":"StructuredDocumentation","src":"11061:143:22","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4146,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:22","nodeType":"FunctionDefinition","parameters":{"id":4117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4113,"mutability":"mutable","name":"value","nameLocation":"11232:5:22","nodeType":"VariableDeclaration","scope":4146,"src":"11224:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4112,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4116,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:22","nodeType":"VariableDeclaration","scope":4146,"src":"11239:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"},"typeName":{"id":4115,"nodeType":"UserDefinedTypeName","pathNode":{"id":4114,"name":"Rounding","nameLocations":["11239:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3414,"src":"11239:8:22"},"referencedDeclaration":3414,"src":"11239:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:22"},"returnParameters":{"id":4120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4146,"src":"11281:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4118,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:22"},"scope":4273,"src":"11209:248:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4232,"nodeType":"Block","src":"11771:600:22","statements":[{"assignments":[4155],"declarations":[{"constant":false,"id":4155,"mutability":"mutable","name":"result","nameLocation":"11789:6:22","nodeType":"VariableDeclaration","scope":4232,"src":"11781:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4154,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4157,"initialValue":{"hexValue":"30","id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:22"},{"id":4229,"nodeType":"UncheckedBlock","src":"11809:533:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"11837:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4172,"nodeType":"IfStatement","src":"11833:98:22","trueBody":{"id":4171,"nodeType":"Block","src":"11855:76:22","statements":[{"expression":{"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"11873:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4166,"nodeType":"ExpressionStatement","src":"11873:13:22"},{"expression":{"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4167,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"11904:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4170,"nodeType":"ExpressionStatement","src":"11904:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"11948:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4187,"nodeType":"IfStatement","src":"11944:95:22","trueBody":{"id":4186,"nodeType":"Block","src":"11965:74:22","statements":[{"expression":{"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"11983:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4181,"nodeType":"ExpressionStatement","src":"11983:12:22"},{"expression":{"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4182,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"12013:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4185,"nodeType":"ExpressionStatement","src":"12013:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"12056:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4202,"nodeType":"IfStatement","src":"12052:95:22","trueBody":{"id":4201,"nodeType":"Block","src":"12073:74:22","statements":[{"expression":{"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"12091:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4196,"nodeType":"ExpressionStatement","src":"12091:12:22"},{"expression":{"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4197,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"12121:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4200,"nodeType":"ExpressionStatement","src":"12121:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"12164:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4217,"nodeType":"IfStatement","src":"12160:95:22","trueBody":{"id":4216,"nodeType":"Block","src":"12181:74:22","statements":[{"expression":{"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"12199:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4211,"nodeType":"ExpressionStatement","src":"12199:12:22"},{"expression":{"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4212,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"12229:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4215,"nodeType":"ExpressionStatement","src":"12229:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"12272:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4228,"nodeType":"IfStatement","src":"12268:64:22","trueBody":{"id":4227,"nodeType":"Block","src":"12288:44:22","statements":[{"expression":{"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4223,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"12306:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4226,"nodeType":"ExpressionStatement","src":"12306:11:22"}]}}]},{"expression":{"id":4230,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"12358:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4153,"id":4231,"nodeType":"Return","src":"12351:13:22"}]},"documentation":{"id":4147,"nodeType":"StructuredDocumentation","src":"11463:240:22","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4233,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:22","nodeType":"FunctionDefinition","parameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"value","nameLocation":"11732:5:22","nodeType":"VariableDeclaration","scope":4233,"src":"11724:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4148,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:22"},"returnParameters":{"id":4153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4233,"src":"11762:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4151,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:22"},"scope":4273,"src":"11708:663:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4271,"nodeType":"Block","src":"12608:174:22","statements":[{"id":4270,"nodeType":"UncheckedBlock","src":"12618:158:22","statements":[{"assignments":[4245],"declarations":[{"constant":false,"id":4245,"mutability":"mutable","name":"result","nameLocation":"12650:6:22","nodeType":"VariableDeclaration","scope":4270,"src":"12642:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4244,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4249,"initialValue":{"arguments":[{"id":4247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"12666:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4246,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4233,4272],"referencedDeclaration":4233,"src":"12659:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4250,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"12693:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4251,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"12703:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4252,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3414,"src":"12715:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3414_$","typeString":"type(enum Math.Rounding)"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:22","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3412,"src":"12715:11:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"}},"src":"12703:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4256,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"12736:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"12751:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:22","trueExpression":{"hexValue":"31","id":4264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4243,"id":4269,"nodeType":"Return","src":"12686:79:22"}]}]},"documentation":{"id":4234,"nodeType":"StructuredDocumentation","src":"12377:144:22","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4272,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:22","nodeType":"FunctionDefinition","parameters":{"id":4240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4236,"mutability":"mutable","name":"value","nameLocation":"12550:5:22","nodeType":"VariableDeclaration","scope":4272,"src":"12542:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4235,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4239,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:22","nodeType":"VariableDeclaration","scope":4272,"src":"12557:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"},"typeName":{"id":4238,"nodeType":"UserDefinedTypeName","pathNode":{"id":4237,"name":"Rounding","nameLocations":["12557:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3414,"src":"12557:8:22"},"referencedDeclaration":3414,"src":"12557:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3414","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:22"},"returnParameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4272,"src":"12599:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4241,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:22"},"scope":4273,"src":"12526:256:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4274,"src":"202:12582:22","usedErrors":[]}],"src":"103:12682:22"},"id":22},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5814]},"id":5815,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4275,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:23"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4276,"nodeType":"StructuredDocumentation","src":"217:709:23","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":5814,"linearizedBaseContracts":[5814],"name":"SafeCast","nameLocation":"935:8:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":4300,"nodeType":"Block","src":"1339:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"1357:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1371:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4287,"name":"uint248","nodeType":"ElementaryTypeName","src":"1371:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4286,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1366:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1380:3:23","memberName":"max","nodeType":"MemberAccess","src":"1366:17:23","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1357:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":4292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1385:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":4284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1349:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4294,"nodeType":"ExpressionStatement","src":"1349:78:23"},{"expression":{"arguments":[{"id":4297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"1452:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1444:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4295,"name":"uint248","nodeType":"ElementaryTypeName","src":"1444:7:23","typeDescriptions":{}}},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1444:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4283,"id":4299,"nodeType":"Return","src":"1437:21:23"}]},"documentation":{"id":4277,"nodeType":"StructuredDocumentation","src":"950:318:23","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":4301,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1282:9:23","nodeType":"FunctionDefinition","parameters":{"id":4280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4279,"mutability":"mutable","name":"value","nameLocation":"1300:5:23","nodeType":"VariableDeclaration","scope":4301,"src":"1292:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1291:15:23"},"returnParameters":{"id":4283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4301,"src":"1330:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4281,"name":"uint248","nodeType":"ElementaryTypeName","src":"1330:7:23","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1329:9:23"},"scope":5814,"src":"1273:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4325,"nodeType":"Block","src":"1860:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"1878:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1892:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4312,"name":"uint240","nodeType":"ElementaryTypeName","src":"1892:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4311,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1887:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1887:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1901:3:23","memberName":"max","nodeType":"MemberAccess","src":"1887:17:23","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1878:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":4309,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1870:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1870:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4319,"nodeType":"ExpressionStatement","src":"1870:78:23"},{"expression":{"arguments":[{"id":4322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"1973:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1965:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4320,"name":"uint240","nodeType":"ElementaryTypeName","src":"1965:7:23","typeDescriptions":{}}},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1965:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4308,"id":4324,"nodeType":"Return","src":"1958:21:23"}]},"documentation":{"id":4302,"nodeType":"StructuredDocumentation","src":"1471:318:23","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":4326,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1803:9:23","nodeType":"FunctionDefinition","parameters":{"id":4305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"mutability":"mutable","name":"value","nameLocation":"1821:5:23","nodeType":"VariableDeclaration","scope":4326,"src":"1813:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:15:23"},"returnParameters":{"id":4308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4326,"src":"1851:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4306,"name":"uint240","nodeType":"ElementaryTypeName","src":"1851:7:23","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1850:9:23"},"scope":5814,"src":"1794:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4350,"nodeType":"Block","src":"2381:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"2399:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2413:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4337,"name":"uint232","nodeType":"ElementaryTypeName","src":"2413:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4336,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2408:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2408:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2422:3:23","memberName":"max","nodeType":"MemberAccess","src":"2408:17:23","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2399:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2427:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":4334,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2391:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2391:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4344,"nodeType":"ExpressionStatement","src":"2391:78:23"},{"expression":{"arguments":[{"id":4347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"2494:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2486:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4345,"name":"uint232","nodeType":"ElementaryTypeName","src":"2486:7:23","typeDescriptions":{}}},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2486:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4333,"id":4349,"nodeType":"Return","src":"2479:21:23"}]},"documentation":{"id":4327,"nodeType":"StructuredDocumentation","src":"1992:318:23","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":4351,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2324:9:23","nodeType":"FunctionDefinition","parameters":{"id":4330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4329,"mutability":"mutable","name":"value","nameLocation":"2342:5:23","nodeType":"VariableDeclaration","scope":4351,"src":"2334:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4328,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:23"},"returnParameters":{"id":4333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4351,"src":"2372:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4331,"name":"uint232","nodeType":"ElementaryTypeName","src":"2372:7:23","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2371:9:23"},"scope":5814,"src":"2315:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4375,"nodeType":"Block","src":"2902:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"2920:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2934:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4362,"name":"uint224","nodeType":"ElementaryTypeName","src":"2934:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4361,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2929:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2929:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2943:3:23","memberName":"max","nodeType":"MemberAccess","src":"2929:17:23","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2920:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2948:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":4359,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2912:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4369,"nodeType":"ExpressionStatement","src":"2912:78:23"},{"expression":{"arguments":[{"id":4372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"3015:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3007:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4370,"name":"uint224","nodeType":"ElementaryTypeName","src":"3007:7:23","typeDescriptions":{}}},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3007:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4358,"id":4374,"nodeType":"Return","src":"3000:21:23"}]},"documentation":{"id":4352,"nodeType":"StructuredDocumentation","src":"2513:318:23","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":4376,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2845:9:23","nodeType":"FunctionDefinition","parameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4354,"mutability":"mutable","name":"value","nameLocation":"2863:5:23","nodeType":"VariableDeclaration","scope":4376,"src":"2855:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4353,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:15:23"},"returnParameters":{"id":4358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4357,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4376,"src":"2893:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4356,"name":"uint224","nodeType":"ElementaryTypeName","src":"2893:7:23","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2892:9:23"},"scope":5814,"src":"2836:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4400,"nodeType":"Block","src":"3423:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"3441:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3455:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4387,"name":"uint216","nodeType":"ElementaryTypeName","src":"3455:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4386,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3450:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3450:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3464:3:23","memberName":"max","nodeType":"MemberAccess","src":"3450:17:23","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3441:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":4392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3469:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":4384,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3433:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3433:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4394,"nodeType":"ExpressionStatement","src":"3433:78:23"},{"expression":{"arguments":[{"id":4397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"3536:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3528:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4395,"name":"uint216","nodeType":"ElementaryTypeName","src":"3528:7:23","typeDescriptions":{}}},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3528:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4383,"id":4399,"nodeType":"Return","src":"3521:21:23"}]},"documentation":{"id":4377,"nodeType":"StructuredDocumentation","src":"3034:318:23","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":4401,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3366:9:23","nodeType":"FunctionDefinition","parameters":{"id":4380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4379,"mutability":"mutable","name":"value","nameLocation":"3384:5:23","nodeType":"VariableDeclaration","scope":4401,"src":"3376:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4378,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:15:23"},"returnParameters":{"id":4383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4401,"src":"3414:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4381,"name":"uint216","nodeType":"ElementaryTypeName","src":"3414:7:23","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3413:9:23"},"scope":5814,"src":"3357:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4425,"nodeType":"Block","src":"3944:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"3962:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3976:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4412,"name":"uint208","nodeType":"ElementaryTypeName","src":"3976:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4411,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3971:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3971:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3985:3:23","memberName":"max","nodeType":"MemberAccess","src":"3971:17:23","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3962:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3990:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":4409,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3954:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3954:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4419,"nodeType":"ExpressionStatement","src":"3954:78:23"},{"expression":{"arguments":[{"id":4422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"4057:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4049:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4420,"name":"uint208","nodeType":"ElementaryTypeName","src":"4049:7:23","typeDescriptions":{}}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4408,"id":4424,"nodeType":"Return","src":"4042:21:23"}]},"documentation":{"id":4402,"nodeType":"StructuredDocumentation","src":"3555:318:23","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":4426,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3887:9:23","nodeType":"FunctionDefinition","parameters":{"id":4405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4404,"mutability":"mutable","name":"value","nameLocation":"3905:5:23","nodeType":"VariableDeclaration","scope":4426,"src":"3897:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4403,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:15:23"},"returnParameters":{"id":4408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4426,"src":"3935:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4406,"name":"uint208","nodeType":"ElementaryTypeName","src":"3935:7:23","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3934:9:23"},"scope":5814,"src":"3878:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4450,"nodeType":"Block","src":"4465:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"4483:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4497:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4437,"name":"uint200","nodeType":"ElementaryTypeName","src":"4497:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4436,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4492:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4492:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4506:3:23","memberName":"max","nodeType":"MemberAccess","src":"4492:17:23","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4483:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":4442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4511:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":4434,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4475:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4475:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4444,"nodeType":"ExpressionStatement","src":"4475:78:23"},{"expression":{"arguments":[{"id":4447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"4578:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4570:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4445,"name":"uint200","nodeType":"ElementaryTypeName","src":"4570:7:23","typeDescriptions":{}}},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4433,"id":4449,"nodeType":"Return","src":"4563:21:23"}]},"documentation":{"id":4427,"nodeType":"StructuredDocumentation","src":"4076:318:23","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":4451,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4408:9:23","nodeType":"FunctionDefinition","parameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"value","nameLocation":"4426:5:23","nodeType":"VariableDeclaration","scope":4451,"src":"4418:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4428,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:15:23"},"returnParameters":{"id":4433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4451,"src":"4456:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4431,"name":"uint200","nodeType":"ElementaryTypeName","src":"4456:7:23","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4455:9:23"},"scope":5814,"src":"4399:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4475,"nodeType":"Block","src":"4986:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"5004:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5018:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4462,"name":"uint192","nodeType":"ElementaryTypeName","src":"5018:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4461,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5013:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5013:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5027:3:23","memberName":"max","nodeType":"MemberAccess","src":"5013:17:23","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5004:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5032:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":4459,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4996:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4996:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4469,"nodeType":"ExpressionStatement","src":"4996:78:23"},{"expression":{"arguments":[{"id":4472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"5099:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5091:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4470,"name":"uint192","nodeType":"ElementaryTypeName","src":"5091:7:23","typeDescriptions":{}}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4458,"id":4474,"nodeType":"Return","src":"5084:21:23"}]},"documentation":{"id":4452,"nodeType":"StructuredDocumentation","src":"4597:318:23","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":4476,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4929:9:23","nodeType":"FunctionDefinition","parameters":{"id":4455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4454,"mutability":"mutable","name":"value","nameLocation":"4947:5:23","nodeType":"VariableDeclaration","scope":4476,"src":"4939:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4453,"name":"uint256","nodeType":"ElementaryTypeName","src":"4939:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4938:15:23"},"returnParameters":{"id":4458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4476,"src":"4977:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4456,"name":"uint192","nodeType":"ElementaryTypeName","src":"4977:7:23","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4976:9:23"},"scope":5814,"src":"4920:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4500,"nodeType":"Block","src":"5507:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"5525:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5539:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4487,"name":"uint184","nodeType":"ElementaryTypeName","src":"5539:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4486,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5534:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5534:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5548:3:23","memberName":"max","nodeType":"MemberAccess","src":"5534:17:23","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5525:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":4492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5553:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":4484,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5517:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4494,"nodeType":"ExpressionStatement","src":"5517:78:23"},{"expression":{"arguments":[{"id":4497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4479,"src":"5620:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4495,"name":"uint184","nodeType":"ElementaryTypeName","src":"5612:7:23","typeDescriptions":{}}},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4483,"id":4499,"nodeType":"Return","src":"5605:21:23"}]},"documentation":{"id":4477,"nodeType":"StructuredDocumentation","src":"5118:318:23","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":4501,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5450:9:23","nodeType":"FunctionDefinition","parameters":{"id":4480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4479,"mutability":"mutable","name":"value","nameLocation":"5468:5:23","nodeType":"VariableDeclaration","scope":4501,"src":"5460:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4478,"name":"uint256","nodeType":"ElementaryTypeName","src":"5460:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5459:15:23"},"returnParameters":{"id":4483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4501,"src":"5498:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4481,"name":"uint184","nodeType":"ElementaryTypeName","src":"5498:7:23","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5497:9:23"},"scope":5814,"src":"5441:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4525,"nodeType":"Block","src":"6028:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"6046:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6060:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4512,"name":"uint176","nodeType":"ElementaryTypeName","src":"6060:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4511,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6055:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6055:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6069:3:23","memberName":"max","nodeType":"MemberAccess","src":"6055:17:23","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6046:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6074:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":4509,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6038:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4519,"nodeType":"ExpressionStatement","src":"6038:78:23"},{"expression":{"arguments":[{"id":4522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4504,"src":"6141:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4520,"name":"uint176","nodeType":"ElementaryTypeName","src":"6133:7:23","typeDescriptions":{}}},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6133:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4508,"id":4524,"nodeType":"Return","src":"6126:21:23"}]},"documentation":{"id":4502,"nodeType":"StructuredDocumentation","src":"5639:318:23","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":4526,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5971:9:23","nodeType":"FunctionDefinition","parameters":{"id":4505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4504,"mutability":"mutable","name":"value","nameLocation":"5989:5:23","nodeType":"VariableDeclaration","scope":4526,"src":"5981:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4503,"name":"uint256","nodeType":"ElementaryTypeName","src":"5981:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5980:15:23"},"returnParameters":{"id":4508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4526,"src":"6019:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4506,"name":"uint176","nodeType":"ElementaryTypeName","src":"6019:7:23","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6018:9:23"},"scope":5814,"src":"5962:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4550,"nodeType":"Block","src":"6549:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"6567:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6581:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4537,"name":"uint168","nodeType":"ElementaryTypeName","src":"6581:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4536,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6576:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6576:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6590:3:23","memberName":"max","nodeType":"MemberAccess","src":"6576:17:23","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6567:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6595:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":4534,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6559:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6559:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4544,"nodeType":"ExpressionStatement","src":"6559:78:23"},{"expression":{"arguments":[{"id":4547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"6662:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6654:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4545,"name":"uint168","nodeType":"ElementaryTypeName","src":"6654:7:23","typeDescriptions":{}}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4533,"id":4549,"nodeType":"Return","src":"6647:21:23"}]},"documentation":{"id":4527,"nodeType":"StructuredDocumentation","src":"6160:318:23","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":4551,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6492:9:23","nodeType":"FunctionDefinition","parameters":{"id":4530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4529,"mutability":"mutable","name":"value","nameLocation":"6510:5:23","nodeType":"VariableDeclaration","scope":4551,"src":"6502:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4528,"name":"uint256","nodeType":"ElementaryTypeName","src":"6502:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6501:15:23"},"returnParameters":{"id":4533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4551,"src":"6540:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4531,"name":"uint168","nodeType":"ElementaryTypeName","src":"6540:7:23","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6539:9:23"},"scope":5814,"src":"6483:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4575,"nodeType":"Block","src":"7070:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"7088:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7102:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4562,"name":"uint160","nodeType":"ElementaryTypeName","src":"7102:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4561,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7097:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7097:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7111:3:23","memberName":"max","nodeType":"MemberAccess","src":"7097:17:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7088:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":4567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7116:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":4559,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7080:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7080:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4569,"nodeType":"ExpressionStatement","src":"7080:78:23"},{"expression":{"arguments":[{"id":4572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"7183:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7175:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4570,"name":"uint160","nodeType":"ElementaryTypeName","src":"7175:7:23","typeDescriptions":{}}},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7175:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4558,"id":4574,"nodeType":"Return","src":"7168:21:23"}]},"documentation":{"id":4552,"nodeType":"StructuredDocumentation","src":"6681:318:23","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":4576,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7013:9:23","nodeType":"FunctionDefinition","parameters":{"id":4555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4554,"mutability":"mutable","name":"value","nameLocation":"7031:5:23","nodeType":"VariableDeclaration","scope":4576,"src":"7023:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4553,"name":"uint256","nodeType":"ElementaryTypeName","src":"7023:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7022:15:23"},"returnParameters":{"id":4558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4576,"src":"7061:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4556,"name":"uint160","nodeType":"ElementaryTypeName","src":"7061:7:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7060:9:23"},"scope":5814,"src":"7004:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4600,"nodeType":"Block","src":"7591:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"7609:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7623:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4587,"name":"uint152","nodeType":"ElementaryTypeName","src":"7623:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4586,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7618:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7618:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7632:3:23","memberName":"max","nodeType":"MemberAccess","src":"7618:17:23","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7609:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7637:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":4584,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7601:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7601:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4594,"nodeType":"ExpressionStatement","src":"7601:78:23"},{"expression":{"arguments":[{"id":4597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"7704:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7696:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4595,"name":"uint152","nodeType":"ElementaryTypeName","src":"7696:7:23","typeDescriptions":{}}},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7696:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4583,"id":4599,"nodeType":"Return","src":"7689:21:23"}]},"documentation":{"id":4577,"nodeType":"StructuredDocumentation","src":"7202:318:23","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":4601,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7534:9:23","nodeType":"FunctionDefinition","parameters":{"id":4580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4579,"mutability":"mutable","name":"value","nameLocation":"7552:5:23","nodeType":"VariableDeclaration","scope":4601,"src":"7544:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4578,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7543:15:23"},"returnParameters":{"id":4583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4601,"src":"7582:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4581,"name":"uint152","nodeType":"ElementaryTypeName","src":"7582:7:23","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7581:9:23"},"scope":5814,"src":"7525:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4625,"nodeType":"Block","src":"8112:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"8130:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8144:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4612,"name":"uint144","nodeType":"ElementaryTypeName","src":"8144:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4611,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8139:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8139:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8153:3:23","memberName":"max","nodeType":"MemberAccess","src":"8139:17:23","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8130:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":4617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8158:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":4609,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8122:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8122:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4619,"nodeType":"ExpressionStatement","src":"8122:78:23"},{"expression":{"arguments":[{"id":4622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4604,"src":"8225:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8217:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4620,"name":"uint144","nodeType":"ElementaryTypeName","src":"8217:7:23","typeDescriptions":{}}},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8217:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4608,"id":4624,"nodeType":"Return","src":"8210:21:23"}]},"documentation":{"id":4602,"nodeType":"StructuredDocumentation","src":"7723:318:23","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":4626,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8055:9:23","nodeType":"FunctionDefinition","parameters":{"id":4605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4604,"mutability":"mutable","name":"value","nameLocation":"8073:5:23","nodeType":"VariableDeclaration","scope":4626,"src":"8065:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4603,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:15:23"},"returnParameters":{"id":4608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4626,"src":"8103:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4606,"name":"uint144","nodeType":"ElementaryTypeName","src":"8103:7:23","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8102:9:23"},"scope":5814,"src":"8046:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4650,"nodeType":"Block","src":"8633:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"8651:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8665:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4637,"name":"uint136","nodeType":"ElementaryTypeName","src":"8665:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":4636,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8660:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8660:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8674:3:23","memberName":"max","nodeType":"MemberAccess","src":"8660:17:23","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8651:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8679:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":4634,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8643:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8643:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4644,"nodeType":"ExpressionStatement","src":"8643:78:23"},{"expression":{"arguments":[{"id":4647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"8746:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8738:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":4645,"name":"uint136","nodeType":"ElementaryTypeName","src":"8738:7:23","typeDescriptions":{}}},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":4633,"id":4649,"nodeType":"Return","src":"8731:21:23"}]},"documentation":{"id":4627,"nodeType":"StructuredDocumentation","src":"8244:318:23","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":4651,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8576:9:23","nodeType":"FunctionDefinition","parameters":{"id":4630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4629,"mutability":"mutable","name":"value","nameLocation":"8594:5:23","nodeType":"VariableDeclaration","scope":4651,"src":"8586:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4628,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8585:15:23"},"returnParameters":{"id":4633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4651,"src":"8624:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4631,"name":"uint136","nodeType":"ElementaryTypeName","src":"8624:7:23","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8623:9:23"},"scope":5814,"src":"8567:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4675,"nodeType":"Block","src":"9154:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"9172:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9186:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4662,"name":"uint128","nodeType":"ElementaryTypeName","src":"9186:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":4661,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9181:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9181:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":4665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9195:3:23","memberName":"max","nodeType":"MemberAccess","src":"9181:17:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9172:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":4667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9200:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":4659,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9164:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9164:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4669,"nodeType":"ExpressionStatement","src":"9164:78:23"},{"expression":{"arguments":[{"id":4672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"9267:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9259:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":4670,"name":"uint128","nodeType":"ElementaryTypeName","src":"9259:7:23","typeDescriptions":{}}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9259:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":4658,"id":4674,"nodeType":"Return","src":"9252:21:23"}]},"documentation":{"id":4652,"nodeType":"StructuredDocumentation","src":"8765:318:23","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":4676,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9097:9:23","nodeType":"FunctionDefinition","parameters":{"id":4655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4654,"mutability":"mutable","name":"value","nameLocation":"9115:5:23","nodeType":"VariableDeclaration","scope":4676,"src":"9107:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4653,"name":"uint256","nodeType":"ElementaryTypeName","src":"9107:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9106:15:23"},"returnParameters":{"id":4658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4676,"src":"9145:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4656,"name":"uint128","nodeType":"ElementaryTypeName","src":"9145:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9144:9:23"},"scope":5814,"src":"9088:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4700,"nodeType":"Block","src":"9675:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"9693:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4687,"name":"uint120","nodeType":"ElementaryTypeName","src":"9707:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":4686,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9702:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9702:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":4690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9716:3:23","memberName":"max","nodeType":"MemberAccess","src":"9702:17:23","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9693:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9721:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":4684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9685:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9685:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4694,"nodeType":"ExpressionStatement","src":"9685:78:23"},{"expression":{"arguments":[{"id":4697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4679,"src":"9788:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":4695,"name":"uint120","nodeType":"ElementaryTypeName","src":"9780:7:23","typeDescriptions":{}}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":4683,"id":4699,"nodeType":"Return","src":"9773:21:23"}]},"documentation":{"id":4677,"nodeType":"StructuredDocumentation","src":"9286:318:23","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":4701,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9618:9:23","nodeType":"FunctionDefinition","parameters":{"id":4680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4679,"mutability":"mutable","name":"value","nameLocation":"9636:5:23","nodeType":"VariableDeclaration","scope":4701,"src":"9628:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4678,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:15:23"},"returnParameters":{"id":4683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4701,"src":"9666:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":4681,"name":"uint120","nodeType":"ElementaryTypeName","src":"9666:7:23","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9665:9:23"},"scope":5814,"src":"9609:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4725,"nodeType":"Block","src":"10196:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10214:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10228:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4712,"name":"uint112","nodeType":"ElementaryTypeName","src":"10228:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":4711,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10223:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10237:3:23","memberName":"max","nodeType":"MemberAccess","src":"10223:17:23","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10214:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10242:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":4709,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10206:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10206:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4719,"nodeType":"ExpressionStatement","src":"10206:78:23"},{"expression":{"arguments":[{"id":4722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10309:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10301:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":4720,"name":"uint112","nodeType":"ElementaryTypeName","src":"10301:7:23","typeDescriptions":{}}},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10301:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":4708,"id":4724,"nodeType":"Return","src":"10294:21:23"}]},"documentation":{"id":4702,"nodeType":"StructuredDocumentation","src":"9807:318:23","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":4726,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10139:9:23","nodeType":"FunctionDefinition","parameters":{"id":4705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4704,"mutability":"mutable","name":"value","nameLocation":"10157:5:23","nodeType":"VariableDeclaration","scope":4726,"src":"10149:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4703,"name":"uint256","nodeType":"ElementaryTypeName","src":"10149:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10148:15:23"},"returnParameters":{"id":4708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4726,"src":"10187:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4706,"name":"uint112","nodeType":"ElementaryTypeName","src":"10187:7:23","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10186:9:23"},"scope":5814,"src":"10130:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4750,"nodeType":"Block","src":"10717:126:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"10735:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10749:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4737,"name":"uint104","nodeType":"ElementaryTypeName","src":"10749:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":4736,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10744:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10744:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":4740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10758:3:23","memberName":"max","nodeType":"MemberAccess","src":"10744:17:23","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10735:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10763:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":4734,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10727:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10727:78:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4744,"nodeType":"ExpressionStatement","src":"10727:78:23"},{"expression":{"arguments":[{"id":4747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"10830:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10822:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":4745,"name":"uint104","nodeType":"ElementaryTypeName","src":"10822:7:23","typeDescriptions":{}}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10822:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":4733,"id":4749,"nodeType":"Return","src":"10815:21:23"}]},"documentation":{"id":4727,"nodeType":"StructuredDocumentation","src":"10328:318:23","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":4751,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10660:9:23","nodeType":"FunctionDefinition","parameters":{"id":4730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4729,"mutability":"mutable","name":"value","nameLocation":"10678:5:23","nodeType":"VariableDeclaration","scope":4751,"src":"10670:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4728,"name":"uint256","nodeType":"ElementaryTypeName","src":"10670:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10669:15:23"},"returnParameters":{"id":4733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4751,"src":"10708:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":4731,"name":"uint104","nodeType":"ElementaryTypeName","src":"10708:7:23","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10707:9:23"},"scope":5814,"src":"10651:192:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4775,"nodeType":"Block","src":"11232:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"11250:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11264:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4762,"name":"uint96","nodeType":"ElementaryTypeName","src":"11264:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":4761,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11259:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11259:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11272:3:23","memberName":"max","nodeType":"MemberAccess","src":"11259:16:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11250:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":4767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11277:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":4759,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11242:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11242:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4769,"nodeType":"ExpressionStatement","src":"11242:76:23"},{"expression":{"arguments":[{"id":4772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"11342:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11335:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":4770,"name":"uint96","nodeType":"ElementaryTypeName","src":"11335:6:23","typeDescriptions":{}}},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":4758,"id":4774,"nodeType":"Return","src":"11328:20:23"}]},"documentation":{"id":4752,"nodeType":"StructuredDocumentation","src":"10849:314:23","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":4776,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11177:8:23","nodeType":"FunctionDefinition","parameters":{"id":4755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4754,"mutability":"mutable","name":"value","nameLocation":"11194:5:23","nodeType":"VariableDeclaration","scope":4776,"src":"11186:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4753,"name":"uint256","nodeType":"ElementaryTypeName","src":"11186:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11185:15:23"},"returnParameters":{"id":4758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4776,"src":"11224:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4756,"name":"uint96","nodeType":"ElementaryTypeName","src":"11224:6:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11223:8:23"},"scope":5814,"src":"11168:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4800,"nodeType":"Block","src":"11744:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"11762:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11776:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4787,"name":"uint88","nodeType":"ElementaryTypeName","src":"11776:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":4786,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11771:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11771:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":4790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11784:3:23","memberName":"max","nodeType":"MemberAccess","src":"11771:16:23","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11762:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":4792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11789:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":4784,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11754:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11754:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4794,"nodeType":"ExpressionStatement","src":"11754:76:23"},{"expression":{"arguments":[{"id":4797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"11854:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":4795,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:23","typeDescriptions":{}}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":4783,"id":4799,"nodeType":"Return","src":"11840:20:23"}]},"documentation":{"id":4777,"nodeType":"StructuredDocumentation","src":"11361:314:23","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":4801,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11689:8:23","nodeType":"FunctionDefinition","parameters":{"id":4780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4779,"mutability":"mutable","name":"value","nameLocation":"11706:5:23","nodeType":"VariableDeclaration","scope":4801,"src":"11698:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4778,"name":"uint256","nodeType":"ElementaryTypeName","src":"11698:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11697:15:23"},"returnParameters":{"id":4783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4801,"src":"11736:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":4781,"name":"uint88","nodeType":"ElementaryTypeName","src":"11736:6:23","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11735:8:23"},"scope":5814,"src":"11680:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4825,"nodeType":"Block","src":"12256:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"12274:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12288:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4812,"name":"uint80","nodeType":"ElementaryTypeName","src":"12288:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":4811,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12283:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12296:3:23","memberName":"max","nodeType":"MemberAccess","src":"12283:16:23","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12274:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":4817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12301:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":4809,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12266:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4819,"nodeType":"ExpressionStatement","src":"12266:76:23"},{"expression":{"arguments":[{"id":4822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4804,"src":"12366:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12359:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":4820,"name":"uint80","nodeType":"ElementaryTypeName","src":"12359:6:23","typeDescriptions":{}}},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12359:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":4808,"id":4824,"nodeType":"Return","src":"12352:20:23"}]},"documentation":{"id":4802,"nodeType":"StructuredDocumentation","src":"11873:314:23","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":4826,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12201:8:23","nodeType":"FunctionDefinition","parameters":{"id":4805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4804,"mutability":"mutable","name":"value","nameLocation":"12218:5:23","nodeType":"VariableDeclaration","scope":4826,"src":"12210:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4803,"name":"uint256","nodeType":"ElementaryTypeName","src":"12210:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:15:23"},"returnParameters":{"id":4808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4826,"src":"12248:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":4806,"name":"uint80","nodeType":"ElementaryTypeName","src":"12248:6:23","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12247:8:23"},"scope":5814,"src":"12192:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4850,"nodeType":"Block","src":"12768:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"12786:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12800:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4837,"name":"uint72","nodeType":"ElementaryTypeName","src":"12800:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":4836,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12795:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12795:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":4840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12808:3:23","memberName":"max","nodeType":"MemberAccess","src":"12795:16:23","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12786:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12813:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":4834,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12778:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12778:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4844,"nodeType":"ExpressionStatement","src":"12778:76:23"},{"expression":{"arguments":[{"id":4847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"12878:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12871:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":4845,"name":"uint72","nodeType":"ElementaryTypeName","src":"12871:6:23","typeDescriptions":{}}},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12871:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":4833,"id":4849,"nodeType":"Return","src":"12864:20:23"}]},"documentation":{"id":4827,"nodeType":"StructuredDocumentation","src":"12385:314:23","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":4851,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12713:8:23","nodeType":"FunctionDefinition","parameters":{"id":4830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4829,"mutability":"mutable","name":"value","nameLocation":"12730:5:23","nodeType":"VariableDeclaration","scope":4851,"src":"12722:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4828,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12721:15:23"},"returnParameters":{"id":4833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4851,"src":"12760:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":4831,"name":"uint72","nodeType":"ElementaryTypeName","src":"12760:6:23","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12759:8:23"},"scope":5814,"src":"12704:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4875,"nodeType":"Block","src":"13280:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"13298:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13312:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4862,"name":"uint64","nodeType":"ElementaryTypeName","src":"13312:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":4861,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13307:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13307:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13320:3:23","memberName":"max","nodeType":"MemberAccess","src":"13307:16:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13298:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":4867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13325:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":4859,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13290:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13290:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4869,"nodeType":"ExpressionStatement","src":"13290:76:23"},{"expression":{"arguments":[{"id":4872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"13390:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13383:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4870,"name":"uint64","nodeType":"ElementaryTypeName","src":"13383:6:23","typeDescriptions":{}}},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13383:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":4858,"id":4874,"nodeType":"Return","src":"13376:20:23"}]},"documentation":{"id":4852,"nodeType":"StructuredDocumentation","src":"12897:314:23","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":4876,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13225:8:23","nodeType":"FunctionDefinition","parameters":{"id":4855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4854,"mutability":"mutable","name":"value","nameLocation":"13242:5:23","nodeType":"VariableDeclaration","scope":4876,"src":"13234:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4853,"name":"uint256","nodeType":"ElementaryTypeName","src":"13234:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13233:15:23"},"returnParameters":{"id":4858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4876,"src":"13272:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4856,"name":"uint64","nodeType":"ElementaryTypeName","src":"13272:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13271:8:23"},"scope":5814,"src":"13216:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4900,"nodeType":"Block","src":"13792:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"13810:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13824:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4887,"name":"uint56","nodeType":"ElementaryTypeName","src":"13824:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":4886,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13819:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13819:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":4890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13832:3:23","memberName":"max","nodeType":"MemberAccess","src":"13819:16:23","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13810:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":4892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13837:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":4884,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13802:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13802:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4894,"nodeType":"ExpressionStatement","src":"13802:76:23"},{"expression":{"arguments":[{"id":4897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"13902:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13895:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":4895,"name":"uint56","nodeType":"ElementaryTypeName","src":"13895:6:23","typeDescriptions":{}}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13895:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":4883,"id":4899,"nodeType":"Return","src":"13888:20:23"}]},"documentation":{"id":4877,"nodeType":"StructuredDocumentation","src":"13409:314:23","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":4901,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13737:8:23","nodeType":"FunctionDefinition","parameters":{"id":4880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4879,"mutability":"mutable","name":"value","nameLocation":"13754:5:23","nodeType":"VariableDeclaration","scope":4901,"src":"13746:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4878,"name":"uint256","nodeType":"ElementaryTypeName","src":"13746:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13745:15:23"},"returnParameters":{"id":4883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4901,"src":"13784:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":4881,"name":"uint56","nodeType":"ElementaryTypeName","src":"13784:6:23","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13783:8:23"},"scope":5814,"src":"13728:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4925,"nodeType":"Block","src":"14304:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"14322:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14336:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4912,"name":"uint48","nodeType":"ElementaryTypeName","src":"14336:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":4911,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14331:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14331:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14344:3:23","memberName":"max","nodeType":"MemberAccess","src":"14331:16:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14322:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14349:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":4909,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14314:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14314:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4919,"nodeType":"ExpressionStatement","src":"14314:76:23"},{"expression":{"arguments":[{"id":4922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"14414:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14407:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4920,"name":"uint48","nodeType":"ElementaryTypeName","src":"14407:6:23","typeDescriptions":{}}},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14407:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":4908,"id":4924,"nodeType":"Return","src":"14400:20:23"}]},"documentation":{"id":4902,"nodeType":"StructuredDocumentation","src":"13921:314:23","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":4926,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14249:8:23","nodeType":"FunctionDefinition","parameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"value","nameLocation":"14266:5:23","nodeType":"VariableDeclaration","scope":4926,"src":"14258:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4903,"name":"uint256","nodeType":"ElementaryTypeName","src":"14258:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14257:15:23"},"returnParameters":{"id":4908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4926,"src":"14296:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4906,"name":"uint48","nodeType":"ElementaryTypeName","src":"14296:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14295:8:23"},"scope":5814,"src":"14240:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4950,"nodeType":"Block","src":"14816:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"14834:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14848:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4937,"name":"uint40","nodeType":"ElementaryTypeName","src":"14848:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4936,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14843:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14843:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14856:3:23","memberName":"max","nodeType":"MemberAccess","src":"14843:16:23","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14834:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":4942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14861:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":4934,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14826:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14826:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4944,"nodeType":"ExpressionStatement","src":"14826:76:23"},{"expression":{"arguments":[{"id":4947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"14926:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14919:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4945,"name":"uint40","nodeType":"ElementaryTypeName","src":"14919:6:23","typeDescriptions":{}}},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14919:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4933,"id":4949,"nodeType":"Return","src":"14912:20:23"}]},"documentation":{"id":4927,"nodeType":"StructuredDocumentation","src":"14433:314:23","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":4951,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14761:8:23","nodeType":"FunctionDefinition","parameters":{"id":4930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4929,"mutability":"mutable","name":"value","nameLocation":"14778:5:23","nodeType":"VariableDeclaration","scope":4951,"src":"14770:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4928,"name":"uint256","nodeType":"ElementaryTypeName","src":"14770:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14769:15:23"},"returnParameters":{"id":4933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4951,"src":"14808:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4931,"name":"uint40","nodeType":"ElementaryTypeName","src":"14808:6:23","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14807:8:23"},"scope":5814,"src":"14752:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4975,"nodeType":"Block","src":"15328:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"15346:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15360:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4962,"name":"uint32","nodeType":"ElementaryTypeName","src":"15360:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4961,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15355:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15355:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15368:3:23","memberName":"max","nodeType":"MemberAccess","src":"15355:16:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15346:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15373:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":4959,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15338:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15338:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4969,"nodeType":"ExpressionStatement","src":"15338:76:23"},{"expression":{"arguments":[{"id":4972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"15438:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15431:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4970,"name":"uint32","nodeType":"ElementaryTypeName","src":"15431:6:23","typeDescriptions":{}}},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15431:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4958,"id":4974,"nodeType":"Return","src":"15424:20:23"}]},"documentation":{"id":4952,"nodeType":"StructuredDocumentation","src":"14945:314:23","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":4976,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15273:8:23","nodeType":"FunctionDefinition","parameters":{"id":4955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4954,"mutability":"mutable","name":"value","nameLocation":"15290:5:23","nodeType":"VariableDeclaration","scope":4976,"src":"15282:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4953,"name":"uint256","nodeType":"ElementaryTypeName","src":"15282:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15281:15:23"},"returnParameters":{"id":4958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4976,"src":"15320:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4956,"name":"uint32","nodeType":"ElementaryTypeName","src":"15320:6:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15319:8:23"},"scope":5814,"src":"15264:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5000,"nodeType":"Block","src":"15840:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"15858:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":4988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15872:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4987,"name":"uint24","nodeType":"ElementaryTypeName","src":"15872:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4986,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15867:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15867:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15880:3:23","memberName":"max","nodeType":"MemberAccess","src":"15867:16:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15858:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":4992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15885:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":4984,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15850:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15850:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4994,"nodeType":"ExpressionStatement","src":"15850:76:23"},{"expression":{"arguments":[{"id":4997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"15950:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15943:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4995,"name":"uint24","nodeType":"ElementaryTypeName","src":"15943:6:23","typeDescriptions":{}}},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15943:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4983,"id":4999,"nodeType":"Return","src":"15936:20:23"}]},"documentation":{"id":4977,"nodeType":"StructuredDocumentation","src":"15457:314:23","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":5001,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15785:8:23","nodeType":"FunctionDefinition","parameters":{"id":4980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4979,"mutability":"mutable","name":"value","nameLocation":"15802:5:23","nodeType":"VariableDeclaration","scope":5001,"src":"15794:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4978,"name":"uint256","nodeType":"ElementaryTypeName","src":"15794:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15793:15:23"},"returnParameters":{"id":4983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5001,"src":"15832:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4981,"name":"uint24","nodeType":"ElementaryTypeName","src":"15832:6:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15831:8:23"},"scope":5814,"src":"15776:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5025,"nodeType":"Block","src":"16352:123:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"16370:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16384:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5012,"name":"uint16","nodeType":"ElementaryTypeName","src":"16384:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5011,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16379:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16379:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16392:3:23","memberName":"max","nodeType":"MemberAccess","src":"16379:16:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16370:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":5017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16397:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":5009,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16362:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16362:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5019,"nodeType":"ExpressionStatement","src":"16362:76:23"},{"expression":{"arguments":[{"id":5022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"16462:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16455:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5020,"name":"uint16","nodeType":"ElementaryTypeName","src":"16455:6:23","typeDescriptions":{}}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16455:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5008,"id":5024,"nodeType":"Return","src":"16448:20:23"}]},"documentation":{"id":5002,"nodeType":"StructuredDocumentation","src":"15969:314:23","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":5026,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16297:8:23","nodeType":"FunctionDefinition","parameters":{"id":5005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5004,"mutability":"mutable","name":"value","nameLocation":"16314:5:23","nodeType":"VariableDeclaration","scope":5026,"src":"16306:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5003,"name":"uint256","nodeType":"ElementaryTypeName","src":"16306:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16305:15:23"},"returnParameters":{"id":5008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5026,"src":"16344:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5006,"name":"uint16","nodeType":"ElementaryTypeName","src":"16344:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16343:8:23"},"scope":5814,"src":"16288:187:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5050,"nodeType":"Block","src":"16858:120:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"16876:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":5038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16890:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5037,"name":"uint8","nodeType":"ElementaryTypeName","src":"16890:5:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5036,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16885:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16885:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16897:3:23","memberName":"max","nodeType":"MemberAccess","src":"16885:15:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16876:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":5042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16902:39:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":5034,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16868:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16868:74:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5044,"nodeType":"ExpressionStatement","src":"16868:74:23"},{"expression":{"arguments":[{"id":5047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"16965:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16959:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5045,"name":"uint8","nodeType":"ElementaryTypeName","src":"16959:5:23","typeDescriptions":{}}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16959:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5033,"id":5049,"nodeType":"Return","src":"16952:19:23"}]},"documentation":{"id":5027,"nodeType":"StructuredDocumentation","src":"16481:310:23","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":5051,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16805:7:23","nodeType":"FunctionDefinition","parameters":{"id":5030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5029,"mutability":"mutable","name":"value","nameLocation":"16821:5:23","nodeType":"VariableDeclaration","scope":5051,"src":"16813:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5028,"name":"uint256","nodeType":"ElementaryTypeName","src":"16813:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16812:15:23"},"returnParameters":{"id":5033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5051,"src":"16851:5:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5031,"name":"uint8","nodeType":"ElementaryTypeName","src":"16851:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16850:7:23"},"scope":5814,"src":"16796:182:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5071,"nodeType":"Block","src":"17252:103:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"17270:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17279:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17270:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17282:34:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":5059,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17262:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17262:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5065,"nodeType":"ExpressionStatement","src":"17262:55:23"},{"expression":{"arguments":[{"id":5068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"17342:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17334:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5066,"name":"uint256","nodeType":"ElementaryTypeName","src":"17334:7:23","typeDescriptions":{}}},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17334:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5058,"id":5070,"nodeType":"Return","src":"17327:21:23"}]},"documentation":{"id":5052,"nodeType":"StructuredDocumentation","src":"16984:198:23","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":5072,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17196:9:23","nodeType":"FunctionDefinition","parameters":{"id":5055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5054,"mutability":"mutable","name":"value","nameLocation":"17213:5:23","nodeType":"VariableDeclaration","scope":5072,"src":"17206:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5053,"name":"int256","nodeType":"ElementaryTypeName","src":"17206:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17205:14:23"},"returnParameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5072,"src":"17243:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"17243:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17242:9:23"},"scope":5814,"src":"17187:168:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5094,"nodeType":"Block","src":"17790:124:23","statements":[{"expression":{"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5080,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"17800:10:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"17820:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17813:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5081,"name":"int248","nodeType":"ElementaryTypeName","src":"17813:6:23","typeDescriptions":{}}},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17813:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17800:26:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5086,"nodeType":"ExpressionStatement","src":"17800:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5088,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5078,"src":"17844:10:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"17858:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17844:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17865:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":5087,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17836:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17836:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5093,"nodeType":"ExpressionStatement","src":"17836:71:23"}]},"documentation":{"id":5073,"nodeType":"StructuredDocumentation","src":"17361:350:23","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":5095,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17725:8:23","nodeType":"FunctionDefinition","parameters":{"id":5076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5075,"mutability":"mutable","name":"value","nameLocation":"17741:5:23","nodeType":"VariableDeclaration","scope":5095,"src":"17734:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5074,"name":"int256","nodeType":"ElementaryTypeName","src":"17734:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17733:14:23"},"returnParameters":{"id":5079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5078,"mutability":"mutable","name":"downcasted","nameLocation":"17778:10:23","nodeType":"VariableDeclaration","scope":5095,"src":"17771:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5077,"name":"int248","nodeType":"ElementaryTypeName","src":"17771:6:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17770:19:23"},"scope":5814,"src":"17716:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5117,"nodeType":"Block","src":"18349:124:23","statements":[{"expression":{"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5103,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"18359:10:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"18379:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18372:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5104,"name":"int240","nodeType":"ElementaryTypeName","src":"18372:6:23","typeDescriptions":{}}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18372:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18359:26:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5109,"nodeType":"ExpressionStatement","src":"18359:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5111,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"18403:10:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"18417:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18403:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":5114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18424:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":5110,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18395:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5116,"nodeType":"ExpressionStatement","src":"18395:71:23"}]},"documentation":{"id":5096,"nodeType":"StructuredDocumentation","src":"17920:350:23","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":5118,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18284:8:23","nodeType":"FunctionDefinition","parameters":{"id":5099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5098,"mutability":"mutable","name":"value","nameLocation":"18300:5:23","nodeType":"VariableDeclaration","scope":5118,"src":"18293:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5097,"name":"int256","nodeType":"ElementaryTypeName","src":"18293:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18292:14:23"},"returnParameters":{"id":5102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5101,"mutability":"mutable","name":"downcasted","nameLocation":"18337:10:23","nodeType":"VariableDeclaration","scope":5118,"src":"18330:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5100,"name":"int240","nodeType":"ElementaryTypeName","src":"18330:6:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18329:19:23"},"scope":5814,"src":"18275:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5140,"nodeType":"Block","src":"18908:124:23","statements":[{"expression":{"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5126,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"18918:10:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"18938:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18931:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5127,"name":"int232","nodeType":"ElementaryTypeName","src":"18931:6:23","typeDescriptions":{}}},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18931:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18918:26:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5132,"nodeType":"ExpressionStatement","src":"18918:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5134,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"18962:10:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5121,"src":"18976:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18962:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":5137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18983:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":5133,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18954:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18954:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5139,"nodeType":"ExpressionStatement","src":"18954:71:23"}]},"documentation":{"id":5119,"nodeType":"StructuredDocumentation","src":"18479:350:23","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":5141,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18843:8:23","nodeType":"FunctionDefinition","parameters":{"id":5122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5121,"mutability":"mutable","name":"value","nameLocation":"18859:5:23","nodeType":"VariableDeclaration","scope":5141,"src":"18852:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5120,"name":"int256","nodeType":"ElementaryTypeName","src":"18852:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18851:14:23"},"returnParameters":{"id":5125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5124,"mutability":"mutable","name":"downcasted","nameLocation":"18896:10:23","nodeType":"VariableDeclaration","scope":5141,"src":"18889:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5123,"name":"int232","nodeType":"ElementaryTypeName","src":"18889:6:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18888:19:23"},"scope":5814,"src":"18834:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5163,"nodeType":"Block","src":"19467:124:23","statements":[{"expression":{"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5149,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"19477:10:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"19497:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19490:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5150,"name":"int224","nodeType":"ElementaryTypeName","src":"19490:6:23","typeDescriptions":{}}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19490:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19477:26:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5155,"nodeType":"ExpressionStatement","src":"19477:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5157,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"19521:10:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"19535:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19521:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":5160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19542:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":5156,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19513:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19513:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5162,"nodeType":"ExpressionStatement","src":"19513:71:23"}]},"documentation":{"id":5142,"nodeType":"StructuredDocumentation","src":"19038:350:23","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":5164,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19402:8:23","nodeType":"FunctionDefinition","parameters":{"id":5145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5144,"mutability":"mutable","name":"value","nameLocation":"19418:5:23","nodeType":"VariableDeclaration","scope":5164,"src":"19411:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5143,"name":"int256","nodeType":"ElementaryTypeName","src":"19411:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19410:14:23"},"returnParameters":{"id":5148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5147,"mutability":"mutable","name":"downcasted","nameLocation":"19455:10:23","nodeType":"VariableDeclaration","scope":5164,"src":"19448:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5146,"name":"int224","nodeType":"ElementaryTypeName","src":"19448:6:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19447:19:23"},"scope":5814,"src":"19393:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5186,"nodeType":"Block","src":"20026:124:23","statements":[{"expression":{"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5172,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"20036:10:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"20056:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20049:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5173,"name":"int216","nodeType":"ElementaryTypeName","src":"20049:6:23","typeDescriptions":{}}},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20049:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20036:26:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5178,"nodeType":"ExpressionStatement","src":"20036:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5180,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5170,"src":"20080:10:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"20094:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20080:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":5183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20101:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":5179,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20072:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20072:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5185,"nodeType":"ExpressionStatement","src":"20072:71:23"}]},"documentation":{"id":5165,"nodeType":"StructuredDocumentation","src":"19597:350:23","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":5187,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19961:8:23","nodeType":"FunctionDefinition","parameters":{"id":5168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5167,"mutability":"mutable","name":"value","nameLocation":"19977:5:23","nodeType":"VariableDeclaration","scope":5187,"src":"19970:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5166,"name":"int256","nodeType":"ElementaryTypeName","src":"19970:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19969:14:23"},"returnParameters":{"id":5171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5170,"mutability":"mutable","name":"downcasted","nameLocation":"20014:10:23","nodeType":"VariableDeclaration","scope":5187,"src":"20007:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5169,"name":"int216","nodeType":"ElementaryTypeName","src":"20007:6:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20006:19:23"},"scope":5814,"src":"19952:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5209,"nodeType":"Block","src":"20585:124:23","statements":[{"expression":{"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5195,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"20595:10:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"20615:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20608:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5196,"name":"int208","nodeType":"ElementaryTypeName","src":"20608:6:23","typeDescriptions":{}}},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20608:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20595:26:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5201,"nodeType":"ExpressionStatement","src":"20595:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5203,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"20639:10:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"20653:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20639:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20660:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":5202,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20631:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20631:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5208,"nodeType":"ExpressionStatement","src":"20631:71:23"}]},"documentation":{"id":5188,"nodeType":"StructuredDocumentation","src":"20156:350:23","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":5210,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20520:8:23","nodeType":"FunctionDefinition","parameters":{"id":5191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5190,"mutability":"mutable","name":"value","nameLocation":"20536:5:23","nodeType":"VariableDeclaration","scope":5210,"src":"20529:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5189,"name":"int256","nodeType":"ElementaryTypeName","src":"20529:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20528:14:23"},"returnParameters":{"id":5194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5193,"mutability":"mutable","name":"downcasted","nameLocation":"20573:10:23","nodeType":"VariableDeclaration","scope":5210,"src":"20566:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5192,"name":"int208","nodeType":"ElementaryTypeName","src":"20566:6:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20565:19:23"},"scope":5814,"src":"20511:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5232,"nodeType":"Block","src":"21144:124:23","statements":[{"expression":{"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5218,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"21154:10:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5213,"src":"21174:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21167:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5219,"name":"int200","nodeType":"ElementaryTypeName","src":"21167:6:23","typeDescriptions":{}}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21167:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21154:26:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5224,"nodeType":"ExpressionStatement","src":"21154:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5226,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5216,"src":"21198:10:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5213,"src":"21212:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21198:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21219:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":5225,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21190:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21190:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5231,"nodeType":"ExpressionStatement","src":"21190:71:23"}]},"documentation":{"id":5211,"nodeType":"StructuredDocumentation","src":"20715:350:23","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":5233,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21079:8:23","nodeType":"FunctionDefinition","parameters":{"id":5214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5213,"mutability":"mutable","name":"value","nameLocation":"21095:5:23","nodeType":"VariableDeclaration","scope":5233,"src":"21088:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5212,"name":"int256","nodeType":"ElementaryTypeName","src":"21088:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21087:14:23"},"returnParameters":{"id":5217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5216,"mutability":"mutable","name":"downcasted","nameLocation":"21132:10:23","nodeType":"VariableDeclaration","scope":5233,"src":"21125:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5215,"name":"int200","nodeType":"ElementaryTypeName","src":"21125:6:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21124:19:23"},"scope":5814,"src":"21070:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5255,"nodeType":"Block","src":"21703:124:23","statements":[{"expression":{"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5241,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"21713:10:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"21733:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21726:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5242,"name":"int192","nodeType":"ElementaryTypeName","src":"21726:6:23","typeDescriptions":{}}},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21726:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21713:26:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5247,"nodeType":"ExpressionStatement","src":"21713:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5249,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"21757:10:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"21771:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21757:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":5252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21778:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":5248,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21749:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21749:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5254,"nodeType":"ExpressionStatement","src":"21749:71:23"}]},"documentation":{"id":5234,"nodeType":"StructuredDocumentation","src":"21274:350:23","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":5256,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21638:8:23","nodeType":"FunctionDefinition","parameters":{"id":5237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5236,"mutability":"mutable","name":"value","nameLocation":"21654:5:23","nodeType":"VariableDeclaration","scope":5256,"src":"21647:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5235,"name":"int256","nodeType":"ElementaryTypeName","src":"21647:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21646:14:23"},"returnParameters":{"id":5240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5239,"mutability":"mutable","name":"downcasted","nameLocation":"21691:10:23","nodeType":"VariableDeclaration","scope":5256,"src":"21684:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5238,"name":"int192","nodeType":"ElementaryTypeName","src":"21684:6:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21683:19:23"},"scope":5814,"src":"21629:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5278,"nodeType":"Block","src":"22262:124:23","statements":[{"expression":{"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5264,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"22272:10:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"22292:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22285:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5265,"name":"int184","nodeType":"ElementaryTypeName","src":"22285:6:23","typeDescriptions":{}}},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22285:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22272:26:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5270,"nodeType":"ExpressionStatement","src":"22272:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5272,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"22316:10:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5259,"src":"22330:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22316:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":5275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22337:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":5271,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22308:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22308:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5277,"nodeType":"ExpressionStatement","src":"22308:71:23"}]},"documentation":{"id":5257,"nodeType":"StructuredDocumentation","src":"21833:350:23","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":5279,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22197:8:23","nodeType":"FunctionDefinition","parameters":{"id":5260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5259,"mutability":"mutable","name":"value","nameLocation":"22213:5:23","nodeType":"VariableDeclaration","scope":5279,"src":"22206:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5258,"name":"int256","nodeType":"ElementaryTypeName","src":"22206:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22205:14:23"},"returnParameters":{"id":5263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5262,"mutability":"mutable","name":"downcasted","nameLocation":"22250:10:23","nodeType":"VariableDeclaration","scope":5279,"src":"22243:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5261,"name":"int184","nodeType":"ElementaryTypeName","src":"22243:6:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22242:19:23"},"scope":5814,"src":"22188:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5301,"nodeType":"Block","src":"22821:124:23","statements":[{"expression":{"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5287,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"22831:10:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"22851:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22844:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5288,"name":"int176","nodeType":"ElementaryTypeName","src":"22844:6:23","typeDescriptions":{}}},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22844:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22831:26:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5293,"nodeType":"ExpressionStatement","src":"22831:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5295,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"22875:10:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5282,"src":"22889:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22875:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22896:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":5294,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22867:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22867:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5300,"nodeType":"ExpressionStatement","src":"22867:71:23"}]},"documentation":{"id":5280,"nodeType":"StructuredDocumentation","src":"22392:350:23","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":5302,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22756:8:23","nodeType":"FunctionDefinition","parameters":{"id":5283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5282,"mutability":"mutable","name":"value","nameLocation":"22772:5:23","nodeType":"VariableDeclaration","scope":5302,"src":"22765:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5281,"name":"int256","nodeType":"ElementaryTypeName","src":"22765:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22764:14:23"},"returnParameters":{"id":5286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5285,"mutability":"mutable","name":"downcasted","nameLocation":"22809:10:23","nodeType":"VariableDeclaration","scope":5302,"src":"22802:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5284,"name":"int176","nodeType":"ElementaryTypeName","src":"22802:6:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22801:19:23"},"scope":5814,"src":"22747:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5324,"nodeType":"Block","src":"23380:124:23","statements":[{"expression":{"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5310,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"23390:10:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"23410:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23403:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5311,"name":"int168","nodeType":"ElementaryTypeName","src":"23403:6:23","typeDescriptions":{}}},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23403:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23390:26:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5316,"nodeType":"ExpressionStatement","src":"23390:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5318,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5308,"src":"23434:10:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"23448:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23434:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":5321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23455:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":5317,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23426:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23426:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5323,"nodeType":"ExpressionStatement","src":"23426:71:23"}]},"documentation":{"id":5303,"nodeType":"StructuredDocumentation","src":"22951:350:23","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":5325,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23315:8:23","nodeType":"FunctionDefinition","parameters":{"id":5306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5305,"mutability":"mutable","name":"value","nameLocation":"23331:5:23","nodeType":"VariableDeclaration","scope":5325,"src":"23324:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5304,"name":"int256","nodeType":"ElementaryTypeName","src":"23324:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23323:14:23"},"returnParameters":{"id":5309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5308,"mutability":"mutable","name":"downcasted","nameLocation":"23368:10:23","nodeType":"VariableDeclaration","scope":5325,"src":"23361:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5307,"name":"int168","nodeType":"ElementaryTypeName","src":"23361:6:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23360:19:23"},"scope":5814,"src":"23306:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5347,"nodeType":"Block","src":"23939:124:23","statements":[{"expression":{"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5333,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"23949:10:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"23969:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23962:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5334,"name":"int160","nodeType":"ElementaryTypeName","src":"23962:6:23","typeDescriptions":{}}},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23962:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23949:26:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5339,"nodeType":"ExpressionStatement","src":"23949:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5341,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"23993:10:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5328,"src":"24007:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23993:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":5344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24014:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":5340,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23985:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23985:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5346,"nodeType":"ExpressionStatement","src":"23985:71:23"}]},"documentation":{"id":5326,"nodeType":"StructuredDocumentation","src":"23510:350:23","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":5348,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23874:8:23","nodeType":"FunctionDefinition","parameters":{"id":5329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5328,"mutability":"mutable","name":"value","nameLocation":"23890:5:23","nodeType":"VariableDeclaration","scope":5348,"src":"23883:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5327,"name":"int256","nodeType":"ElementaryTypeName","src":"23883:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23882:14:23"},"returnParameters":{"id":5332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5331,"mutability":"mutable","name":"downcasted","nameLocation":"23927:10:23","nodeType":"VariableDeclaration","scope":5348,"src":"23920:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5330,"name":"int160","nodeType":"ElementaryTypeName","src":"23920:6:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23919:19:23"},"scope":5814,"src":"23865:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5370,"nodeType":"Block","src":"24498:124:23","statements":[{"expression":{"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5356,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24508:10:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"24528:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24521:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5357,"name":"int152","nodeType":"ElementaryTypeName","src":"24521:6:23","typeDescriptions":{}}},"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24521:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24508:26:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5362,"nodeType":"ExpressionStatement","src":"24508:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5364,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5354,"src":"24552:10:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5351,"src":"24566:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24552:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":5367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24573:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":5363,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24544:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24544:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5369,"nodeType":"ExpressionStatement","src":"24544:71:23"}]},"documentation":{"id":5349,"nodeType":"StructuredDocumentation","src":"24069:350:23","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":5371,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24433:8:23","nodeType":"FunctionDefinition","parameters":{"id":5352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5351,"mutability":"mutable","name":"value","nameLocation":"24449:5:23","nodeType":"VariableDeclaration","scope":5371,"src":"24442:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5350,"name":"int256","nodeType":"ElementaryTypeName","src":"24442:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24441:14:23"},"returnParameters":{"id":5355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5354,"mutability":"mutable","name":"downcasted","nameLocation":"24486:10:23","nodeType":"VariableDeclaration","scope":5371,"src":"24479:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5353,"name":"int152","nodeType":"ElementaryTypeName","src":"24479:6:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24478:19:23"},"scope":5814,"src":"24424:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5393,"nodeType":"Block","src":"25057:124:23","statements":[{"expression":{"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5379,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"25067:10:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"25087:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25080:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5380,"name":"int144","nodeType":"ElementaryTypeName","src":"25080:6:23","typeDescriptions":{}}},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25080:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25067:26:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5385,"nodeType":"ExpressionStatement","src":"25067:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5387,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5377,"src":"25111:10:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"25125:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25111:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":5390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25132:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":5386,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25103:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25103:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5392,"nodeType":"ExpressionStatement","src":"25103:71:23"}]},"documentation":{"id":5372,"nodeType":"StructuredDocumentation","src":"24628:350:23","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":5394,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24992:8:23","nodeType":"FunctionDefinition","parameters":{"id":5375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5374,"mutability":"mutable","name":"value","nameLocation":"25008:5:23","nodeType":"VariableDeclaration","scope":5394,"src":"25001:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5373,"name":"int256","nodeType":"ElementaryTypeName","src":"25001:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25000:14:23"},"returnParameters":{"id":5378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5377,"mutability":"mutable","name":"downcasted","nameLocation":"25045:10:23","nodeType":"VariableDeclaration","scope":5394,"src":"25038:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5376,"name":"int144","nodeType":"ElementaryTypeName","src":"25038:6:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25037:19:23"},"scope":5814,"src":"24983:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5416,"nodeType":"Block","src":"25616:124:23","statements":[{"expression":{"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5402,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"25626:10:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"25646:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25639:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5403,"name":"int136","nodeType":"ElementaryTypeName","src":"25639:6:23","typeDescriptions":{}}},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25639:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25626:26:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5408,"nodeType":"ExpressionStatement","src":"25626:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5410,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5400,"src":"25670:10:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"25684:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25670:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":5413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25691:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":5409,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25662:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25662:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5415,"nodeType":"ExpressionStatement","src":"25662:71:23"}]},"documentation":{"id":5395,"nodeType":"StructuredDocumentation","src":"25187:350:23","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":5417,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25551:8:23","nodeType":"FunctionDefinition","parameters":{"id":5398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5397,"mutability":"mutable","name":"value","nameLocation":"25567:5:23","nodeType":"VariableDeclaration","scope":5417,"src":"25560:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5396,"name":"int256","nodeType":"ElementaryTypeName","src":"25560:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25559:14:23"},"returnParameters":{"id":5401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5400,"mutability":"mutable","name":"downcasted","nameLocation":"25604:10:23","nodeType":"VariableDeclaration","scope":5417,"src":"25597:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5399,"name":"int136","nodeType":"ElementaryTypeName","src":"25597:6:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25596:19:23"},"scope":5814,"src":"25542:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5439,"nodeType":"Block","src":"26175:124:23","statements":[{"expression":{"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5425,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"26185:10:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"26205:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26198:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5426,"name":"int128","nodeType":"ElementaryTypeName","src":"26198:6:23","typeDescriptions":{}}},"id":5429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26198:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26185:26:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5431,"nodeType":"ExpressionStatement","src":"26185:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5433,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5423,"src":"26229:10:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"26243:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26229:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":5436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26250:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":5432,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26221:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26221:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5438,"nodeType":"ExpressionStatement","src":"26221:71:23"}]},"documentation":{"id":5418,"nodeType":"StructuredDocumentation","src":"25746:350:23","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":5440,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26110:8:23","nodeType":"FunctionDefinition","parameters":{"id":5421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5420,"mutability":"mutable","name":"value","nameLocation":"26126:5:23","nodeType":"VariableDeclaration","scope":5440,"src":"26119:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5419,"name":"int256","nodeType":"ElementaryTypeName","src":"26119:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26118:14:23"},"returnParameters":{"id":5424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5423,"mutability":"mutable","name":"downcasted","nameLocation":"26163:10:23","nodeType":"VariableDeclaration","scope":5440,"src":"26156:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5422,"name":"int128","nodeType":"ElementaryTypeName","src":"26156:6:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26155:19:23"},"scope":5814,"src":"26101:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5462,"nodeType":"Block","src":"26734:124:23","statements":[{"expression":{"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5448,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"26744:10:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"26764:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26757:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5449,"name":"int120","nodeType":"ElementaryTypeName","src":"26757:6:23","typeDescriptions":{}}},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26757:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26744:26:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5454,"nodeType":"ExpressionStatement","src":"26744:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5456,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5446,"src":"26788:10:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5443,"src":"26802:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26788:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":5459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26809:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":5455,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26780:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26780:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5461,"nodeType":"ExpressionStatement","src":"26780:71:23"}]},"documentation":{"id":5441,"nodeType":"StructuredDocumentation","src":"26305:350:23","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":5463,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26669:8:23","nodeType":"FunctionDefinition","parameters":{"id":5444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5443,"mutability":"mutable","name":"value","nameLocation":"26685:5:23","nodeType":"VariableDeclaration","scope":5463,"src":"26678:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5442,"name":"int256","nodeType":"ElementaryTypeName","src":"26678:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26677:14:23"},"returnParameters":{"id":5447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5446,"mutability":"mutable","name":"downcasted","nameLocation":"26722:10:23","nodeType":"VariableDeclaration","scope":5463,"src":"26715:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5445,"name":"int120","nodeType":"ElementaryTypeName","src":"26715:6:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26714:19:23"},"scope":5814,"src":"26660:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5485,"nodeType":"Block","src":"27293:124:23","statements":[{"expression":{"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5471,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"27303:10:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"27323:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27316:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5472,"name":"int112","nodeType":"ElementaryTypeName","src":"27316:6:23","typeDescriptions":{}}},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27316:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27303:26:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5477,"nodeType":"ExpressionStatement","src":"27303:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5479,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"27347:10:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5466,"src":"27361:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27347:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27368:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":5478,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27339:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27339:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5484,"nodeType":"ExpressionStatement","src":"27339:71:23"}]},"documentation":{"id":5464,"nodeType":"StructuredDocumentation","src":"26864:350:23","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":5486,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27228:8:23","nodeType":"FunctionDefinition","parameters":{"id":5467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5466,"mutability":"mutable","name":"value","nameLocation":"27244:5:23","nodeType":"VariableDeclaration","scope":5486,"src":"27237:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5465,"name":"int256","nodeType":"ElementaryTypeName","src":"27237:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27236:14:23"},"returnParameters":{"id":5470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5469,"mutability":"mutable","name":"downcasted","nameLocation":"27281:10:23","nodeType":"VariableDeclaration","scope":5486,"src":"27274:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5468,"name":"int112","nodeType":"ElementaryTypeName","src":"27274:6:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27273:19:23"},"scope":5814,"src":"27219:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5508,"nodeType":"Block","src":"27852:124:23","statements":[{"expression":{"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5494,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"27862:10:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"27882:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27875:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5495,"name":"int104","nodeType":"ElementaryTypeName","src":"27875:6:23","typeDescriptions":{}}},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27875:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27862:26:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5500,"nodeType":"ExpressionStatement","src":"27862:26:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5502,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"27906:10:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5489,"src":"27920:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27906:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27927:41:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":5501,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27898:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27898:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5507,"nodeType":"ExpressionStatement","src":"27898:71:23"}]},"documentation":{"id":5487,"nodeType":"StructuredDocumentation","src":"27423:350:23","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":5509,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27787:8:23","nodeType":"FunctionDefinition","parameters":{"id":5490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5489,"mutability":"mutable","name":"value","nameLocation":"27803:5:23","nodeType":"VariableDeclaration","scope":5509,"src":"27796:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5488,"name":"int256","nodeType":"ElementaryTypeName","src":"27796:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27795:14:23"},"returnParameters":{"id":5493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5492,"mutability":"mutable","name":"downcasted","nameLocation":"27840:10:23","nodeType":"VariableDeclaration","scope":5509,"src":"27833:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5491,"name":"int104","nodeType":"ElementaryTypeName","src":"27833:6:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27832:19:23"},"scope":5814,"src":"27778:198:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5531,"nodeType":"Block","src":"28404:122:23","statements":[{"expression":{"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5517,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"28414:10:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"28433:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28427:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5518,"name":"int96","nodeType":"ElementaryTypeName","src":"28427:5:23","typeDescriptions":{}}},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28427:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28414:25:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":5523,"nodeType":"ExpressionStatement","src":"28414:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5525,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"28457:10:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5512,"src":"28471:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28457:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":5528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28478:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":5524,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28449:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28449:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5530,"nodeType":"ExpressionStatement","src":"28449:70:23"}]},"documentation":{"id":5510,"nodeType":"StructuredDocumentation","src":"27982:345:23","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":5532,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28341:7:23","nodeType":"FunctionDefinition","parameters":{"id":5513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5512,"mutability":"mutable","name":"value","nameLocation":"28356:5:23","nodeType":"VariableDeclaration","scope":5532,"src":"28349:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5511,"name":"int256","nodeType":"ElementaryTypeName","src":"28349:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28348:14:23"},"returnParameters":{"id":5516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5515,"mutability":"mutable","name":"downcasted","nameLocation":"28392:10:23","nodeType":"VariableDeclaration","scope":5532,"src":"28386:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5514,"name":"int96","nodeType":"ElementaryTypeName","src":"28386:5:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28385:18:23"},"scope":5814,"src":"28332:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5554,"nodeType":"Block","src":"28954:122:23","statements":[{"expression":{"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5540,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"28964:10:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5535,"src":"28983:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28977:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":5541,"name":"int88","nodeType":"ElementaryTypeName","src":"28977:5:23","typeDescriptions":{}}},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28977:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28964:25:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":5546,"nodeType":"ExpressionStatement","src":"28964:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5548,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"29007:10:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5535,"src":"29021:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29007:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29028:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":5547,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28999:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28999:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5553,"nodeType":"ExpressionStatement","src":"28999:70:23"}]},"documentation":{"id":5533,"nodeType":"StructuredDocumentation","src":"28532:345:23","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":5555,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28891:7:23","nodeType":"FunctionDefinition","parameters":{"id":5536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5535,"mutability":"mutable","name":"value","nameLocation":"28906:5:23","nodeType":"VariableDeclaration","scope":5555,"src":"28899:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5534,"name":"int256","nodeType":"ElementaryTypeName","src":"28899:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28898:14:23"},"returnParameters":{"id":5539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5538,"mutability":"mutable","name":"downcasted","nameLocation":"28942:10:23","nodeType":"VariableDeclaration","scope":5555,"src":"28936:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":5537,"name":"int88","nodeType":"ElementaryTypeName","src":"28936:5:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28935:18:23"},"scope":5814,"src":"28882:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5577,"nodeType":"Block","src":"29504:122:23","statements":[{"expression":{"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5563,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"29514:10:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"29533:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29527:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":5564,"name":"int80","nodeType":"ElementaryTypeName","src":"29527:5:23","typeDescriptions":{}}},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29527:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29514:25:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":5569,"nodeType":"ExpressionStatement","src":"29514:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5571,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"29557:10:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5558,"src":"29571:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29557:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":5574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29578:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":5570,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29549:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29549:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5576,"nodeType":"ExpressionStatement","src":"29549:70:23"}]},"documentation":{"id":5556,"nodeType":"StructuredDocumentation","src":"29082:345:23","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":5578,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29441:7:23","nodeType":"FunctionDefinition","parameters":{"id":5559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5558,"mutability":"mutable","name":"value","nameLocation":"29456:5:23","nodeType":"VariableDeclaration","scope":5578,"src":"29449:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5557,"name":"int256","nodeType":"ElementaryTypeName","src":"29449:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29448:14:23"},"returnParameters":{"id":5562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5561,"mutability":"mutable","name":"downcasted","nameLocation":"29492:10:23","nodeType":"VariableDeclaration","scope":5578,"src":"29486:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":5560,"name":"int80","nodeType":"ElementaryTypeName","src":"29486:5:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29485:18:23"},"scope":5814,"src":"29432:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5600,"nodeType":"Block","src":"30054:122:23","statements":[{"expression":{"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5586,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"30064:10:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5581,"src":"30083:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30077:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":5587,"name":"int72","nodeType":"ElementaryTypeName","src":"30077:5:23","typeDescriptions":{}}},"id":5590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30077:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30064:25:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":5592,"nodeType":"ExpressionStatement","src":"30064:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5594,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"30107:10:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5581,"src":"30121:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30107:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":5597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30128:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":5593,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30099:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30099:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5599,"nodeType":"ExpressionStatement","src":"30099:70:23"}]},"documentation":{"id":5579,"nodeType":"StructuredDocumentation","src":"29632:345:23","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":5601,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29991:7:23","nodeType":"FunctionDefinition","parameters":{"id":5582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5581,"mutability":"mutable","name":"value","nameLocation":"30006:5:23","nodeType":"VariableDeclaration","scope":5601,"src":"29999:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5580,"name":"int256","nodeType":"ElementaryTypeName","src":"29999:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29998:14:23"},"returnParameters":{"id":5585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5584,"mutability":"mutable","name":"downcasted","nameLocation":"30042:10:23","nodeType":"VariableDeclaration","scope":5601,"src":"30036:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":5583,"name":"int72","nodeType":"ElementaryTypeName","src":"30036:5:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30035:18:23"},"scope":5814,"src":"29982:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5623,"nodeType":"Block","src":"30604:122:23","statements":[{"expression":{"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5609,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"30614:10:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"30633:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30627:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":5610,"name":"int64","nodeType":"ElementaryTypeName","src":"30627:5:23","typeDescriptions":{}}},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30627:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30614:25:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":5615,"nodeType":"ExpressionStatement","src":"30614:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5617,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"30657:10:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"30671:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30657:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":5620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30678:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":5616,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30649:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30649:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5622,"nodeType":"ExpressionStatement","src":"30649:70:23"}]},"documentation":{"id":5602,"nodeType":"StructuredDocumentation","src":"30182:345:23","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":5624,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30541:7:23","nodeType":"FunctionDefinition","parameters":{"id":5605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5604,"mutability":"mutable","name":"value","nameLocation":"30556:5:23","nodeType":"VariableDeclaration","scope":5624,"src":"30549:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5603,"name":"int256","nodeType":"ElementaryTypeName","src":"30549:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30548:14:23"},"returnParameters":{"id":5608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5607,"mutability":"mutable","name":"downcasted","nameLocation":"30592:10:23","nodeType":"VariableDeclaration","scope":5624,"src":"30586:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":5606,"name":"int64","nodeType":"ElementaryTypeName","src":"30586:5:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30585:18:23"},"scope":5814,"src":"30532:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5646,"nodeType":"Block","src":"31154:122:23","statements":[{"expression":{"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5632,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"31164:10:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"31183:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31177:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":5633,"name":"int56","nodeType":"ElementaryTypeName","src":"31177:5:23","typeDescriptions":{}}},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31177:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31164:25:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":5638,"nodeType":"ExpressionStatement","src":"31164:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5640,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5630,"src":"31207:10:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"31221:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31207:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":5643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31228:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":5639,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31199:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31199:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5645,"nodeType":"ExpressionStatement","src":"31199:70:23"}]},"documentation":{"id":5625,"nodeType":"StructuredDocumentation","src":"30732:345:23","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":5647,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31091:7:23","nodeType":"FunctionDefinition","parameters":{"id":5628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5627,"mutability":"mutable","name":"value","nameLocation":"31106:5:23","nodeType":"VariableDeclaration","scope":5647,"src":"31099:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5626,"name":"int256","nodeType":"ElementaryTypeName","src":"31099:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31098:14:23"},"returnParameters":{"id":5631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"mutability":"mutable","name":"downcasted","nameLocation":"31142:10:23","nodeType":"VariableDeclaration","scope":5647,"src":"31136:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":5629,"name":"int56","nodeType":"ElementaryTypeName","src":"31136:5:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31135:18:23"},"scope":5814,"src":"31082:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5669,"nodeType":"Block","src":"31704:122:23","statements":[{"expression":{"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5655,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"31714:10:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"31733:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31727:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":5656,"name":"int48","nodeType":"ElementaryTypeName","src":"31727:5:23","typeDescriptions":{}}},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31727:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31714:25:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":5661,"nodeType":"ExpressionStatement","src":"31714:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5663,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"31757:10:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"31771:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31757:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":5666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31778:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":5662,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31749:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31749:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5668,"nodeType":"ExpressionStatement","src":"31749:70:23"}]},"documentation":{"id":5648,"nodeType":"StructuredDocumentation","src":"31282:345:23","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":5670,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31641:7:23","nodeType":"FunctionDefinition","parameters":{"id":5651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5650,"mutability":"mutable","name":"value","nameLocation":"31656:5:23","nodeType":"VariableDeclaration","scope":5670,"src":"31649:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5649,"name":"int256","nodeType":"ElementaryTypeName","src":"31649:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31648:14:23"},"returnParameters":{"id":5654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5653,"mutability":"mutable","name":"downcasted","nameLocation":"31692:10:23","nodeType":"VariableDeclaration","scope":5670,"src":"31686:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":5652,"name":"int48","nodeType":"ElementaryTypeName","src":"31686:5:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31685:18:23"},"scope":5814,"src":"31632:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5692,"nodeType":"Block","src":"32254:122:23","statements":[{"expression":{"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5678,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"32264:10:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"32283:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32277:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":5679,"name":"int40","nodeType":"ElementaryTypeName","src":"32277:5:23","typeDescriptions":{}}},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32277:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32264:25:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":5684,"nodeType":"ExpressionStatement","src":"32264:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5686,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"32307:10:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"32321:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32307:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":5689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32328:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":5685,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32299:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32299:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5691,"nodeType":"ExpressionStatement","src":"32299:70:23"}]},"documentation":{"id":5671,"nodeType":"StructuredDocumentation","src":"31832:345:23","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":5693,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32191:7:23","nodeType":"FunctionDefinition","parameters":{"id":5674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5673,"mutability":"mutable","name":"value","nameLocation":"32206:5:23","nodeType":"VariableDeclaration","scope":5693,"src":"32199:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5672,"name":"int256","nodeType":"ElementaryTypeName","src":"32199:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32198:14:23"},"returnParameters":{"id":5677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5676,"mutability":"mutable","name":"downcasted","nameLocation":"32242:10:23","nodeType":"VariableDeclaration","scope":5693,"src":"32236:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":5675,"name":"int40","nodeType":"ElementaryTypeName","src":"32236:5:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32235:18:23"},"scope":5814,"src":"32182:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5715,"nodeType":"Block","src":"32804:122:23","statements":[{"expression":{"id":5706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5701,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"32814:10:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"32833:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32827:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":5702,"name":"int32","nodeType":"ElementaryTypeName","src":"32827:5:23","typeDescriptions":{}}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32827:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32814:25:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":5707,"nodeType":"ExpressionStatement","src":"32814:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5709,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"32857:10:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"32871:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32857:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":5712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32878:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":5708,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32849:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32849:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5714,"nodeType":"ExpressionStatement","src":"32849:70:23"}]},"documentation":{"id":5694,"nodeType":"StructuredDocumentation","src":"32382:345:23","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":5716,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32741:7:23","nodeType":"FunctionDefinition","parameters":{"id":5697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5696,"mutability":"mutable","name":"value","nameLocation":"32756:5:23","nodeType":"VariableDeclaration","scope":5716,"src":"32749:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5695,"name":"int256","nodeType":"ElementaryTypeName","src":"32749:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32748:14:23"},"returnParameters":{"id":5700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5699,"mutability":"mutable","name":"downcasted","nameLocation":"32792:10:23","nodeType":"VariableDeclaration","scope":5716,"src":"32786:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":5698,"name":"int32","nodeType":"ElementaryTypeName","src":"32786:5:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32785:18:23"},"scope":5814,"src":"32732:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5738,"nodeType":"Block","src":"33354:122:23","statements":[{"expression":{"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5724,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"33364:10:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5719,"src":"33383:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33377:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":5725,"name":"int24","nodeType":"ElementaryTypeName","src":"33377:5:23","typeDescriptions":{}}},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33377:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33364:25:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":5730,"nodeType":"ExpressionStatement","src":"33364:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5732,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"33407:10:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5719,"src":"33421:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33407:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":5735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33428:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":5731,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33399:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33399:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5737,"nodeType":"ExpressionStatement","src":"33399:70:23"}]},"documentation":{"id":5717,"nodeType":"StructuredDocumentation","src":"32932:345:23","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":5739,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33291:7:23","nodeType":"FunctionDefinition","parameters":{"id":5720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5719,"mutability":"mutable","name":"value","nameLocation":"33306:5:23","nodeType":"VariableDeclaration","scope":5739,"src":"33299:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5718,"name":"int256","nodeType":"ElementaryTypeName","src":"33299:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33298:14:23"},"returnParameters":{"id":5723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5722,"mutability":"mutable","name":"downcasted","nameLocation":"33342:10:23","nodeType":"VariableDeclaration","scope":5739,"src":"33336:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":5721,"name":"int24","nodeType":"ElementaryTypeName","src":"33336:5:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33335:18:23"},"scope":5814,"src":"33282:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5761,"nodeType":"Block","src":"33904:122:23","statements":[{"expression":{"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5747,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"33914:10:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"33933:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33927:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":5748,"name":"int16","nodeType":"ElementaryTypeName","src":"33927:5:23","typeDescriptions":{}}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33927:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33914:25:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":5753,"nodeType":"ExpressionStatement","src":"33914:25:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5755,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"33957:10:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"33971:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33957:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":5758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33978:40:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":5754,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33949:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33949:70:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5760,"nodeType":"ExpressionStatement","src":"33949:70:23"}]},"documentation":{"id":5740,"nodeType":"StructuredDocumentation","src":"33482:345:23","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":5762,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33841:7:23","nodeType":"FunctionDefinition","parameters":{"id":5743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5742,"mutability":"mutable","name":"value","nameLocation":"33856:5:23","nodeType":"VariableDeclaration","scope":5762,"src":"33849:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5741,"name":"int256","nodeType":"ElementaryTypeName","src":"33849:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33848:14:23"},"returnParameters":{"id":5746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5745,"mutability":"mutable","name":"downcasted","nameLocation":"33892:10:23","nodeType":"VariableDeclaration","scope":5762,"src":"33886:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":5744,"name":"int16","nodeType":"ElementaryTypeName","src":"33886:5:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33885:18:23"},"scope":5814,"src":"33832:194:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5784,"nodeType":"Block","src":"34447:120:23","statements":[{"expression":{"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5770,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"34457:10:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5765,"src":"34475:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34470:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":5771,"name":"int8","nodeType":"ElementaryTypeName","src":"34470:4:23","typeDescriptions":{}}},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34470:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34457:24:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":5776,"nodeType":"ExpressionStatement","src":"34457:24:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5778,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5768,"src":"34499:10:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5765,"src":"34513:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34499:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":5781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34520:39:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":5777,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34491:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34491:69:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5783,"nodeType":"ExpressionStatement","src":"34491:69:23"}]},"documentation":{"id":5763,"nodeType":"StructuredDocumentation","src":"34032:340:23","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":5785,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34386:6:23","nodeType":"FunctionDefinition","parameters":{"id":5766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5765,"mutability":"mutable","name":"value","nameLocation":"34400:5:23","nodeType":"VariableDeclaration","scope":5785,"src":"34393:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5764,"name":"int256","nodeType":"ElementaryTypeName","src":"34393:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34392:14:23"},"returnParameters":{"id":5769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5768,"mutability":"mutable","name":"downcasted","nameLocation":"34435:10:23","nodeType":"VariableDeclaration","scope":5785,"src":"34430:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":5767,"name":"int8","nodeType":"ElementaryTypeName","src":"34430:4:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34429:17:23"},"scope":5814,"src":"34377:190:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5812,"nodeType":"Block","src":"34845:233:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"34962:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":5799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34984:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5798,"name":"int256","nodeType":"ElementaryTypeName","src":"34984:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5797,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34979:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34979:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34992:3:23","memberName":"max","nodeType":"MemberAccess","src":"34979:16:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34971:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5795,"name":"uint256","nodeType":"ElementaryTypeName","src":"34971:7:23","typeDescriptions":{}}},"id":5802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34971:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34962:34:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":5804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34998:42:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":5793,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34954:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34954:87:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5806,"nodeType":"ExpressionStatement","src":"34954:87:23"},{"expression":{"arguments":[{"id":5809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"35065:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35058:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5807,"name":"int256","nodeType":"ElementaryTypeName","src":"35058:6:23","typeDescriptions":{}}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35058:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5792,"id":5811,"nodeType":"Return","src":"35051:20:23"}]},"documentation":{"id":5786,"nodeType":"StructuredDocumentation","src":"34573:203:23","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":5813,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34790:8:23","nodeType":"FunctionDefinition","parameters":{"id":5789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5788,"mutability":"mutable","name":"value","nameLocation":"34807:5:23","nodeType":"VariableDeclaration","scope":5813,"src":"34799:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5787,"name":"uint256","nodeType":"ElementaryTypeName","src":"34799:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34798:15:23"},"returnParameters":{"id":5792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5813,"src":"34837:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5790,"name":"int256","nodeType":"ElementaryTypeName","src":"34837:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34836:8:23"},"scope":5814,"src":"34781:297:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5815,"src":"927:34153:23","usedErrors":[]}],"src":"192:34889:23"},"id":23},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[5919]},"id":5920,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5816,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5817,"nodeType":"StructuredDocumentation","src":"134:80:24","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5919,"linearizedBaseContracts":[5919],"name":"SignedMath","nameLocation":"223:10:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":5834,"nodeType":"Block","src":"375:37:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5827,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"392:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5828,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"396:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5831,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5822,"src":"404:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:24","trueExpression":{"id":5830,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"400:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5826,"id":5833,"nodeType":"Return","src":"385:20:24"}]},"documentation":{"id":5818,"nodeType":"StructuredDocumentation","src":"240:66:24","text":" @dev Returns the largest of two signed numbers."},"id":5835,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:24","nodeType":"FunctionDefinition","parameters":{"id":5823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5820,"mutability":"mutable","name":"a","nameLocation":"331:1:24","nodeType":"VariableDeclaration","scope":5835,"src":"324:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5819,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5822,"mutability":"mutable","name":"b","nameLocation":"341:1:24","nodeType":"VariableDeclaration","scope":5835,"src":"334:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5821,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:24"},"returnParameters":{"id":5826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5835,"src":"367:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5824,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:24"},"scope":5919,"src":"311:101:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5852,"nodeType":"Block","src":"554:37:24","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5845,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"571:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5846,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"575:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5849,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"583:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:24","trueExpression":{"id":5848,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"579:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5844,"id":5851,"nodeType":"Return","src":"564:20:24"}]},"documentation":{"id":5836,"nodeType":"StructuredDocumentation","src":"418:67:24","text":" @dev Returns the smallest of two signed numbers."},"id":5853,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:24","nodeType":"FunctionDefinition","parameters":{"id":5841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5838,"mutability":"mutable","name":"a","nameLocation":"510:1:24","nodeType":"VariableDeclaration","scope":5853,"src":"503:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5837,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5840,"mutability":"mutable","name":"b","nameLocation":"520:1:24","nodeType":"VariableDeclaration","scope":5853,"src":"513:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5839,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:24"},"returnParameters":{"id":5844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5853,"src":"546:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5842,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:24"},"scope":5919,"src":"490:101:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5896,"nodeType":"Block","src":"796:162:24","statements":[{"assignments":[5864],"declarations":[{"constant":false,"id":5864,"mutability":"mutable","name":"x","nameLocation":"865:1:24","nodeType":"VariableDeclaration","scope":5896,"src":"858:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5863,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5877,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5865,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"870:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5866,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"874:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5868,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5869,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"881:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5870,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"885:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5875,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:24"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5878,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"910:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5883,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5864,"src":"930:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5881,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:24","typeDescriptions":{}}},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5879,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:24","typeDescriptions":{}}},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5888,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"944:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5889,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"948:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5893,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5862,"id":5895,"nodeType":"Return","src":"903:48:24"}]},"documentation":{"id":5854,"nodeType":"StructuredDocumentation","src":"597:126:24","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5897,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:24","nodeType":"FunctionDefinition","parameters":{"id":5859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5856,"mutability":"mutable","name":"a","nameLocation":"752:1:24","nodeType":"VariableDeclaration","scope":5897,"src":"745:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5855,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5858,"mutability":"mutable","name":"b","nameLocation":"762:1:24","nodeType":"VariableDeclaration","scope":5897,"src":"755:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5857,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:24"},"returnParameters":{"id":5862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5897,"src":"788:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5860,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:24"},"scope":5919,"src":"728:230:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5917,"nodeType":"Block","src":"1102:158:24","statements":[{"id":5916,"nodeType":"UncheckedBlock","src":"1112:142:24","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5907,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"1227:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":5908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:24","subExpression":{"id":5911,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"1241:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:24","trueExpression":{"id":5910,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5900,"src":"1236:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:24","typeDescriptions":{}}},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5904,"id":5915,"nodeType":"Return","src":"1212:31:24"}]}]},"documentation":{"id":5898,"nodeType":"StructuredDocumentation","src":"964:78:24","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5918,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:24","nodeType":"FunctionDefinition","parameters":{"id":5901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5900,"mutability":"mutable","name":"n","nameLocation":"1067:1:24","nodeType":"VariableDeclaration","scope":5918,"src":"1060:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5899,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:24"},"returnParameters":{"id":5904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5918,"src":"1093:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5902,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:24"},"scope":5919,"src":"1047:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5920,"src":"215:1047:24","usedErrors":[]}],"src":"109:1154:24"},"id":24},"contracts/MyToken.sol":{"ast":{"absolutePath":"contracts/MyToken.sol","exportedSymbols":{"AccessControl":[315],"ERC20":[1102],"ERC20Permit":[1352],"ERC20Votes":[2086],"MyToken":[6039]},"id":6040,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5921,"literals":["solidity",">=","0.7",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"32:31:25"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":5923,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6040,"sourceUnit":1103,"src":"65:70:25","symbolAliases":[{"foreign":{"id":5922,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"74:5:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":5925,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6040,"sourceUnit":316,"src":"136:81:25","symbolAliases":[{"foreign":{"id":5924,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"145:13:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","id":5927,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6040,"sourceUnit":2151,"src":"218:99:25","symbolAliases":[{"foreign":{"id":5926,"name":"ERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"227:11:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol","id":5929,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6040,"sourceUnit":2087,"src":"318:91:25","symbolAliases":[{"foreign":{"id":5928,"name":"ERC20Votes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"327:10:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5930,"name":"ERC20","nameLocations":["431:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"431:5:25"},"id":5931,"nodeType":"InheritanceSpecifier","src":"431:5:25"},{"baseName":{"id":5932,"name":"AccessControl","nameLocations":["438:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"438:13:25"},"id":5933,"nodeType":"InheritanceSpecifier","src":"438:13:25"},{"baseName":{"id":5934,"name":"ERC20Permit","nameLocations":["453:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":1352,"src":"453:11:25"},"id":5935,"nodeType":"InheritanceSpecifier","src":"453:11:25"},{"baseName":{"id":5936,"name":"ERC20Votes","nameLocations":["466:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"466:10:25"},"id":5937,"nodeType":"InheritanceSpecifier","src":"466:10:25"}],"canonicalName":"MyToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6039,"linearizedBaseContracts":[6039,2086,500,466,515,1352,3371,491,2147,315,1102,2111,1180,3395,3407,388,2172],"name":"MyToken","nameLocation":"420:7:25","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":5942,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"505:11:25","nodeType":"VariableDeclaration","scope":6039,"src":"481:62:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"481:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":5940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"529:13:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":5939,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"519:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"519:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":5964,"nodeType":"Block","src":"609:94:25","statements":[{"expression":{"arguments":[{"id":5953,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"626:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5954,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"646:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"650:6:25","memberName":"sender","nodeType":"MemberAccess","src":"646:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5952,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"615:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"615:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5957,"nodeType":"ExpressionStatement","src":"615:42:25"},{"expression":{"arguments":[{"id":5959,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"674:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":5960,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"687:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"691:6:25","memberName":"sender","nodeType":"MemberAccess","src":"687:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5958,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"663:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"663:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5963,"nodeType":"ExpressionStatement","src":"663:35:25"}]},"id":5965,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4d79546f6b656e","id":5945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"568:9:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5","typeString":"literal_string \"MyToken\""},"value":"MyToken"},{"hexValue":"4d544b","id":5946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"579:5:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e","typeString":"literal_string \"MTK\""},"value":"MTK"}],"id":5947,"kind":"baseConstructorSpecifier","modifierName":{"id":5944,"name":"ERC20","nameLocations":["562:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"562:5:25"},"nodeType":"ModifierInvocation","src":"562:23:25"},{"arguments":[{"hexValue":"4d79546f6b656e","id":5949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"598:9:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5","typeString":"literal_string \"MyToken\""},"value":"MyToken"}],"id":5950,"kind":"baseConstructorSpecifier","modifierName":{"id":5948,"name":"ERC20Permit","nameLocations":["586:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":1352,"src":"586:11:25"},"nodeType":"ModifierInvocation","src":"586:22:25"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5943,"nodeType":"ParameterList","parameters":[],"src":"559:2:25"},"returnParameters":{"id":5951,"nodeType":"ParameterList","parameters":[],"src":"609:0:25"},"scope":6039,"src":"548:155:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5980,"nodeType":"Block","src":"778:28:25","statements":[{"expression":{"arguments":[{"id":5976,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"790:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5977,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"794:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5975,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[6020],"referencedDeclaration":6020,"src":"784:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"784:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5979,"nodeType":"ExpressionStatement","src":"784:17:25"}]},"functionSelector":"40c10f19","id":5981,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5972,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"765:11:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":5973,"kind":"modifierInvocation","modifierName":{"id":5971,"name":"onlyRole","nameLocations":["756:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":38,"src":"756:8:25"},"nodeType":"ModifierInvocation","src":"756:21:25"}],"name":"mint","nameLocation":"716:4:25","nodeType":"FunctionDefinition","parameters":{"id":5970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5967,"mutability":"mutable","name":"to","nameLocation":"729:2:25","nodeType":"VariableDeclaration","scope":5981,"src":"721:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5966,"name":"address","nodeType":"ElementaryTypeName","src":"721:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5969,"mutability":"mutable","name":"amount","nameLocation":"741:6:25","nodeType":"VariableDeclaration","scope":5981,"src":"733:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5968,"name":"uint256","nodeType":"ElementaryTypeName","src":"733:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"720:28:25"},"returnParameters":{"id":5974,"nodeType":"ParameterList","parameters":[],"src":"778:0:25"},"scope":6039,"src":"707:99:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1101,1831],"body":{"id":6001,"nodeType":"Block","src":"994:54:25","statements":[{"expression":{"arguments":[{"id":5996,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"1026:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5997,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"1032:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5998,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5987,"src":"1036:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5993,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1000:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MyToken_$6039_$","typeString":"type(contract super MyToken)"}},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1006:19:25","memberName":"_afterTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1831,"src":"1000:25:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1000:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6000,"nodeType":"ExpressionStatement","src":"1000:43:25"}]},"id":6002,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"885:19:25","nodeType":"FunctionDefinition","overrides":{"id":5991,"nodeType":"OverrideSpecifier","overrides":[{"id":5989,"name":"ERC20","nameLocations":["973:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"973:5:25"},{"id":5990,"name":"ERC20Votes","nameLocations":["980:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"980:10:25"}],"src":"964:27:25"},"parameters":{"id":5988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5983,"mutability":"mutable","name":"from","nameLocation":"913:4:25","nodeType":"VariableDeclaration","scope":6002,"src":"905:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5982,"name":"address","nodeType":"ElementaryTypeName","src":"905:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5985,"mutability":"mutable","name":"to","nameLocation":"927:2:25","nodeType":"VariableDeclaration","scope":6002,"src":"919:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5984,"name":"address","nodeType":"ElementaryTypeName","src":"919:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5987,"mutability":"mutable","name":"amount","nameLocation":"939:6:25","nodeType":"VariableDeclaration","scope":6002,"src":"931:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5986,"name":"uint256","nodeType":"ElementaryTypeName","src":"931:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"904:42:25"},"returnParameters":{"id":5992,"nodeType":"ParameterList","parameters":[],"src":"994:0:25"},"scope":6039,"src":"876:172:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[919,1778],"body":{"id":6019,"nodeType":"Block","src":"1142:34:25","statements":[{"expression":{"arguments":[{"id":6015,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6004,"src":"1160:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6016,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"1164:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6012,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1148:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MyToken_$6039_$","typeString":"type(contract super MyToken)"}},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1154:5:25","memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":1778,"src":"1148:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1148:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6018,"nodeType":"ExpressionStatement","src":"1148:23:25"}]},"id":6020,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"1061:5:25","nodeType":"FunctionDefinition","overrides":{"id":6010,"nodeType":"OverrideSpecifier","overrides":[{"id":6008,"name":"ERC20","nameLocations":["1121:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"1121:5:25"},{"id":6009,"name":"ERC20Votes","nameLocations":["1128:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"1128:10:25"}],"src":"1112:27:25"},"parameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6004,"mutability":"mutable","name":"to","nameLocation":"1075:2:25","nodeType":"VariableDeclaration","scope":6020,"src":"1067:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6003,"name":"address","nodeType":"ElementaryTypeName","src":"1067:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6006,"mutability":"mutable","name":"amount","nameLocation":"1087:6:25","nodeType":"VariableDeclaration","scope":6020,"src":"1079:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6005,"name":"uint256","nodeType":"ElementaryTypeName","src":"1079:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1066:28:25"},"returnParameters":{"id":6011,"nodeType":"ParameterList","parameters":[],"src":"1142:0:25"},"scope":6039,"src":"1052:124:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[991,1801],"body":{"id":6037,"nodeType":"Block","src":"1275:39:25","statements":[{"expression":{"arguments":[{"id":6033,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"1293:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6034,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"1302:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6030,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1281:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MyToken_$6039_$","typeString":"type(contract super MyToken)"}},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1287:5:25","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1801,"src":"1281:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1281:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6036,"nodeType":"ExpressionStatement","src":"1281:28:25"}]},"id":6038,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"1189:5:25","nodeType":"FunctionDefinition","overrides":{"id":6028,"nodeType":"OverrideSpecifier","overrides":[{"id":6026,"name":"ERC20","nameLocations":["1254:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":1102,"src":"1254:5:25"},{"id":6027,"name":"ERC20Votes","nameLocations":["1261:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":2086,"src":"1261:10:25"}],"src":"1245:27:25"},"parameters":{"id":6025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6022,"mutability":"mutable","name":"account","nameLocation":"1203:7:25","nodeType":"VariableDeclaration","scope":6038,"src":"1195:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6021,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6024,"mutability":"mutable","name":"amount","nameLocation":"1220:6:25","nodeType":"VariableDeclaration","scope":6038,"src":"1212:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6023,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1194:33:25"},"returnParameters":{"id":6029,"nodeType":"ParameterList","parameters":[],"src":"1275:0:25"},"scope":6039,"src":"1180:134:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":6040,"src":"411:905:25","usedErrors":[2259,2261]}],"src":"32:1285:25"},"id":25}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}"}},"@openzeppelin/contracts/governance/utils/IVotes.sol":{"IVotes":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Common interface for {ERC20Votes}, {ERC721Votes}, and other {Votes}-enabled contracts. _Available since v4.5._\",\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":\"IVotes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5805.sol":{"IERC5805":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"delegate(address)\":{\"details\":\"Delegates votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`.\"},\"delegates(address)\":{\"details\":\"Returns the delegate that `account` has chosen.\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote.\"},\"getPastVotes(address,uint256)\":{\"details\":\"Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block.\"},\"getVotes(address)\":{\"details\":\"Returns the current amount of votes that `account` has.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5805.sol\":\"IERC5805\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC6372.sol":{"IERC6372":{"abi":[{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","clock()":"91ddadf4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":\"IERC6372\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_560":{"entryPoint":null,"id":560,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":287,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":453,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":536,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":393,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":90,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4144:26","statements":[{"nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:26"},"nodeType":"YulFunctionCall","src":"66:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:26"},"nodeType":"YulFunctionCall","src":"56:31:26"},"nodeType":"YulExpressionStatement","src":"56:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:26"},"nodeType":"YulFunctionCall","src":"96:15:26"},"nodeType":"YulExpressionStatement","src":"96:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:26"},"nodeType":"YulFunctionCall","src":"120:15:26"},"nodeType":"YulExpressionStatement","src":"120:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:26"},{"body":{"nodeType":"YulBlock","src":"210:776:26","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:26"},"nodeType":"YulFunctionCall","src":"261:12:26"},"nodeType":"YulExpressionStatement","src":"261:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:26"},"nodeType":"YulFunctionCall","src":"234:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:26"},"nodeType":"YulFunctionCall","src":"230:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:26"},"nodeType":"YulFunctionCall","src":"223:35:26"},"nodeType":"YulIf","src":"220:55:26"},{"nodeType":"YulVariableDeclaration","src":"284:23:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:26"},"nodeType":"YulFunctionCall","src":"294:13:26"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:26","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:26","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:26"},"nodeType":"YulFunctionCall","src":"330:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:26"},"nodeType":"YulFunctionCall","src":"326:18:26"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:26"},"nodeType":"YulFunctionCall","src":"369:18:26"},"nodeType":"YulExpressionStatement","src":"369:18:26"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:26"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:26"},"nodeType":"YulFunctionCall","src":"356:10:26"},"nodeType":"YulIf","src":"353:36:26"},{"nodeType":"YulVariableDeclaration","src":"398:17:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:26"},"nodeType":"YulFunctionCall","src":"408:7:26"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:26"},"nodeType":"YulFunctionCall","src":"438:9:26"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:26"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:26"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:26"},"nodeType":"YulFunctionCall","src":"498:13:26"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:26"},"nodeType":"YulFunctionCall","src":"494:22:26"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:26","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:26"},"nodeType":"YulFunctionCall","src":"490:31:26"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:26"},"nodeType":"YulFunctionCall","src":"486:40:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:26"},"nodeType":"YulFunctionCall","src":"474:53:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:26"},"nodeType":"YulFunctionCall","src":"588:18:26"},"nodeType":"YulExpressionStatement","src":"588:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:26"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:26"},"nodeType":"YulFunctionCall","src":"542:18:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:26"},"nodeType":"YulFunctionCall","src":"562:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:26"},"nodeType":"YulFunctionCall","src":"539:46:26"},"nodeType":"YulIf","src":"536:72:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:26"},"nodeType":"YulFunctionCall","src":"617:22:26"},"nodeType":"YulExpressionStatement","src":"617:22:26"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:26"},"nodeType":"YulFunctionCall","src":"648:18:26"},"nodeType":"YulExpressionStatement","src":"648:18:26"},{"nodeType":"YulVariableDeclaration","src":"675:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:26","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:26"},"nodeType":"YulFunctionCall","src":"737:12:26"},"nodeType":"YulExpressionStatement","src":"737:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:26"},"nodeType":"YulFunctionCall","src":"708:15:26"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:26"},"nodeType":"YulFunctionCall","src":"704:24:26"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:26"},"nodeType":"YulFunctionCall","src":"701:33:26"},"nodeType":"YulIf","src":"698:53:26"},{"nodeType":"YulVariableDeclaration","src":"760:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:26","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:26"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:26"},"nodeType":"YulFunctionCall","src":"850:14:26"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:26"},"nodeType":"YulFunctionCall","src":"846:23:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:26"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:26"},"nodeType":"YulFunctionCall","src":"881:14:26"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:26"},"nodeType":"YulFunctionCall","src":"877:23:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:26"},"nodeType":"YulFunctionCall","src":"871:30:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:26"},"nodeType":"YulFunctionCall","src":"839:63:26"},"nodeType":"YulExpressionStatement","src":"839:63:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:26"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:26"},"nodeType":"YulFunctionCall","src":"787:9:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:26","statements":[{"nodeType":"YulAssignment","src":"799:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:26"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:26"},"nodeType":"YulFunctionCall","src":"804:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:26","statements":[]},"src":"779:133:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:26"},"nodeType":"YulFunctionCall","src":"932:15:26"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:26"},"nodeType":"YulFunctionCall","src":"928:24:26"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:26"},"nodeType":"YulFunctionCall","src":"921:35:26"},"nodeType":"YulExpressionStatement","src":"921:35:26"},{"nodeType":"YulAssignment","src":"965:15:26","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:26"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:26","type":""}],"src":"146:840:26"},{"body":{"nodeType":"YulBlock","src":"1109:444:26","statements":[{"body":{"nodeType":"YulBlock","src":"1155:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1164:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1167:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1157:6:26"},"nodeType":"YulFunctionCall","src":"1157:12:26"},"nodeType":"YulExpressionStatement","src":"1157:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1130:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1139:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1126:3:26"},"nodeType":"YulFunctionCall","src":"1126:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"1151:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1122:3:26"},"nodeType":"YulFunctionCall","src":"1122:32:26"},"nodeType":"YulIf","src":"1119:52:26"},{"nodeType":"YulVariableDeclaration","src":"1180:30:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1194:5:26"},"nodeType":"YulFunctionCall","src":"1194:16:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1184:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1219:28:26","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1237:2:26","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1241:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1233:3:26"},"nodeType":"YulFunctionCall","src":"1233:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"1245:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1229:3:26"},"nodeType":"YulFunctionCall","src":"1229:18:26"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1223:2:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1274:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1283:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1276:6:26"},"nodeType":"YulFunctionCall","src":"1276:12:26"},"nodeType":"YulExpressionStatement","src":"1276:12:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1262:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"1270:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:26"},"nodeType":"YulFunctionCall","src":"1259:14:26"},"nodeType":"YulIf","src":"1256:34:26"},{"nodeType":"YulAssignment","src":"1299:71:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1342:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1353:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1338:3:26"},"nodeType":"YulFunctionCall","src":"1338:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1362:7:26"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1309:28:26"},"nodeType":"YulFunctionCall","src":"1309:61:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1299:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"1379:41:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1405:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1416:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1401:3:26"},"nodeType":"YulFunctionCall","src":"1401:18:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1395:5:26"},"nodeType":"YulFunctionCall","src":"1395:25:26"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1383:8:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1449:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1458:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1461:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1451:6:26"},"nodeType":"YulFunctionCall","src":"1451:12:26"},"nodeType":"YulExpressionStatement","src":"1451:12:26"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1435:8:26"},{"name":"_1","nodeType":"YulIdentifier","src":"1445:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1432:2:26"},"nodeType":"YulFunctionCall","src":"1432:16:26"},"nodeType":"YulIf","src":"1429:36:26"},{"nodeType":"YulAssignment","src":"1474:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1517:9:26"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1528:8:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1513:3:26"},"nodeType":"YulFunctionCall","src":"1513:24:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:26"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1484:28:26"},"nodeType":"YulFunctionCall","src":"1484:63:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1474:6:26"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1067:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1078:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1090:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1098:6:26","type":""}],"src":"991:562:26"},{"body":{"nodeType":"YulBlock","src":"1613:325:26","statements":[{"nodeType":"YulAssignment","src":"1623:22:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:1:26","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1640:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1633:3:26"},"nodeType":"YulFunctionCall","src":"1633:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1623:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"1654:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1684:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"1690:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1680:3:26"},"nodeType":"YulFunctionCall","src":"1680:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1658:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1731:31:26","statements":[{"nodeType":"YulAssignment","src":"1733:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1747:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1755:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1743:3:26"},"nodeType":"YulFunctionCall","src":"1743:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1733:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1711:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1704:6:26"},"nodeType":"YulFunctionCall","src":"1704:26:26"},"nodeType":"YulIf","src":"1701:61:26"},{"body":{"nodeType":"YulBlock","src":"1821:111:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1842:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1854:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1845:3:26"},"nodeType":"YulFunctionCall","src":"1845:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1835:6:26"},"nodeType":"YulFunctionCall","src":"1835:31:26"},"nodeType":"YulExpressionStatement","src":"1835:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1886:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1889:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1879:6:26"},"nodeType":"YulFunctionCall","src":"1879:15:26"},"nodeType":"YulExpressionStatement","src":"1879:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1914:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1907:6:26"},"nodeType":"YulFunctionCall","src":"1907:15:26"},"nodeType":"YulExpressionStatement","src":"1907:15:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1777:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1800:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1808:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1797:2:26"},"nodeType":"YulFunctionCall","src":"1797:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1774:2:26"},"nodeType":"YulFunctionCall","src":"1774:38:26"},"nodeType":"YulIf","src":"1771:161:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1593:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1602:6:26","type":""}],"src":"1558:380:26"},{"body":{"nodeType":"YulBlock","src":"1999:65:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2016:1:26","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2019:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2009:6:26"},"nodeType":"YulFunctionCall","src":"2009:14:26"},"nodeType":"YulExpressionStatement","src":"2009:14:26"},{"nodeType":"YulAssignment","src":"2032:26:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2050:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2053:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2040:9:26"},"nodeType":"YulFunctionCall","src":"2040:18:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2032:4:26"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1982:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1990:4:26","type":""}],"src":"1943:121:26"},{"body":{"nodeType":"YulBlock","src":"2150:464:26","statements":[{"body":{"nodeType":"YulBlock","src":"2183:425:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2197:11:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2207:1:26","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2201:2:26","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2228:2:26"},{"name":"array","nodeType":"YulIdentifier","src":"2232:5:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:26"},"nodeType":"YulFunctionCall","src":"2221:17:26"},"nodeType":"YulExpressionStatement","src":"2221:17:26"},{"nodeType":"YulVariableDeclaration","src":"2251:31:26","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:26"},{"kind":"number","nodeType":"YulLiteral","src":"2277:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2263:9:26"},"nodeType":"YulFunctionCall","src":"2263:19:26"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2255:4:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2295:57:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2318:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2328:1:26","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2335:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"2347:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:26"},"nodeType":"YulFunctionCall","src":"2331:19:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2324:3:26"},"nodeType":"YulFunctionCall","src":"2324:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:26"},"nodeType":"YulFunctionCall","src":"2314:38:26"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2299:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2389:23:26","statements":[{"nodeType":"YulAssignment","src":"2391:19:26","value":{"name":"data","nodeType":"YulIdentifier","src":"2406:4:26"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2391:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2371:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"2383:4:26","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2368:2:26"},"nodeType":"YulFunctionCall","src":"2368:20:26"},"nodeType":"YulIf","src":"2365:47:26"},{"nodeType":"YulVariableDeclaration","src":"2425:41:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2439:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2449:1:26","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2456:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"2461:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:26"},"nodeType":"YulFunctionCall","src":"2452:12:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2445:3:26"},"nodeType":"YulFunctionCall","src":"2445:20:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2435:3:26"},"nodeType":"YulFunctionCall","src":"2435:31:26"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2429:2:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2479:24:26","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2492:11:26"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2483:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2577:21:26","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2586:5:26"},{"name":"_1","nodeType":"YulIdentifier","src":"2593:2:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2579:6:26"},"nodeType":"YulFunctionCall","src":"2579:17:26"},"nodeType":"YulExpressionStatement","src":"2579:17:26"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2527:5:26"},{"name":"_2","nodeType":"YulIdentifier","src":"2534:2:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2524:2:26"},"nodeType":"YulFunctionCall","src":"2524:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2538:26:26","statements":[{"nodeType":"YulAssignment","src":"2540:22:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2553:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2560:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2549:3:26"},"nodeType":"YulFunctionCall","src":"2549:13:26"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2540:5:26"}]}]},"pre":{"nodeType":"YulBlock","src":"2520:3:26","statements":[]},"src":"2516:82:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2166:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"2171:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2163:2:26"},"nodeType":"YulFunctionCall","src":"2163:11:26"},"nodeType":"YulIf","src":"2160:448:26"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2122:5:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"2129:3:26","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2134:10:26","type":""}],"src":"2069:545:26"},{"body":{"nodeType":"YulBlock","src":"2704:81:26","statements":[{"nodeType":"YulAssignment","src":"2714:65:26","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2729:4:26"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:1:26","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2750:3:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2743:3:26"},"nodeType":"YulFunctionCall","src":"2743:11:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2756:3:26"},"nodeType":"YulFunctionCall","src":"2756:6:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2739:3:26"},"nodeType":"YulFunctionCall","src":"2739:24:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2735:3:26"},"nodeType":"YulFunctionCall","src":"2735:29:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2725:3:26"},"nodeType":"YulFunctionCall","src":"2725:40:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2771:1:26","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2774:3:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2767:3:26"},"nodeType":"YulFunctionCall","src":"2767:11:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2722:2:26"},"nodeType":"YulFunctionCall","src":"2722:57:26"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2714:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2681:4:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"2687:3:26","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2695:4:26","type":""}],"src":"2619:166:26"},{"body":{"nodeType":"YulBlock","src":"2886:1256:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2896:24:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2916:3:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2910:5:26"},"nodeType":"YulFunctionCall","src":"2910:10:26"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2900:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2963:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2965:16:26"},"nodeType":"YulFunctionCall","src":"2965:18:26"},"nodeType":"YulExpressionStatement","src":"2965:18:26"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2935:6:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2951:2:26","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2955:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2947:3:26"},"nodeType":"YulFunctionCall","src":"2947:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"2959:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2943:3:26"},"nodeType":"YulFunctionCall","src":"2943:18:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2932:2:26"},"nodeType":"YulFunctionCall","src":"2932:30:26"},"nodeType":"YulIf","src":"2929:56:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3038:4:26"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3076:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3070:5:26"},"nodeType":"YulFunctionCall","src":"3070:11:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3044:25:26"},"nodeType":"YulFunctionCall","src":"3044:38:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"3084:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2994:43:26"},"nodeType":"YulFunctionCall","src":"2994:97:26"},"nodeType":"YulExpressionStatement","src":"2994:97:26"},{"nodeType":"YulVariableDeclaration","src":"3100:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3117:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3104:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3127:23:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3146:4:26","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3131:11:26","type":""}]},{"nodeType":"YulAssignment","src":"3159:24:26","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3172:11:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3159:9:26"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3229:656:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3243:35:26","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3262:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3274:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3270:3:26"},"nodeType":"YulFunctionCall","src":"3270:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3258:3:26"},"nodeType":"YulFunctionCall","src":"3258:20:26"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3247:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3291:49:26","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3335:4:26"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3305:29:26"},"nodeType":"YulFunctionCall","src":"3305:35:26"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3295:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3353:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3362:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3357:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3440:172:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3465:6:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3483:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3488:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3479:3:26"},"nodeType":"YulFunctionCall","src":"3479:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:26"},"nodeType":"YulFunctionCall","src":"3473:26:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3458:6:26"},"nodeType":"YulFunctionCall","src":"3458:42:26"},"nodeType":"YulExpressionStatement","src":"3458:42:26"},{"nodeType":"YulAssignment","src":"3517:24:26","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3531:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3539:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3527:3:26"},"nodeType":"YulFunctionCall","src":"3527:14:26"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3517:6:26"}]},{"nodeType":"YulAssignment","src":"3558:40:26","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3575:9:26"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3586:11:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3571:3:26"},"nodeType":"YulFunctionCall","src":"3571:27:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3558:9:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3387:1:26"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3390:7:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3384:2:26"},"nodeType":"YulFunctionCall","src":"3384:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3399:28:26","statements":[{"nodeType":"YulAssignment","src":"3401:24:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3410:1:26"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3413:11:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3406:3:26"},"nodeType":"YulFunctionCall","src":"3406:19:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3401:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"3380:3:26","statements":[]},"src":"3376:236:26"},{"body":{"nodeType":"YulBlock","src":"3660:166:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3678:43:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3705:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3710:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3701:3:26"},"nodeType":"YulFunctionCall","src":"3701:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3695:5:26"},"nodeType":"YulFunctionCall","src":"3695:26:26"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3682:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3745:6:26"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3757:9:26"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3784:1:26","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3787:6:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3780:3:26"},"nodeType":"YulFunctionCall","src":"3780:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"3796:3:26","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3776:3:26"},"nodeType":"YulFunctionCall","src":"3776:24:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3806:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3802:3:26"},"nodeType":"YulFunctionCall","src":"3802:6:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3772:3:26"},"nodeType":"YulFunctionCall","src":"3772:37:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3768:3:26"},"nodeType":"YulFunctionCall","src":"3768:42:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3753:3:26"},"nodeType":"YulFunctionCall","src":"3753:58:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3738:6:26"},"nodeType":"YulFunctionCall","src":"3738:74:26"},"nodeType":"YulExpressionStatement","src":"3738:74:26"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3631:7:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"3640:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3628:2:26"},"nodeType":"YulFunctionCall","src":"3628:19:26"},"nodeType":"YulIf","src":"3625:201:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3846:4:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3860:1:26","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3856:3:26"},"nodeType":"YulFunctionCall","src":"3856:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"3872:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3852:3:26"},"nodeType":"YulFunctionCall","src":"3852:22:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3839:6:26"},"nodeType":"YulFunctionCall","src":"3839:36:26"},"nodeType":"YulExpressionStatement","src":"3839:36:26"}]},"nodeType":"YulCase","src":"3222:663:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3227:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3902:234:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3916:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3929:1:26","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3920:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3965:67:26","statements":[{"nodeType":"YulAssignment","src":"3983:35:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4002:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4007:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:26"},"nodeType":"YulFunctionCall","src":"3998:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3992:5:26"},"nodeType":"YulFunctionCall","src":"3992:26:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3983:5:26"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3946:6:26"},"nodeType":"YulIf","src":"3943:89:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4052:4:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4111:5:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"4118:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4058:52:26"},"nodeType":"YulFunctionCall","src":"4058:67:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4045:6:26"},"nodeType":"YulFunctionCall","src":"4045:81:26"},"nodeType":"YulExpressionStatement","src":"4045:81:26"}]},"nodeType":"YulCase","src":"3894:242:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3202:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3199:2:26"},"nodeType":"YulFunctionCall","src":"3199:14:26"},"nodeType":"YulSwitch","src":"3192:944:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2871:4:26","type":""},{"name":"src","nodeType":"YulTypedName","src":"2877:3:26","type":""}],"src":"2790:1352:26"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000b4638038062000b4683398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61085280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220ce6fd47ad0ad2679809533356ee07301f943af2a2adf872539c601007319177364736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB46 CODESIZE SUB DUP1 PUSH3 0xB46 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x852 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE PUSH16 0xD47AD0AD2679809533356EE07301F943 0xAF 0x2A 0x2A 0xDF DUP8 0x25 CODECOPY 0xC6 ADD STOP PUSH20 0x19177364736F6C63430008130033000000000000 ","sourceMap":"1532:11312:6:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:6;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:26;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:26;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:26;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:26:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:26;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:26;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:26;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:26;;;3992:26;3943:89;-1:-1:-1;;2747:1:26;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:26;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:26;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:26;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:26:o;:::-;1532:11312:6;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1101":{"entryPoint":null,"id":1101,"parameterSlots":3,"returnSlots":0},"@_approve_1036":{"entryPoint":858,"id":1036,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1090":{"entryPoint":null,"id":1090,"parameterSlots":3,"returnSlots":0},"@_msgSender_2162":{"entryPoint":null,"id":2162,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1079":{"entryPoint":1150,"id":1079,"parameterSlots":3,"returnSlots":0},"@_transfer_862":{"entryPoint":1272,"id":862,"parameterSlots":3,"returnSlots":0},"@allowance_657":{"entryPoint":815,"id":657,"parameterSlots":2,"returnSlots":1},"@approve_682":{"entryPoint":562,"id":682,"parameterSlots":2,"returnSlots":1},"@balanceOf_614":{"entryPoint":null,"id":614,"parameterSlots":1,"returnSlots":1},"@decimals_590":{"entryPoint":null,"id":590,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_785":{"entryPoint":673,"id":785,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_744":{"entryPoint":624,"id":744,"parameterSlots":2,"returnSlots":1},"@name_570":{"entryPoint":416,"id":570,"parameterSlots":0,"returnSlots":1},"@symbol_580":{"entryPoint":658,"id":580,"parameterSlots":0,"returnSlots":1},"@totalSupply_600":{"entryPoint":null,"id":600,"parameterSlots":0,"returnSlots":1},"@transferFrom_715":{"entryPoint":588,"id":715,"parameterSlots":3,"returnSlots":1},"@transfer_639":{"entryPoint":801,"id":639,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1770,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1934,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1840,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1798,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1692,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2043,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1985,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5754:26","statements":[{"nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:427:26","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:26","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:26","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:26"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:26"},"nodeType":"YulFunctionCall","src":"166:21:26"},"nodeType":"YulExpressionStatement","src":"166:21:26"},{"nodeType":"YulVariableDeclaration","src":"196:27:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:26"},"nodeType":"YulFunctionCall","src":"210:13:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:26"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:26"},"nodeType":"YulFunctionCall","src":"239:18:26"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:26"},"nodeType":"YulFunctionCall","src":"232:34:26"},"nodeType":"YulExpressionStatement","src":"232:34:26"},{"nodeType":"YulVariableDeclaration","src":"275:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:26","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:26"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:26"},"nodeType":"YulFunctionCall","src":"369:17:26"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:26"},"nodeType":"YulFunctionCall","src":"365:26:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:26"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:26"},"nodeType":"YulFunctionCall","src":"403:14:26"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:26"},"nodeType":"YulFunctionCall","src":"399:23:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:26"},"nodeType":"YulFunctionCall","src":"393:30:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:26"},"nodeType":"YulFunctionCall","src":"358:66:26"},"nodeType":"YulExpressionStatement","src":"358:66:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:26"},"nodeType":"YulFunctionCall","src":"302:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:26","statements":[{"nodeType":"YulAssignment","src":"318:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:26"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:26"},"nodeType":"YulFunctionCall","src":"323:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:26","statements":[]},"src":"294:140:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"458:9:26"},{"name":"length","nodeType":"YulIdentifier","src":"469:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"454:3:26"},"nodeType":"YulFunctionCall","src":"454:22:26"},{"kind":"number","nodeType":"YulLiteral","src":"478:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"450:3:26"},"nodeType":"YulFunctionCall","src":"450:31:26"},{"kind":"number","nodeType":"YulLiteral","src":"483:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"443:6:26"},"nodeType":"YulFunctionCall","src":"443:42:26"},"nodeType":"YulExpressionStatement","src":"443:42:26"},{"nodeType":"YulAssignment","src":"494:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"510:9:26"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"529:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"537:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"525:3:26"},"nodeType":"YulFunctionCall","src":"525:15:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"546:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"542:3:26"},"nodeType":"YulFunctionCall","src":"542:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"521:3:26"},"nodeType":"YulFunctionCall","src":"521:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"506:3:26"},"nodeType":"YulFunctionCall","src":"506:45:26"},{"kind":"number","nodeType":"YulLiteral","src":"553:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"502:3:26"},"nodeType":"YulFunctionCall","src":"502:54:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"494:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:26","type":""}],"src":"14:548:26"},{"body":{"nodeType":"YulBlock","src":"616:124:26","statements":[{"nodeType":"YulAssignment","src":"626:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"648:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"635:12:26"},"nodeType":"YulFunctionCall","src":"635:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"626:5:26"}]},{"body":{"nodeType":"YulBlock","src":"718:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"727:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"720:6:26"},"nodeType":"YulFunctionCall","src":"720:12:26"},"nodeType":"YulExpressionStatement","src":"720:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"677:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"703:3:26","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"708:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"699:3:26"},"nodeType":"YulFunctionCall","src":"699:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"712:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"695:3:26"},"nodeType":"YulFunctionCall","src":"695:19:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"684:3:26"},"nodeType":"YulFunctionCall","src":"684:31:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"674:2:26"},"nodeType":"YulFunctionCall","src":"674:42:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"667:6:26"},"nodeType":"YulFunctionCall","src":"667:50:26"},"nodeType":"YulIf","src":"664:70:26"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"595:6:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"606:5:26","type":""}],"src":"567:173:26"},{"body":{"nodeType":"YulBlock","src":"832:167:26","statements":[{"body":{"nodeType":"YulBlock","src":"878:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"887:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"890:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"880:6:26"},"nodeType":"YulFunctionCall","src":"880:12:26"},"nodeType":"YulExpressionStatement","src":"880:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"853:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"849:3:26"},"nodeType":"YulFunctionCall","src":"849:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"874:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"845:3:26"},"nodeType":"YulFunctionCall","src":"845:32:26"},"nodeType":"YulIf","src":"842:52:26"},{"nodeType":"YulAssignment","src":"903:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"932:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"913:18:26"},"nodeType":"YulFunctionCall","src":"913:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"903:6:26"}]},{"nodeType":"YulAssignment","src":"951:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"989:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"974:3:26"},"nodeType":"YulFunctionCall","src":"974:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"961:12:26"},"nodeType":"YulFunctionCall","src":"961:32:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"951:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"790:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"801:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"813:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"821:6:26","type":""}],"src":"745:254:26"},{"body":{"nodeType":"YulBlock","src":"1099:92:26","statements":[{"nodeType":"YulAssignment","src":"1109:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1121:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1117:3:26"},"nodeType":"YulFunctionCall","src":"1117:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1109:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:26"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1176:6:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1169:6:26"},"nodeType":"YulFunctionCall","src":"1169:14:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1162:6:26"},"nodeType":"YulFunctionCall","src":"1162:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1144:6:26"},"nodeType":"YulFunctionCall","src":"1144:41:26"},"nodeType":"YulExpressionStatement","src":"1144:41:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1068:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1079:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1090:4:26","type":""}],"src":"1004:187:26"},{"body":{"nodeType":"YulBlock","src":"1297:76:26","statements":[{"nodeType":"YulAssignment","src":"1307:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1319:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1330:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1315:3:26"},"nodeType":"YulFunctionCall","src":"1315:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1307:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1349:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"1360:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1342:6:26"},"nodeType":"YulFunctionCall","src":"1342:25:26"},"nodeType":"YulExpressionStatement","src":"1342:25:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1266:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1277:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1288:4:26","type":""}],"src":"1196:177:26"},{"body":{"nodeType":"YulBlock","src":"1482:224:26","statements":[{"body":{"nodeType":"YulBlock","src":"1528:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1537:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1530:6:26"},"nodeType":"YulFunctionCall","src":"1530:12:26"},"nodeType":"YulExpressionStatement","src":"1530:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1503:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1499:3:26"},"nodeType":"YulFunctionCall","src":"1499:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"1524:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1495:3:26"},"nodeType":"YulFunctionCall","src":"1495:32:26"},"nodeType":"YulIf","src":"1492:52:26"},{"nodeType":"YulAssignment","src":"1553:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1582:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1563:18:26"},"nodeType":"YulFunctionCall","src":"1563:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1553:6:26"}]},{"nodeType":"YulAssignment","src":"1601:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1634:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1645:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1630:3:26"},"nodeType":"YulFunctionCall","src":"1630:18:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1611:18:26"},"nodeType":"YulFunctionCall","src":"1611:38:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1601:6:26"}]},{"nodeType":"YulAssignment","src":"1658:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:26"},"nodeType":"YulFunctionCall","src":"1681:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1668:12:26"},"nodeType":"YulFunctionCall","src":"1668:32:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1658:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1471:6:26","type":""}],"src":"1378:328:26"},{"body":{"nodeType":"YulBlock","src":"1808:87:26","statements":[{"nodeType":"YulAssignment","src":"1818:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1830:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1841:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1826:3:26"},"nodeType":"YulFunctionCall","src":"1826:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1818:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1860:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1875:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1883:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1871:3:26"},"nodeType":"YulFunctionCall","src":"1871:17:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1853:6:26"},"nodeType":"YulFunctionCall","src":"1853:36:26"},"nodeType":"YulExpressionStatement","src":"1853:36:26"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1777:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1788:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1799:4:26","type":""}],"src":"1711:184:26"},{"body":{"nodeType":"YulBlock","src":"1970:116:26","statements":[{"body":{"nodeType":"YulBlock","src":"2016:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2025:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2028:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2018:6:26"},"nodeType":"YulFunctionCall","src":"2018:12:26"},"nodeType":"YulExpressionStatement","src":"2018:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1991:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2000:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1987:3:26"},"nodeType":"YulFunctionCall","src":"1987:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2012:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1983:3:26"},"nodeType":"YulFunctionCall","src":"1983:32:26"},"nodeType":"YulIf","src":"1980:52:26"},{"nodeType":"YulAssignment","src":"2041:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2051:18:26"},"nodeType":"YulFunctionCall","src":"2051:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2041:6:26"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1936:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1947:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1959:6:26","type":""}],"src":"1900:186:26"},{"body":{"nodeType":"YulBlock","src":"2178:173:26","statements":[{"body":{"nodeType":"YulBlock","src":"2224:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2226:6:26"},"nodeType":"YulFunctionCall","src":"2226:12:26"},"nodeType":"YulExpressionStatement","src":"2226:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2199:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2208:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2195:3:26"},"nodeType":"YulFunctionCall","src":"2195:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2220:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2191:3:26"},"nodeType":"YulFunctionCall","src":"2191:32:26"},"nodeType":"YulIf","src":"2188:52:26"},{"nodeType":"YulAssignment","src":"2249:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2278:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2259:18:26"},"nodeType":"YulFunctionCall","src":"2259:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2249:6:26"}]},{"nodeType":"YulAssignment","src":"2297:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2330:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2341:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2326:3:26"},"nodeType":"YulFunctionCall","src":"2326:18:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2307:18:26"},"nodeType":"YulFunctionCall","src":"2307:38:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2297:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2136:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2147:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2159:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2167:6:26","type":""}],"src":"2091:260:26"},{"body":{"nodeType":"YulBlock","src":"2411:325:26","statements":[{"nodeType":"YulAssignment","src":"2421:22:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2435:1:26","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2438:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2431:3:26"},"nodeType":"YulFunctionCall","src":"2431:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2421:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"2452:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2482:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"2488:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2478:3:26"},"nodeType":"YulFunctionCall","src":"2478:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2456:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2529:31:26","statements":[{"nodeType":"YulAssignment","src":"2531:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2553:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2541:3:26"},"nodeType":"YulFunctionCall","src":"2541:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2531:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2509:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2502:6:26"},"nodeType":"YulFunctionCall","src":"2502:26:26"},"nodeType":"YulIf","src":"2499:61:26"},{"body":{"nodeType":"YulBlock","src":"2619:111:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2640:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2647:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2652:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2643:3:26"},"nodeType":"YulFunctionCall","src":"2643:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2633:6:26"},"nodeType":"YulFunctionCall","src":"2633:31:26"},"nodeType":"YulExpressionStatement","src":"2633:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2684:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2687:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2677:6:26"},"nodeType":"YulFunctionCall","src":"2677:15:26"},"nodeType":"YulExpressionStatement","src":"2677:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2712:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2715:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2705:6:26"},"nodeType":"YulFunctionCall","src":"2705:15:26"},"nodeType":"YulExpressionStatement","src":"2705:15:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2575:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2598:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2606:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2595:2:26"},"nodeType":"YulFunctionCall","src":"2595:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2572:2:26"},"nodeType":"YulFunctionCall","src":"2572:38:26"},"nodeType":"YulIf","src":"2569:161:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2391:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2400:6:26","type":""}],"src":"2356:380:26"},{"body":{"nodeType":"YulBlock","src":"2789:174:26","statements":[{"nodeType":"YulAssignment","src":"2799:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2810:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"2813:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2806:3:26"},"nodeType":"YulFunctionCall","src":"2806:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2799:3:26"}]},{"body":{"nodeType":"YulBlock","src":"2846:111:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2867:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2874:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2879:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2870:3:26"},"nodeType":"YulFunctionCall","src":"2870:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2860:6:26"},"nodeType":"YulFunctionCall","src":"2860:31:26"},"nodeType":"YulExpressionStatement","src":"2860:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2911:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2914:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2904:6:26"},"nodeType":"YulFunctionCall","src":"2904:15:26"},"nodeType":"YulExpressionStatement","src":"2904:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2939:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2942:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2932:6:26"},"nodeType":"YulFunctionCall","src":"2932:15:26"},"nodeType":"YulExpressionStatement","src":"2932:15:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2830:1:26"},{"name":"sum","nodeType":"YulIdentifier","src":"2833:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2827:2:26"},"nodeType":"YulFunctionCall","src":"2827:10:26"},"nodeType":"YulIf","src":"2824:133:26"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2772:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"2775:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2781:3:26","type":""}],"src":"2741:222:26"},{"body":{"nodeType":"YulBlock","src":"3142:227:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3159:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3170:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3152:6:26"},"nodeType":"YulFunctionCall","src":"3152:21:26"},"nodeType":"YulExpressionStatement","src":"3152:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3193:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3204:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3189:3:26"},"nodeType":"YulFunctionCall","src":"3189:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"3209:2:26","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3182:6:26"},"nodeType":"YulFunctionCall","src":"3182:30:26"},"nodeType":"YulExpressionStatement","src":"3182:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3232:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3243:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3228:3:26"},"nodeType":"YulFunctionCall","src":"3228:18:26"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3248:34:26","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3221:6:26"},"nodeType":"YulFunctionCall","src":"3221:62:26"},"nodeType":"YulExpressionStatement","src":"3221:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3303:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3314:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3299:3:26"},"nodeType":"YulFunctionCall","src":"3299:18:26"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3319:7:26","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3292:6:26"},"nodeType":"YulFunctionCall","src":"3292:35:26"},"nodeType":"YulExpressionStatement","src":"3292:35:26"},{"nodeType":"YulAssignment","src":"3336:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3359:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:26"},"nodeType":"YulFunctionCall","src":"3344:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3336:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3119:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3133:4:26","type":""}],"src":"2968:401:26"},{"body":{"nodeType":"YulBlock","src":"3548:226:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3565:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3576:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3558:6:26"},"nodeType":"YulFunctionCall","src":"3558:21:26"},"nodeType":"YulExpressionStatement","src":"3558:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3599:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3610:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3595:3:26"},"nodeType":"YulFunctionCall","src":"3595:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"3615:2:26","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3588:6:26"},"nodeType":"YulFunctionCall","src":"3588:30:26"},"nodeType":"YulExpressionStatement","src":"3588:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3638:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3649:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3634:3:26"},"nodeType":"YulFunctionCall","src":"3634:18:26"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3654:34:26","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3627:6:26"},"nodeType":"YulFunctionCall","src":"3627:62:26"},"nodeType":"YulExpressionStatement","src":"3627:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3709:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3720:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3705:3:26"},"nodeType":"YulFunctionCall","src":"3705:18:26"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3725:6:26","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3698:6:26"},"nodeType":"YulFunctionCall","src":"3698:34:26"},"nodeType":"YulExpressionStatement","src":"3698:34:26"},{"nodeType":"YulAssignment","src":"3741:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3753:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3764:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3749:3:26"},"nodeType":"YulFunctionCall","src":"3749:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3741:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3525:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3539:4:26","type":""}],"src":"3374:400:26"},{"body":{"nodeType":"YulBlock","src":"3953:224:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3970:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3981:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3963:6:26"},"nodeType":"YulFunctionCall","src":"3963:21:26"},"nodeType":"YulExpressionStatement","src":"3963:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4004:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4015:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4000:3:26"},"nodeType":"YulFunctionCall","src":"4000:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"4020:2:26","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3993:6:26"},"nodeType":"YulFunctionCall","src":"3993:30:26"},"nodeType":"YulExpressionStatement","src":"3993:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4043:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4054:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4039:3:26"},"nodeType":"YulFunctionCall","src":"4039:18:26"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4059:34:26","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4032:6:26"},"nodeType":"YulFunctionCall","src":"4032:62:26"},"nodeType":"YulExpressionStatement","src":"4032:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4114:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4125:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:26"},"nodeType":"YulFunctionCall","src":"4110:18:26"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4130:4:26","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:26"},"nodeType":"YulFunctionCall","src":"4103:32:26"},"nodeType":"YulExpressionStatement","src":"4103:32:26"},{"nodeType":"YulAssignment","src":"4144:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4156:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4167:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:26"},"nodeType":"YulFunctionCall","src":"4152:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4144:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3930:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3944:4:26","type":""}],"src":"3779:398:26"},{"body":{"nodeType":"YulBlock","src":"4356:179:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4373:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4366:6:26"},"nodeType":"YulFunctionCall","src":"4366:21:26"},"nodeType":"YulExpressionStatement","src":"4366:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4407:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4418:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4403:3:26"},"nodeType":"YulFunctionCall","src":"4403:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"4423:2:26","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4396:6:26"},"nodeType":"YulFunctionCall","src":"4396:30:26"},"nodeType":"YulExpressionStatement","src":"4396:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4446:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4457:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4442:3:26"},"nodeType":"YulFunctionCall","src":"4442:18:26"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4462:31:26","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4435:6:26"},"nodeType":"YulFunctionCall","src":"4435:59:26"},"nodeType":"YulExpressionStatement","src":"4435:59:26"},{"nodeType":"YulAssignment","src":"4503:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4515:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4526:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4511:3:26"},"nodeType":"YulFunctionCall","src":"4511:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4503:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4333:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4347:4:26","type":""}],"src":"4182:353:26"},{"body":{"nodeType":"YulBlock","src":"4714:227:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4731:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4742:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4724:6:26"},"nodeType":"YulFunctionCall","src":"4724:21:26"},"nodeType":"YulExpressionStatement","src":"4724:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4765:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4776:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4761:3:26"},"nodeType":"YulFunctionCall","src":"4761:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"4781:2:26","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4754:6:26"},"nodeType":"YulFunctionCall","src":"4754:30:26"},"nodeType":"YulExpressionStatement","src":"4754:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4804:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4815:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4800:3:26"},"nodeType":"YulFunctionCall","src":"4800:18:26"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4820:34:26","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4793:6:26"},"nodeType":"YulFunctionCall","src":"4793:62:26"},"nodeType":"YulExpressionStatement","src":"4793:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4875:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4886:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4871:3:26"},"nodeType":"YulFunctionCall","src":"4871:18:26"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4891:7:26","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4864:6:26"},"nodeType":"YulFunctionCall","src":"4864:35:26"},"nodeType":"YulExpressionStatement","src":"4864:35:26"},{"nodeType":"YulAssignment","src":"4908:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4920:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4931:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4916:3:26"},"nodeType":"YulFunctionCall","src":"4916:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4908:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4691:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4705:4:26","type":""}],"src":"4540:401:26"},{"body":{"nodeType":"YulBlock","src":"5120:225:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5148:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5130:6:26"},"nodeType":"YulFunctionCall","src":"5130:21:26"},"nodeType":"YulExpressionStatement","src":"5130:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5171:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5182:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5167:3:26"},"nodeType":"YulFunctionCall","src":"5167:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:26","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5160:6:26"},"nodeType":"YulFunctionCall","src":"5160:30:26"},"nodeType":"YulExpressionStatement","src":"5160:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5210:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5221:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5206:3:26"},"nodeType":"YulFunctionCall","src":"5206:18:26"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5226:34:26","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5199:6:26"},"nodeType":"YulFunctionCall","src":"5199:62:26"},"nodeType":"YulExpressionStatement","src":"5199:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5281:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5292:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5277:3:26"},"nodeType":"YulFunctionCall","src":"5277:18:26"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5297:5:26","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5270:6:26"},"nodeType":"YulFunctionCall","src":"5270:33:26"},"nodeType":"YulExpressionStatement","src":"5270:33:26"},{"nodeType":"YulAssignment","src":"5312:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5324:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5335:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5320:3:26"},"nodeType":"YulFunctionCall","src":"5320:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5312:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5097:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5111:4:26","type":""}],"src":"4946:399:26"},{"body":{"nodeType":"YulBlock","src":"5524:228:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5541:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5552:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5534:6:26"},"nodeType":"YulFunctionCall","src":"5534:21:26"},"nodeType":"YulExpressionStatement","src":"5534:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5575:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5586:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5571:3:26"},"nodeType":"YulFunctionCall","src":"5571:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"5591:2:26","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5564:6:26"},"nodeType":"YulFunctionCall","src":"5564:30:26"},"nodeType":"YulExpressionStatement","src":"5564:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5614:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5625:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5610:3:26"},"nodeType":"YulFunctionCall","src":"5610:18:26"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5630:34:26","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5603:6:26"},"nodeType":"YulFunctionCall","src":"5603:62:26"},"nodeType":"YulExpressionStatement","src":"5603:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5685:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5696:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5681:3:26"},"nodeType":"YulFunctionCall","src":"5681:18:26"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5701:8:26","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5674:6:26"},"nodeType":"YulFunctionCall","src":"5674:36:26"},"nodeType":"YulExpressionStatement","src":"5674:36:26"},{"nodeType":"YulAssignment","src":"5719:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5731:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5742:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5727:3:26"},"nodeType":"YulFunctionCall","src":"5727:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5719:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5501:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5515:4:26","type":""}],"src":"5350:402:26"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220ce6fd47ad0ad2679809533356ee07301f943af2a2adf872539c601007319177364736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE PUSH16 0xD47AD0AD2679809533356EE07301F943 0xAF 0x2A 0x2A 0xDF DUP8 0x25 CODECOPY 0xC6 ADD STOP PUSH20 0x19177364736F6C63430008130033000000000000 ","sourceMap":"1532:11312:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:26;;1162:22;1144:41;;1132:2;1117:18;4444:197:6;1004:187:26;3255:106:6;3342:12;;3255:106;;;1342:25:26;;;1330:2;1315:18;3255:106:6;1196:177:26;5203:256:6;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1853:36:26;;1841:2;1826:18;3104:91:6;1711:184:26;5854:234:6;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:6;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:13;4581:32:6;719:10:13;4597:7:6;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:13;5356:38:6;5372:4;719:10:13;5387:6:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:6;;5203:256;-1:-1:-1;;;;5203:256:6:o;5854:234::-;5942:4;719:10:13;5996:64:6;719:10:13;6012:7:6;6049:10;6021:25;719:10:13;6012:7:6;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:13;6668:4:6;6749:25;719:10:13;6766:7:6;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:6;;3170:2:26;6784:85:6;;;3152:21:26;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:26;;;3292:35;3344:19;;6784:85:6;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:13;3873:28:6;719:10:13;3890:2:6;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:6;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:6;;10550:68;;;;-1:-1:-1;;;10550:68:6;;3576:2:26;10550:68:6;;;3558:21:26;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:26;;;3698:34;3749:19;;10550:68:6;3374:400:26;10550:68:6;-1:-1:-1;;;;;10636:21:6;;10628:68;;;;-1:-1:-1;;;10628:68:6;;3981:2:26;10628:68:6;;;3963:21:26;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:26;;;4103:32;4152:19;;10628:68:6;3779:398:26;10628:68:6;-1:-1:-1;;;;;10707:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:26;;;10758:32:6;;1315:18:26;10758:32:6;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:6;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:6;;4384:2:26;11297:68:6;;;4366:21:26;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11297:68:6;4182:353:26;11297:68:6;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:6;;7544:68;;;;-1:-1:-1;;;7544:68:6;;4742:2:26;7544:68:6;;;4724:21:26;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:26;;;4864:35;4916:19;;7544:68:6;4540:401:26;7544:68:6;-1:-1:-1;;;;;7630:16:6;;7622:64;;;;-1:-1:-1;;;7622:64:6;;5148:2:26;7622:64:6;;;5130:21:26;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:26;;;5270:33;5320:19;;7622:64:6;4946:399:26;7622:64:6;-1:-1:-1;;;;;7768:15:6;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:6;;5552:2:26;7793:72:6;;;5534:21:26;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:26;;;5674:36;5727:19;;7793:72:6;5350:402:26;7793:72:6;-1:-1:-1;;;;;7899:15:6;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:26;;;8114:13:6;;8163:26;;1315:18:26;8163:26:6;;;;;;;8200:37;12073:91;14:548:26;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:26;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:26:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:26:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","eip712Domain()":"84b0196e","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x36c00327e3f9afd929cc2721aaa111ab57eff78a630cc364b279ad576b899295\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bf927f4c8b71a5809be184c3107b915b0445ab2c4a33208331e5376692eb5a\",\"dweb:/ipfs/QmVXirsCY1sf4kodhbL6w3NWZkeZeaMuQB7M6DBAdZNqFE\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol":{"ERC20Votes":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getVotes(address)":"9ab24eb0","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC20 to support Compound-like voting and delegation. This version is more generic than Compound's, and supports token supply up to 2^224^ - 1, while COMP is limited to 2^96^ - 1. NOTE: If exact COMP compatibility is required, use the {ERC20VotesComp} variant of this module. This extension keeps a history (checkpoints) of each account's vote power. Vote power can be delegated either by calling the {delegate} function directly, or by providing a signature to be used with {delegateBySig}. Voting power can be queried through the public accessors {getVotes} and {getPastVotes}. By default, token balance does not account for voting power. This makes transfers cheaper. The downside is that it requires users to delegate to themselves in order to activate checkpoints and have their voting power tracked. _Available since v4.2._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":\"ERC20Votes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x36c00327e3f9afd929cc2721aaa111ab57eff78a630cc364b279ad576b899295\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bf927f4c8b71a5809be184c3107b915b0445ab2c4a33208331e5376692eb5a\",\"dweb:/ipfs/QmVXirsCY1sf4kodhbL6w3NWZkeZeaMuQB7M6DBAdZNqFE\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x4e560f86662b6f72ab76122fff53317677154f14bac4a80dbd46a54172b3abfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca5c2518d247417cb01164f04eff57b7e87b5346bc03478ada916f26117aa7fd\",\"dweb:/ipfs/QmVgK66XGZCiH9x4mhqejKUTujtu68DyE6KrYi6MPuaHRJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061ff10289f043bf5939e7e851238bbb80d8104c7b6ace582472994a8ff859e9964736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xFF10 0x28 SWAP16 DIV EXTCODESIZE CREATE2 SWAP4 SWAP15 PUSH31 0x851238BBB80D8104C7B6ACE582472994A8FF859E9964736F6C634300081300 CALLER ","sourceMap":"424:971:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061ff10289f043bf5939e7e851238bbb80d8104c7b6ace582472994a8ff859e9964736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xFF10 0x28 SWAP16 DIV EXTCODESIZE CREATE2 SWAP4 SWAP15 PUSH31 0x851238BBB80D8104C7B6ACE582472994A8FF859E9964736F6C634300081300 CALLER ","sourceMap":"424:971:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061590f6cd635a06290c02b99def67baf87094bf1650d78eeb998755045f1522764736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x590F PUSH13 0xD635A06290C02B99DEF67BAF87 MULMOD 0x4B CALL PUSH6 0xD78EEB99875 POP GASLIMIT CALL MSTORE 0x27 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1235:3050:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1235:3050:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122061590f6cd635a06290c02b99def67baf87094bf1650d78eeb998755045f1522764736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x590F PUSH13 0xD635A06290C02B99DEF67BAF87 MULMOD 0x4B CALL PUSH6 0xD78EEB99875 POP GASLIMIT CALL MSTORE 0x27 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1235:3050:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d7c79cc0d2dc5a13cd1f9ec7db59a64db211d68e514f0971fff90f2f3fff0a564736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD PUSH29 0x79CC0D2DC5A13CD1F9EC7DB59A64DB211D68E514F0971FFF90F2F3FFF0 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1420:2685:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2685:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d7c79cc0d2dc5a13cd1f9ec7db59a64db211d68e514f0971fff90f2f3fff0a564736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD PUSH29 0x79CC0D2DC5A13CD1F9EC7DB59A64DB211D68E514F0971FFF90F2F3FFF0 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"1420:2685:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011d4b54bc80c0b44d0162d73c9c1dba9b336560313d5935c1ed2a4804e8673e864736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xD4 0xB5 0x4B 0xC8 0xC SIGNEXTEND PREVRANDAO 0xD0 AND 0x2D PUSH20 0xC9C1DBA9B336560313D5935C1ED2A4804E8673E8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"220:2559:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;220:2559:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122011d4b54bc80c0b44d0162d73c9c1dba9b336560313d5935c1ed2a4804e8673e864736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GT 0xD4 0xB5 0x4B 0xC8 0xC SIGNEXTEND PREVRANDAO 0xD0 AND 0x2D PUSH20 0xC9C1DBA9B336560313D5935C1ED2A4804E8673E8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"220:2559:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122086682acbdd4e0874dc4db602c6c53be31c2ddbd1bce28c53f0aa84d9cdf7cde164736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH9 0x2ACBDD4E0874DC4DB6 MUL 0xC6 0xC5 EXTCODESIZE 0xE3 SHR 0x2D 0xDB 0xD1 0xBC 0xE2 DUP13 MSTORE8 CREATE 0xAA DUP5 0xD9 0xCD 0xF7 0xCD 0xE1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"369:8761:18:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;369:8761:18;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122086682acbdd4e0874dc4db602c6c53be31c2ddbd1bce28c53f0aa84d9cdf7cde164736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH9 0x2ACBDD4E0874DC4DB6 MUL 0xC6 0xC5 EXTCODESIZE 0xE3 SHR 0x2D 0xDB 0xD1 0xBC 0xE2 DUP13 MSTORE8 CREATE 0xAA DUP5 0xD9 0xCD 0xF7 0xCD 0xE1 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"369:8761:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the `_domainSeparatorV4` function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage. _Available since v3.4._\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e91d0b72d0ff009b3ea09e6b95963bbe902271bfde10f6c03cf48d240255864664736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SAR SIGNEXTEND PUSH19 0xD0FF009B3EA09E6B95963BBE902271BFDE10F6 0xC0 EXTCODECOPY DELEGATECALL DUP14 0x24 MUL SSTORE DUP7 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"202:12582:22:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12582:22;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e91d0b72d0ff009b3ea09e6b95963bbe902271bfde10f6c03cf48d240255864664736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SAR SIGNEXTEND PUSH19 0xD0FF009B3EA09E6B95963BBE902271BFDE10F6 0xC0 EXTCODECOPY DELEGATECALL DUP14 0x24 MUL SSTORE DUP7 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"202:12582:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200266230279578b836a096436a47b9cc055f7a5d2d706ff40181a7a1de735d1ac64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL PUSH7 0x230279578B836A MULMOD PUSH5 0x36A47B9CC0 SSTORE 0xF7 0xA5 0xD2 0xD7 MOD SELFDESTRUCT BLOCKHASH XOR BYTE PUSH27 0x1DE735D1AC64736F6C634300081300330000000000000000000000 ","sourceMap":"927:34153:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;927:34153:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200266230279578b836a096436a47b9cc055f7a5d2d706ff40181a7a1de735d1ac64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL PUSH7 0x230279578B836A MULMOD PUSH5 0x36A47B9CC0 SSTORE 0xF7 0xA5 0xD2 0xD7 MOD SELFDESTRUCT BLOCKHASH XOR BYTE PUSH27 0x1DE735D1AC64736F6C634300081300330000000000000000000000 ","sourceMap":"927:34153:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088366b59ea99732082b3124288e8358f874708936e6768c5650b9be28fa19db664736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 CALLDATASIZE PUSH12 0x59EA99732082B3124288E835 DUP16 DUP8 SELFBALANCE ADDMOD SWAP4 PUSH15 0x6768C5650B9BE28FA19DB664736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"215:1047:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1047:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122088366b59ea99732082b3124288e8358f874708936e6768c5650b9be28fa19db664736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 CALLDATASIZE PUSH12 0x59EA99732082B3124288E835 DUP16 DUP8 SELFBALANCE ADDMOD SWAP4 PUSH15 0x6768C5650B9BE28FA19DB664736F6C PUSH4 0x43000813 STOP CALLER ","sourceMap":"215:1047:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}"}},"contracts/MyToken.sol":{"MyToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegator","type":"address"},{"indexed":true,"internalType":"address","name":"fromDelegate","type":"address"},{"indexed":true,"internalType":"address","name":"toDelegate","type":"address"}],"name":"DelegateChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"delegate","type":"address"},{"indexed":false,"internalType":"uint256","name":"previousBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"DelegateVotesChanged","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"CLOCK_MODE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint32","name":"pos","type":"uint32"}],"name":"checkpoints","outputs":[{"components":[{"internalType":"uint32","name":"fromBlock","type":"uint32"},{"internalType":"uint224","name":"votes","type":"uint224"}],"internalType":"struct ERC20Votes.Checkpoint","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"clock","outputs":[{"internalType":"uint48","name":"","type":"uint48"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"}],"name":"delegate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"delegatee","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"delegateBySig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"delegates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastTotalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"timepoint","type":"uint256"}],"name":"getPastVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getVotes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"numCheckpoints","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1222":{"entryPoint":null,"id":1222,"parameterSlots":1,"returnSlots":0},"@_3260":{"entryPoint":null,"id":3260,"parameterSlots":2,"returnSlots":0},"@_560":{"entryPoint":null,"id":560,"parameterSlots":2,"returnSlots":0},"@_5965":{"entryPoint":null,"id":5965,"parameterSlots":0,"returnSlots":0},"@_buildDomainSeparator_3307":{"entryPoint":null,"id":3307,"parameterSlots":0,"returnSlots":1},"@_grantRole_283":{"entryPoint":477,"id":283,"parameterSlots":2,"returnSlots":0},"@_msgSender_2162":{"entryPoint":null,"id":2162,"parameterSlots":0,"returnSlots":1},"@getStringSlot_2549":{"entryPoint":null,"id":2549,"parameterSlots":1,"returnSlots":1},"@hasRole_79":{"entryPoint":null,"id":79,"parameterSlots":2,"returnSlots":1},"@toShortStringWithFallback_2403":{"entryPoint":420,"id":2403,"parameterSlots":2,"returnSlots":1},"@toShortString_2305":{"entryPoint":642,"id":2305,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1087,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":800,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":1167,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":883,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":740,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":718,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4081:26","statements":[{"nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:26"},"nodeType":"YulFunctionCall","src":"66:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:26"},"nodeType":"YulFunctionCall","src":"56:31:26"},"nodeType":"YulExpressionStatement","src":"56:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:26"},"nodeType":"YulFunctionCall","src":"96:15:26"},"nodeType":"YulExpressionStatement","src":"96:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:26"},"nodeType":"YulFunctionCall","src":"120:15:26"},"nodeType":"YulExpressionStatement","src":"120:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:26"},{"body":{"nodeType":"YulBlock","src":"201:325:26","statements":[{"nodeType":"YulAssignment","src":"211:22:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:26","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:26"},"nodeType":"YulFunctionCall","src":"221:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:26"},"nodeType":"YulFunctionCall","src":"268:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:26","statements":[{"nodeType":"YulAssignment","src":"321:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:26"},"nodeType":"YulFunctionCall","src":"331:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:26"},"nodeType":"YulFunctionCall","src":"292:26:26"},"nodeType":"YulIf","src":"289:61:26"},{"body":{"nodeType":"YulBlock","src":"409:111:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:26"},"nodeType":"YulFunctionCall","src":"433:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:26"},"nodeType":"YulFunctionCall","src":"423:31:26"},"nodeType":"YulExpressionStatement","src":"423:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:26"},"nodeType":"YulFunctionCall","src":"467:15:26"},"nodeType":"YulExpressionStatement","src":"467:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:26"},"nodeType":"YulFunctionCall","src":"495:15:26"},"nodeType":"YulExpressionStatement","src":"495:15:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:26"},"nodeType":"YulFunctionCall","src":"385:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:26"},"nodeType":"YulFunctionCall","src":"362:38:26"},"nodeType":"YulIf","src":"359:161:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:26","type":""}],"src":"146:380:26"},{"body":{"nodeType":"YulBlock","src":"587:65:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:26","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:26"},"nodeType":"YulFunctionCall","src":"597:14:26"},"nodeType":"YulExpressionStatement","src":"597:14:26"},{"nodeType":"YulAssignment","src":"620:26:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:26"},"nodeType":"YulFunctionCall","src":"628:18:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:26"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:26","type":""}],"src":"531:121:26"},{"body":{"nodeType":"YulBlock","src":"738:464:26","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:26","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:26","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:26","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:26","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:26"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:26"},"nodeType":"YulFunctionCall","src":"809:17:26"},"nodeType":"YulExpressionStatement","src":"809:17:26"},{"nodeType":"YulVariableDeclaration","src":"839:31:26","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:26"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:26","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:26"},"nodeType":"YulFunctionCall","src":"851:19:26"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:26","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:26"},"nodeType":"YulFunctionCall","src":"919:19:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:26"},"nodeType":"YulFunctionCall","src":"912:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:26"},"nodeType":"YulFunctionCall","src":"902:38:26"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:26","statements":[{"nodeType":"YulAssignment","src":"979:19:26","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:26"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:26"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:26","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:26"},"nodeType":"YulFunctionCall","src":"956:20:26"},"nodeType":"YulIf","src":"953:47:26"},{"nodeType":"YulVariableDeclaration","src":"1013:41:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:26","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:26"},"nodeType":"YulFunctionCall","src":"1040:12:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:26"},"nodeType":"YulFunctionCall","src":"1033:20:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:26"},"nodeType":"YulFunctionCall","src":"1023:31:26"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:26","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:26"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:26","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:26"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:26"},"nodeType":"YulFunctionCall","src":"1167:17:26"},"nodeType":"YulExpressionStatement","src":"1167:17:26"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:26"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:26"},"nodeType":"YulFunctionCall","src":"1112:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:26","statements":[{"nodeType":"YulAssignment","src":"1128:22:26","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:26"},"nodeType":"YulFunctionCall","src":"1137:13:26"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:26"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:26","statements":[]},"src":"1104:82:26"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:26"},"nodeType":"YulFunctionCall","src":"751:11:26"},"nodeType":"YulIf","src":"748:448:26"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:26","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:26","type":""}],"src":"657:545:26"},{"body":{"nodeType":"YulBlock","src":"1292:81:26","statements":[{"nodeType":"YulAssignment","src":"1302:65:26","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:26"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:26","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:26"},"nodeType":"YulFunctionCall","src":"1331:11:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:26"},"nodeType":"YulFunctionCall","src":"1344:6:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:26"},"nodeType":"YulFunctionCall","src":"1327:24:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:26"},"nodeType":"YulFunctionCall","src":"1323:29:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:26"},"nodeType":"YulFunctionCall","src":"1313:40:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:26","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:26"},"nodeType":"YulFunctionCall","src":"1355:11:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:26"},"nodeType":"YulFunctionCall","src":"1310:57:26"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:26"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:26","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:26","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:26","type":""}],"src":"1207:166:26"},{"body":{"nodeType":"YulBlock","src":"1474:1256:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:26"},"nodeType":"YulFunctionCall","src":"1498:10:26"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:26"},"nodeType":"YulFunctionCall","src":"1553:18:26"},"nodeType":"YulExpressionStatement","src":"1553:18:26"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:26","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:26"},"nodeType":"YulFunctionCall","src":"1535:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:26"},"nodeType":"YulFunctionCall","src":"1531:18:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:26"},"nodeType":"YulFunctionCall","src":"1520:30:26"},"nodeType":"YulIf","src":"1517:56:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:26"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:26"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:26"},"nodeType":"YulFunctionCall","src":"1658:11:26"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:26"},"nodeType":"YulFunctionCall","src":"1632:38:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:26"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:26"},"nodeType":"YulFunctionCall","src":"1582:97:26"},"nodeType":"YulExpressionStatement","src":"1582:97:26"},{"nodeType":"YulVariableDeclaration","src":"1688:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:26","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:26","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:26","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:26","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:26"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:26","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:26"},"nodeType":"YulFunctionCall","src":"1858:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:26"},"nodeType":"YulFunctionCall","src":"1846:20:26"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:26","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:26"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:26"},"nodeType":"YulFunctionCall","src":"1893:35:26"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:26","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:26"},"nodeType":"YulFunctionCall","src":"2067:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:26"},"nodeType":"YulFunctionCall","src":"2061:26:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:26"},"nodeType":"YulFunctionCall","src":"2046:42:26"},"nodeType":"YulExpressionStatement","src":"2046:42:26"},{"nodeType":"YulAssignment","src":"2105:24:26","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:26"},"nodeType":"YulFunctionCall","src":"2115:14:26"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:26"}]},{"nodeType":"YulAssignment","src":"2146:40:26","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:26"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:26"},"nodeType":"YulFunctionCall","src":"2159:27:26"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:26"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:26"},"nodeType":"YulFunctionCall","src":"1972:14:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:26","statements":[{"nodeType":"YulAssignment","src":"1989:24:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:26"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:26"},"nodeType":"YulFunctionCall","src":"1994:19:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:26","statements":[]},"src":"1964:236:26"},{"body":{"nodeType":"YulBlock","src":"2248:166:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:26"},"nodeType":"YulFunctionCall","src":"2289:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:26"},"nodeType":"YulFunctionCall","src":"2283:26:26"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:26","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:26"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:26"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:26","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:26"},"nodeType":"YulFunctionCall","src":"2368:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:26","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:26"},"nodeType":"YulFunctionCall","src":"2364:24:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:26"},"nodeType":"YulFunctionCall","src":"2390:6:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:26"},"nodeType":"YulFunctionCall","src":"2360:37:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:26"},"nodeType":"YulFunctionCall","src":"2356:42:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:26"},"nodeType":"YulFunctionCall","src":"2341:58:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:26"},"nodeType":"YulFunctionCall","src":"2326:74:26"},"nodeType":"YulExpressionStatement","src":"2326:74:26"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:26"},"nodeType":"YulFunctionCall","src":"2216:19:26"},"nodeType":"YulIf","src":"2213:201:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:26","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:26"},"nodeType":"YulFunctionCall","src":"2444:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:26"},"nodeType":"YulFunctionCall","src":"2440:22:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:26"},"nodeType":"YulFunctionCall","src":"2427:36:26"},"nodeType":"YulExpressionStatement","src":"2427:36:26"}]},"nodeType":"YulCase","src":"1810:663:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:26","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:26","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:26","statements":[{"nodeType":"YulAssignment","src":"2571:35:26","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:26"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:26"},"nodeType":"YulFunctionCall","src":"2586:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:26"},"nodeType":"YulFunctionCall","src":"2580:26:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:26"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:26"},"nodeType":"YulIf","src":"2531:89:26"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:26"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:26"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:26"},"nodeType":"YulFunctionCall","src":"2646:67:26"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:26"},"nodeType":"YulFunctionCall","src":"2633:81:26"},"nodeType":"YulExpressionStatement","src":"2633:81:26"}]},"nodeType":"YulCase","src":"2482:242:26","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:26","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:26"},"nodeType":"YulFunctionCall","src":"1787:14:26"},"nodeType":"YulSwitch","src":"1780:944:26"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:26","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:26","type":""}],"src":"1378:1352:26"},{"body":{"nodeType":"YulBlock","src":"2948:276:26","statements":[{"nodeType":"YulAssignment","src":"2958:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2970:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2981:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2966:3:26"},"nodeType":"YulFunctionCall","src":"2966:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2958:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3001:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"3012:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2994:6:26"},"nodeType":"YulFunctionCall","src":"2994:25:26"},"nodeType":"YulExpressionStatement","src":"2994:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3039:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3050:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3035:3:26"},"nodeType":"YulFunctionCall","src":"3035:18:26"},{"name":"value1","nodeType":"YulIdentifier","src":"3055:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3028:6:26"},"nodeType":"YulFunctionCall","src":"3028:34:26"},"nodeType":"YulExpressionStatement","src":"3028:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3082:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3093:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3078:3:26"},"nodeType":"YulFunctionCall","src":"3078:18:26"},{"name":"value2","nodeType":"YulIdentifier","src":"3098:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3071:6:26"},"nodeType":"YulFunctionCall","src":"3071:34:26"},"nodeType":"YulExpressionStatement","src":"3071:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3125:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3136:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3121:3:26"},"nodeType":"YulFunctionCall","src":"3121:18:26"},{"name":"value3","nodeType":"YulIdentifier","src":"3141:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3114:6:26"},"nodeType":"YulFunctionCall","src":"3114:34:26"},"nodeType":"YulExpressionStatement","src":"3114:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3168:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3179:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3164:3:26"},"nodeType":"YulFunctionCall","src":"3164:19:26"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3189:6:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3205:3:26","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3210:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3201:3:26"},"nodeType":"YulFunctionCall","src":"3201:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"3214:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3197:3:26"},"nodeType":"YulFunctionCall","src":"3197:19:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3185:3:26"},"nodeType":"YulFunctionCall","src":"3185:32:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3157:6:26"},"nodeType":"YulFunctionCall","src":"3157:61:26"},"nodeType":"YulExpressionStatement","src":"3157:61:26"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2885:9:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2896:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2904:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2912:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2920:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2928:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2939:4:26","type":""}],"src":"2735:489:26"},{"body":{"nodeType":"YulBlock","src":"3350:427:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3360:12:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3370:2:26","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3364:2:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3388:9:26"},{"name":"_1","nodeType":"YulIdentifier","src":"3399:2:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3381:6:26"},"nodeType":"YulFunctionCall","src":"3381:21:26"},"nodeType":"YulExpressionStatement","src":"3381:21:26"},{"nodeType":"YulVariableDeclaration","src":"3411:27:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3431:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3425:5:26"},"nodeType":"YulFunctionCall","src":"3425:13:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3415:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3458:9:26"},{"name":"_1","nodeType":"YulIdentifier","src":"3469:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3454:3:26"},"nodeType":"YulFunctionCall","src":"3454:18:26"},{"name":"length","nodeType":"YulIdentifier","src":"3474:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3447:6:26"},"nodeType":"YulFunctionCall","src":"3447:34:26"},"nodeType":"YulExpressionStatement","src":"3447:34:26"},{"nodeType":"YulVariableDeclaration","src":"3490:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3499:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3494:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3559:90:26","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3588:9:26"},{"name":"i","nodeType":"YulIdentifier","src":"3599:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3584:3:26"},"nodeType":"YulFunctionCall","src":"3584:17:26"},{"kind":"number","nodeType":"YulLiteral","src":"3603:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3580:3:26"},"nodeType":"YulFunctionCall","src":"3580:26:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3622:6:26"},{"name":"i","nodeType":"YulIdentifier","src":"3630:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3618:3:26"},"nodeType":"YulFunctionCall","src":"3618:14:26"},{"name":"_1","nodeType":"YulIdentifier","src":"3634:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3614:3:26"},"nodeType":"YulFunctionCall","src":"3614:23:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3608:5:26"},"nodeType":"YulFunctionCall","src":"3608:30:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3573:6:26"},"nodeType":"YulFunctionCall","src":"3573:66:26"},"nodeType":"YulExpressionStatement","src":"3573:66:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3520:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"3523:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3517:2:26"},"nodeType":"YulFunctionCall","src":"3517:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3531:19:26","statements":[{"nodeType":"YulAssignment","src":"3533:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3542:1:26"},{"name":"_1","nodeType":"YulIdentifier","src":"3545:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3538:3:26"},"nodeType":"YulFunctionCall","src":"3538:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3533:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"3513:3:26","statements":[]},"src":"3509:140:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3673:9:26"},{"name":"length","nodeType":"YulIdentifier","src":"3684:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3669:3:26"},"nodeType":"YulFunctionCall","src":"3669:22:26"},{"kind":"number","nodeType":"YulLiteral","src":"3693:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3665:3:26"},"nodeType":"YulFunctionCall","src":"3665:31:26"},{"kind":"number","nodeType":"YulLiteral","src":"3698:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3658:6:26"},"nodeType":"YulFunctionCall","src":"3658:42:26"},"nodeType":"YulExpressionStatement","src":"3658:42:26"},{"nodeType":"YulAssignment","src":"3709:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3725:9:26"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3744:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3752:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3740:3:26"},"nodeType":"YulFunctionCall","src":"3740:15:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3761:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3757:3:26"},"nodeType":"YulFunctionCall","src":"3757:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3736:3:26"},"nodeType":"YulFunctionCall","src":"3736:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3721:3:26"},"nodeType":"YulFunctionCall","src":"3721:45:26"},{"kind":"number","nodeType":"YulLiteral","src":"3768:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3717:3:26"},"nodeType":"YulFunctionCall","src":"3717:54:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3709:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3319:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3330:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3341:4:26","type":""}],"src":"3229:548:26"},{"body":{"nodeType":"YulBlock","src":"3876:203:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3886:26:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3906:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3900:5:26"},"nodeType":"YulFunctionCall","src":"3900:12:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3890:6:26","type":""}]},{"nodeType":"YulAssignment","src":"3921:32:26","value":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3940:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3947:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3936:3:26"},"nodeType":"YulFunctionCall","src":"3936:16:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3930:5:26"},"nodeType":"YulFunctionCall","src":"3930:23:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3921:5:26"}]},{"body":{"nodeType":"YulBlock","src":"3990:83:26","statements":[{"nodeType":"YulAssignment","src":"4004:59:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4017:5:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4032:1:26","type":"","value":"3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4039:4:26","type":"","value":"0x20"},{"name":"length","nodeType":"YulIdentifier","src":"4045:6:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4035:3:26"},"nodeType":"YulFunctionCall","src":"4035:17:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4028:3:26"},"nodeType":"YulFunctionCall","src":"4028:25:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4059:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4055:3:26"},"nodeType":"YulFunctionCall","src":"4055:6:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4024:3:26"},"nodeType":"YulFunctionCall","src":"4024:38:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4013:3:26"},"nodeType":"YulFunctionCall","src":"4013:50:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4004:5:26"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3968:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3976:4:26","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3965:2:26"},"nodeType":"YulFunctionCall","src":"3965:16:26"},"nodeType":"YulIf","src":"3962:111:26"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3856:5:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3866:5:26","type":""}],"src":"3782:297:26"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101606040523480156200001257600080fd5b506040518060400160405280600781526020016626bcaa37b5b2b760c91b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b81525081600390816200009b919062000373565b506004620000aa828262000373565b50620000bc91508390506006620001a4565b61012052620000cd816007620001a4565b61014052815160208084019190912060e052815190820120610100524660a0526200015b60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0525062000172600033620001dd565b6200019e7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633620001dd565b620004b4565b6000602083511015620001c457620001bc8362000282565b9050620001d7565b81620001d1848262000373565b5060ff90505b92915050565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff166200027e5760008281526005602090815260408083206001600160a01b03851684529091529020805460ff191660011790556200023d3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600080829050601f81511115620002b9578260405163305a27a960e01b8152600401620002b091906200043f565b60405180910390fd5b8051620002c6826200048f565b179392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002f957607f821691505b6020821081036200031a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200036e57600081815260208120601f850160051c81016020861015620003495750805b601f850160051c820191505b818110156200036a5782815560010162000355565b5050505b505050565b81516001600160401b038111156200038f576200038f620002ce565b620003a781620003a08454620002e4565b8462000320565b602080601f831160018114620003df5760008415620003c65750858301515b600019600386901b1c1916600185901b1785556200036a565b600085815260208120601f198616915b828110156200041057888601518255948401946001909101908401620003ef565b50858210156200042f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b818110156200046e5785810183015185820160400152820162000450565b506000604082860101526040601f19601f8301168501019250505092915050565b805160208083015191908110156200031a5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516127236200050f60003960006108f1015260006108c601526000611318015260006112f00152600061124b015260006112750152600061129f01526127236000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806370a082311161011a578063a217fddf116100ad578063d505accf1161007c578063d505accf1461049a578063d5391393146104ad578063d547741f146104d4578063dd62ed3e146104e7578063f1127ed8146104fa57600080fd5b8063a217fddf14610459578063a457c2d714610461578063a9059cbb14610474578063c3cda5201461048757600080fd5b806391d14854116100e957806391d148541461040c57806391ddadf41461041f57806395d89b411461043e5780639ab24eb01461044657600080fd5b806370a08231146103a25780637ecebe00146103cb57806384b0196e146103de5780638e539e8c146103f957600080fd5b80633644e5151161019d57806340c10f191161016c57806340c10f19146103085780634bf5d7e91461031b578063587cde1e146103235780635c19a95c146103675780636fcfff451461037a57600080fd5b80633644e515146102c757806336568abe146102cf57806339509351146102e25780633a46b1a8146102f557600080fd5b806323b872dd116101d957806323b872dd1461026d578063248a9ca3146102805780632f2ff15d146102a3578063313ce567146102b857600080fd5b806301ffc9a71461020b57806306fdde0314610233578063095ea7b31461024857806318160ddd1461025b575b600080fd5b61021e61021936600461221e565b610537565b60405190151581526020015b60405180910390f35b61023b61056e565b60405161022a9190612298565b61021e6102563660046122c7565b610600565b6002545b60405190815260200161022a565b61021e61027b3660046122f1565b610618565b61025f61028e36600461232d565b60009081526005602052604090206001015490565b6102b66102b1366004612346565b61063c565b005b6040516012815260200161022a565b61025f610666565b6102b66102dd366004612346565b610675565b61021e6102f03660046122c7565b6106f8565b61025f6103033660046122c7565b61071a565b6102b66103163660046122c7565b61079f565b61023b6107d3565b61034f610331366004612372565b6001600160a01b039081166000908152600a60205260409020541690565b6040516001600160a01b03909116815260200161022a565b6102b6610375366004612372565b61086b565b61038d610388366004612372565b610878565b60405163ffffffff909116815260200161022a565b61025f6103b0366004612372565b6001600160a01b031660009081526020819052604090205490565b61025f6103d9366004612372565b61089a565b6103e66108b8565b60405161022a979695949392919061238d565b61025f61040736600461232d565b610941565b61021e61041a366004612346565b6109a8565b6104276109d3565b60405165ffffffffffff909116815260200161022a565b61023b6109de565b61025f610454366004612372565b6109ed565b61025f600081565b61021e61046f3660046122c7565b610a6f565b61021e6104823660046122c7565b610aea565b6102b6610495366004612434565b610af8565b6102b66104a836600461248c565b610c2e565b61025f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102b66104e2366004612346565b610d92565b61025f6104f53660046124f6565b610db7565b61050d610508366004612520565b610de2565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161022a565b60006001600160e01b03198216637965db0b60e01b148061056857506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606003805461057d90612560565b80601f01602080910402602001604051908101604052809291908181526020018280546105a990612560565b80156105f65780601f106105cb576101008083540402835291602001916105f6565b820191906000526020600020905b8154815290600101906020018083116105d957829003601f168201915b5050505050905090565b60003361060e818585610e66565b5060019392505050565b600033610626858285610f8a565b610631858585611004565b506001949350505050565b600082815260056020526040902060010154610657816111ae565b61066183836111b8565b505050565b600061067061123e565b905090565b6001600160a01b03811633146106ea5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106f48282611369565b5050565b60003361060e81858561070b8383610db7565b61071591906125aa565b610e66565b60006107246109d3565b65ffffffffffff1682106107765760405162461bcd60e51b815260206004820152601960248201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b60448201526064016106e1565b6001600160a01b0383166000908152600b6020526040902061079890836113d0565b9392505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66107c9816111ae565b61066183836114b9565b6060436107de6109d3565b65ffffffffffff16146108335760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a2062726f6b656e20636c6f636b206d6f646500000060448201526064016106e1565b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b61087533826114c3565b50565b6001600160a01b0381166000908152600b60205260408120546105689061153c565b6001600160a01b038116600090815260086020526040812054610568565b6000606080828080836108ec7f000000000000000000000000000000000000000000000000000000000000000060066115a5565b6109177f000000000000000000000000000000000000000000000000000000000000000060076115a5565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b600061094b6109d3565b65ffffffffffff16821061099d5760405162461bcd60e51b815260206004820152601960248201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b60448201526064016106e1565b610568600c836113d0565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600061067043611650565b60606004805461057d90612560565b6001600160a01b0381166000908152600b60205260408120548015610a5c576001600160a01b0383166000908152600b6020526040902080546000198301908110610a3a57610a3a6125d3565b60009182526020909120015464010000000090046001600160e01b0316610a5f565b60005b6001600160e01b03169392505050565b60003381610a7d8286610db7565b905083811015610add5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106e1565b6106318286868403610e66565b60003361060e818585611004565b83421115610b485760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016106e1565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610bc290610bba9060a001604051602081830303815290604052805190602001206116b7565b8585856116e4565b9050610bcd8161170c565b8614610c1b5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016106e1565b610c2581886114c3565b50505050505050565b83421115610c7e5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016106e1565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610cad8c61170c565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610d08826116b7565b90506000610d18828787876116e4565b9050896001600160a01b0316816001600160a01b031614610d7b5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016106e1565b610d868a8a8a610e66565b50505050505050505050565b600082815260056020526040902060010154610dad816111ae565b6106618383611369565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600b60205260409020805463ffffffff8416908110610e2657610e266125d3565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6001600160a01b038316610ec85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106e1565b6001600160a01b038216610f295760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106e1565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610f968484610db7565b90506000198114610ffe5781811015610ff15760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106e1565b610ffe8484848403610e66565b50505050565b6001600160a01b0383166110685760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106e1565b6001600160a01b0382166110ca5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106e1565b6001600160a01b038316600090815260208190526040902054818110156111425760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106e1565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610ffe848484611734565b610875813361173f565b6111c282826109a8565b6106f45760008281526005602090815260408083206001600160a01b03851684529091529020805460ff191660011790556111fa3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561129757507f000000000000000000000000000000000000000000000000000000000000000046145b156112c157507f000000000000000000000000000000000000000000000000000000000000000090565b610670604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b61137382826109a8565b156106f45760008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b81546000908181600581111561142a5760006113eb84611798565b6113f590856125e9565b600088815260209020909150869082015463ffffffff16111561141a57809150611428565b6114258160016125aa565b92505b505b8082101561147757600061143e8383611880565b600088815260209020909150869082015463ffffffff16111561146357809150611471565b61146e8160016125aa565b92505b5061142a565b80156114a3576000868152602090208101600019015464010000000090046001600160e01b03166114a6565b60005b6001600160e01b03169695505050505050565b6106f4828261189b565b6001600160a01b038281166000818152600a60208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610ffe828483611925565b600063ffffffff8211156115a15760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016106e1565b5090565b606060ff83146115bf576115b883611a62565b9050610568565b8180546115cb90612560565b80601f01602080910402602001604051908101604052809291908181526020018280546115f790612560565b80156116445780601f1061161957610100808354040283529160200191611644565b820191906000526020600020905b81548152906001019060200180831161162757829003601f168201915b50505050509050610568565b600065ffffffffffff8211156115a15760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b60648201526084016106e1565b60006105686116c461123e565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060006116f587878787611aa1565b9150915061170281611b65565b5095945050505050565b6001600160a01b03811660009081526008602052604090208054600181018255905b50919050565b610661838383611caf565b61174982826109a8565b6106f45761175681611ce1565b611761836020611cf3565b6040516020016117729291906125fc565b60408051601f198184030181529082905262461bcd60e51b82526106e191600401612298565b6000816000036117aa57506000919050565b600060016117b784611e8f565b901c6001901b905060018184816117d0576117d0612671565b048201901c905060018184816117e8576117e8612671565b048201901c9050600181848161180057611800612671565b048201901c9050600181848161181857611818612671565b048201901c9050600181848161183057611830612671565b048201901c9050600181848161184857611848612671565b048201901c9050600181848161186057611860612671565b048201901c90506107988182858161187a5761187a612671565b04611f23565b600061188f6002848418612687565b610798908484166125aa565b6118a58282611f39565b6002546001600160e01b0310156119175760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084016106e1565b610ffe600c6120008361200c565b816001600160a01b0316836001600160a01b0316141580156119475750600081115b15610661576001600160a01b038316156119d5576001600160a01b0383166000908152600b602052604081208190611982906121818561200c565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516119ca929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610661576001600160a01b0382166000908152600b602052604081208190611a0b906120008561200c565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611a53929190918252602082015260400190565b60405180910390a25050505050565b60606000611a6f8361218d565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611ad85750600090506003611b5c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611b2c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611b5557600060019250925050611b5c565b9150600090505b94509492505050565b6000816004811115611b7957611b796126a9565b03611b815750565b6001816004811115611b9557611b956126a9565b03611be25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106e1565b6002816004811115611bf657611bf66126a9565b03611c435760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106e1565b6003816004811115611c5757611c576126a9565b036108755760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106e1565b6001600160a01b038381166000908152600a602052604080822054858416835291205461066192918216911683611925565b60606105686001600160a01b03831660145b60606000611d028360026126bf565b611d0d9060026125aa565b67ffffffffffffffff811115611d2557611d256125bd565b6040519080825280601f01601f191660200182016040528015611d4f576020820181803683370190505b509050600360fc1b81600081518110611d6a57611d6a6125d3565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611d9957611d996125d3565b60200101906001600160f81b031916908160001a9053506000611dbd8460026126bf565b611dc89060016125aa565b90505b6001811115611e40576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611dfc57611dfc6125d3565b1a60f81b828281518110611e1257611e126125d3565b60200101906001600160f81b031916908160001a90535060049490941c93611e39816126d6565b9050611dcb565b5083156107985760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106e1565b600080608083901c15611ea457608092831c92015b604083901c15611eb657604092831c92015b602083901c15611ec857602092831c92015b601083901c15611eda57601092831c92015b600883901c15611eec57600892831c92015b600483901c15611efe57600492831c92015b600283901c15611f1057600292831c92015b600183901c156105685760010192915050565b6000818310611f325781610798565b5090919050565b6001600160a01b038216611f8f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106e1565b8060026000828254611fa191906125aa565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36106f460008383611734565b600061079882846125aa565b825460009081908181156120595760008781526020902082016000190160408051808201909152905463ffffffff8116825264010000000090046001600160e01b0316602082015261206e565b60408051808201909152600080825260208201525b905080602001516001600160e01b0316935061208e84868863ffffffff16565b92506000821180156120b857506120a36109d3565b65ffffffffffff16816000015163ffffffff16145b156120fd576120c6836121b5565b60008881526020902083016000190180546001600160e01b03929092166401000000000263ffffffff909216919091179055612177565b8660405180604001604052806121216121146109d3565b65ffffffffffff1661153c565b63ffffffff168152602001612135866121b5565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b600061079882846125e9565b600060ff8216601f81111561056857604051632cd44ac360e21b815260040160405180910390fd5b60006001600160e01b038211156115a15760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016106e1565b60006020828403121561223057600080fd5b81356001600160e01b03198116811461079857600080fd5b60005b8381101561226357818101518382015260200161224b565b50506000910152565b60008151808452612284816020860160208601612248565b601f01601f19169290920160200192915050565b602081526000610798602083018461226c565b80356001600160a01b03811681146122c257600080fd5b919050565b600080604083850312156122da57600080fd5b6122e3836122ab565b946020939093013593505050565b60008060006060848603121561230657600080fd5b61230f846122ab565b925061231d602085016122ab565b9150604084013590509250925092565b60006020828403121561233f57600080fd5b5035919050565b6000806040838503121561235957600080fd5b82359150612369602084016122ab565b90509250929050565b60006020828403121561238457600080fd5b610798826122ab565b60ff60f81b881681526000602060e0818401526123ad60e084018a61226c565b83810360408501526123bf818a61226c565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015612411578351835292840192918401916001016123f5565b50909c9b505050505050505050505050565b803560ff811681146122c257600080fd5b60008060008060008060c0878903121561244d57600080fd5b612456876122ab565b9550602087013594506040870135935061247260608801612423565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a0312156124a757600080fd5b6124b0886122ab565b96506124be602089016122ab565b955060408801359450606088013593506124da60808901612423565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561250957600080fd5b612512836122ab565b9150612369602084016122ab565b6000806040838503121561253357600080fd5b61253c836122ab565b9150602083013563ffffffff8116811461255557600080fd5b809150509250929050565b600181811c9082168061257457607f821691505b60208210810361172e57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561056857610568612594565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8181038181111561056857610568612594565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612634816017850160208801612248565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612665816028840160208801612248565b01602801949350505050565b634e487b7160e01b600052601260045260246000fd5b6000826126a457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b808202811582820484141761056857610568612594565b6000816126e5576126e5612594565b50600019019056fea26469706673582212202608697cc28008a41ec14e7b37325787d50700ba64c484f75a68a89fbbd1a59e64736f6c63430008130033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x26BCAA37B5B2B7 PUSH1 0xC9 SHL DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x26BCAA37B5B2B7 PUSH1 0xC9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4D544B PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x9B SWAP2 SWAP1 PUSH3 0x373 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0xAA DUP3 DUP3 PUSH3 0x373 JUMP JUMPDEST POP PUSH3 0xBC SWAP2 POP DUP4 SWAP1 POP PUSH1 0x6 PUSH3 0x1A4 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0xCD DUP2 PUSH1 0x7 PUSH3 0x1A4 JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0x15B PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE POP PUSH3 0x172 PUSH1 0x0 CALLER PUSH3 0x1DD JUMP JUMPDEST PUSH3 0x19E PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH3 0x1DD JUMP JUMPDEST PUSH3 0x4B4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x1C4 JUMPI PUSH3 0x1BC DUP4 PUSH3 0x282 JUMP JUMPDEST SWAP1 POP PUSH3 0x1D7 JUMP JUMPDEST DUP2 PUSH3 0x1D1 DUP5 DUP3 PUSH3 0x373 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x27E JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x23D CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x2B9 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2B0 SWAP2 SWAP1 PUSH3 0x43F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH3 0x2C6 DUP3 PUSH3 0x48F JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x31A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x36E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x349 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x36A JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x355 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x38F JUMPI PUSH3 0x38F PUSH3 0x2CE JUMP JUMPDEST PUSH3 0x3A7 DUP2 PUSH3 0x3A0 DUP5 SLOAD PUSH3 0x2E4 JUMP JUMPDEST DUP5 PUSH3 0x320 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3DF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x3C6 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x36A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x410 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x3EF JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x42F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x46E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH3 0x450 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH3 0x31A JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x2723 PUSH3 0x50F PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x8F1 ADD MSTORE PUSH1 0x0 PUSH2 0x8C6 ADD MSTORE PUSH1 0x0 PUSH2 0x1318 ADD MSTORE PUSH1 0x0 PUSH2 0x12F0 ADD MSTORE PUSH1 0x0 PUSH2 0x124B ADD MSTORE PUSH1 0x0 PUSH2 0x1275 ADD MSTORE PUSH1 0x0 PUSH2 0x129F ADD MSTORE PUSH2 0x2723 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x4FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x221E JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x2298 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x22C7 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x21E PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x22F1 JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2B6 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2346 JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x25F PUSH2 0x666 JUMP JUMPDEST PUSH2 0x2B6 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x2346 JUMP JUMPDEST PUSH2 0x675 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x2F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x22C7 JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x22C7 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST PUSH2 0x2B6 PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x22C7 JUMP JUMPDEST PUSH2 0x79F JUMP JUMPDEST PUSH2 0x23B PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0x34F PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x2B6 PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x2372 JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST PUSH2 0x38D PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x2372 JUMP JUMPDEST PUSH2 0x878 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x25F PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2372 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST PUSH2 0x3E6 PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x238D JUMP JUMPDEST PUSH2 0x25F PUSH2 0x407 CALLDATASIZE PUSH1 0x4 PUSH2 0x232D JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x41A CALLDATASIZE PUSH1 0x4 PUSH2 0x2346 JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x427 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x23B PUSH2 0x9DE JUMP JUMPDEST PUSH2 0x25F PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x2372 JUMP JUMPDEST PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x25F PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x46F CALLDATASIZE PUSH1 0x4 PUSH2 0x22C7 JUMP JUMPDEST PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x21E PUSH2 0x482 CALLDATASIZE PUSH1 0x4 PUSH2 0x22C7 JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x2B6 PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x2434 JUMP JUMPDEST PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x2B6 PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x248C JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x25F PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x2B6 PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2346 JUMP JUMPDEST PUSH2 0xD92 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x4F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x24F6 JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x50D PUSH2 0x508 CALLDATASIZE PUSH1 0x4 PUSH2 0x2520 JUMP JUMPDEST PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x22A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x568 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x57D SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5A9 SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5CB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5F6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5D9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x60E DUP2 DUP6 DUP6 PUSH2 0xE66 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x626 DUP6 DUP3 DUP6 PUSH2 0xF8A JUMP JUMPDEST PUSH2 0x631 DUP6 DUP6 DUP6 PUSH2 0x1004 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x657 DUP2 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x661 DUP4 DUP4 PUSH2 0x11B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x670 PUSH2 0x123E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F4 DUP3 DUP3 PUSH2 0x1369 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x60E DUP2 DUP6 DUP6 PUSH2 0x70B DUP4 DUP4 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x724 PUSH2 0x9D3 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x4552433230566F7465733A20667574757265206C6F6F6B757 PUSH1 0x3C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x798 SWAP1 DUP4 PUSH2 0x13D0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x7C9 DUP2 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x661 DUP4 DUP4 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x60 NUMBER PUSH2 0x7DE PUSH2 0x9D3 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A2062726F6B656E20636C6F636B206D6F6465000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x875 CALLER DUP3 PUSH2 0x14C3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x568 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x568 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP3 DUP1 DUP1 DUP4 PUSH2 0x8EC PUSH32 0x0 PUSH1 0x6 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0x917 PUSH32 0x0 PUSH1 0x7 PUSH2 0x15A5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94B PUSH2 0x9D3 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x4552433230566F7465733A20667574757265206C6F6F6B757 PUSH1 0x3C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x568 PUSH1 0xC DUP4 PUSH2 0x13D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x670 NUMBER PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x57D SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xA5C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT DUP4 ADD SWAP1 DUP2 LT PUSH2 0xA3A JUMPI PUSH2 0xA3A PUSH2 0x25D3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0xA7D DUP3 DUP7 PUSH2 0xDB7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xADD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x631 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x60E DUP2 DUP6 DUP6 PUSH2 0x1004 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xB48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xBC2 SWAP1 PUSH2 0xBBA SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x16B7 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x16E4 JUMP JUMPDEST SWAP1 POP PUSH2 0xBCD DUP2 PUSH2 0x170C JUMP JUMPDEST DUP7 EQ PUSH2 0xC1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0xC25 DUP2 DUP9 PUSH2 0x14C3 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xC7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xCAD DUP13 PUSH2 0x170C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xD08 DUP3 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD18 DUP3 DUP8 DUP8 DUP8 PUSH2 0x16E4 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0xD86 DUP11 DUP11 DUP11 PUSH2 0xE66 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xDAD DUP2 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x661 DUP4 DUP4 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 LT PUSH2 0xE26 JUMPI PUSH2 0xE26 PUSH2 0x25D3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF96 DUP5 DUP5 PUSH2 0xDB7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xFFE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0xFFE DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xE66 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1068 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1142 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xFFE DUP5 DUP5 DUP5 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x875 DUP2 CALLER PUSH2 0x173F JUMP JUMPDEST PUSH2 0x11C2 DUP3 DUP3 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x11FA CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x1297 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x12C1 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x670 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1373 DUP3 DUP3 PUSH2 0x9A8 JUMP JUMPDEST ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x142A JUMPI PUSH1 0x0 PUSH2 0x13EB DUP5 PUSH2 0x1798 JUMP JUMPDEST PUSH2 0x13F5 SWAP1 DUP6 PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP7 SWAP1 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x141A JUMPI DUP1 SWAP2 POP PUSH2 0x1428 JUMP JUMPDEST PUSH2 0x1425 DUP2 PUSH1 0x1 PUSH2 0x25AA JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1477 JUMPI PUSH1 0x0 PUSH2 0x143E DUP4 DUP4 PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP7 SWAP1 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1463 JUMPI DUP1 SWAP2 POP PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x146E DUP2 PUSH1 0x1 PUSH2 0x25AA JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x142A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14A3 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x6F4 DUP3 DUP3 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0xFFE DUP3 DUP5 DUP4 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x15A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x322062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x15BF JUMPI PUSH2 0x15B8 DUP4 PUSH2 0x1A62 JUMP JUMPDEST SWAP1 POP PUSH2 0x568 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x15CB SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15F7 SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1644 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1619 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1644 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1627 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x568 JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2034 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x382062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x568 PUSH2 0x16C4 PUSH2 0x123E JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x16F5 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1AA1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1702 DUP2 PUSH2 0x1B65 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x661 DUP4 DUP4 DUP4 PUSH2 0x1CAF JUMP JUMPDEST PUSH2 0x1749 DUP3 DUP3 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x6F4 JUMPI PUSH2 0x1756 DUP2 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0x1761 DUP4 PUSH1 0x20 PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1772 SWAP3 SWAP2 SWAP1 PUSH2 0x25FC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x6E1 SWAP2 PUSH1 0x4 ADD PUSH2 0x2298 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0x17AA JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x17B7 DUP5 PUSH2 0x1E8F JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x17D0 JUMPI PUSH2 0x17D0 PUSH2 0x2671 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x17E8 JUMPI PUSH2 0x17E8 PUSH2 0x2671 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1800 JUMPI PUSH2 0x1800 PUSH2 0x2671 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1818 JUMPI PUSH2 0x1818 PUSH2 0x2671 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1830 JUMPI PUSH2 0x1830 PUSH2 0x2671 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1848 JUMPI PUSH2 0x1848 PUSH2 0x2671 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1860 JUMPI PUSH2 0x1860 PUSH2 0x2671 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x798 DUP2 DUP3 DUP6 DUP2 PUSH2 0x187A JUMPI PUSH2 0x187A PUSH2 0x2671 JUMP JUMPDEST DIV PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x188F PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x2687 JUMP JUMPDEST PUSH2 0x798 SWAP1 DUP5 DUP5 AND PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x18A5 DUP3 DUP3 PUSH2 0x1F39 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB LT ISZERO PUSH2 0x1917 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x766572666C6F77696E6720766F746573 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0xFFE PUSH1 0xC PUSH2 0x2000 DUP4 PUSH2 0x200C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1947 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x661 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x19D5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1982 SWAP1 PUSH2 0x2181 DUP6 PUSH2 0x200C JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x19CA SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x661 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1A0B SWAP1 PUSH2 0x2000 DUP6 PUSH2 0x200C JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A53 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1A6F DUP4 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1AD8 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B55 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1B5C JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B79 JUMPI PUSH2 0x1B79 PUSH2 0x26A9 JUMP JUMPDEST SUB PUSH2 0x1B81 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B95 JUMPI PUSH2 0x1B95 PUSH2 0x26A9 JUMP JUMPDEST SUB PUSH2 0x1BE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1BF6 JUMPI PUSH2 0x1BF6 PUSH2 0x26A9 JUMP JUMPDEST SUB PUSH2 0x1C43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1C57 JUMPI PUSH2 0x1C57 PUSH2 0x26A9 JUMP JUMPDEST SUB PUSH2 0x875 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x661 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x568 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1D02 DUP4 PUSH1 0x2 PUSH2 0x26BF JUMP JUMPDEST PUSH2 0x1D0D SWAP1 PUSH1 0x2 PUSH2 0x25AA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D25 JUMPI PUSH2 0x1D25 PUSH2 0x25BD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D4F JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1D6A JUMPI PUSH2 0x1D6A PUSH2 0x25D3 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1D99 JUMPI PUSH2 0x1D99 PUSH2 0x25D3 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1DBD DUP5 PUSH1 0x2 PUSH2 0x26BF JUMP JUMPDEST PUSH2 0x1DC8 SWAP1 PUSH1 0x1 PUSH2 0x25AA JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1E40 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1DFC JUMPI PUSH2 0x1DFC PUSH2 0x25D3 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E12 JUMPI PUSH2 0x1E12 PUSH2 0x25D3 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1E39 DUP2 PUSH2 0x26D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DCB JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 SWAP1 SHR ISZERO PUSH2 0x1EA4 JUMPI PUSH1 0x80 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x40 DUP4 SWAP1 SHR ISZERO PUSH2 0x1EB6 JUMPI PUSH1 0x40 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x20 DUP4 SWAP1 SHR ISZERO PUSH2 0x1EC8 JUMPI PUSH1 0x20 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x10 DUP4 SWAP1 SHR ISZERO PUSH2 0x1EDA JUMPI PUSH1 0x10 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x8 DUP4 SWAP1 SHR ISZERO PUSH2 0x1EEC JUMPI PUSH1 0x8 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x4 DUP4 SWAP1 SHR ISZERO PUSH2 0x1EFE JUMPI PUSH1 0x4 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x2 DUP4 SWAP1 SHR ISZERO PUSH2 0x1F10 JUMPI PUSH1 0x2 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x1 DUP4 SWAP1 SHR ISZERO PUSH2 0x568 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1F32 JUMPI DUP2 PUSH2 0x798 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1FA1 SWAP2 SWAP1 PUSH2 0x25AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x6F4 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1734 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x798 DUP3 DUP5 PUSH2 0x25AA JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 DUP2 ISZERO PUSH2 0x2059 JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP3 ADD PUSH1 0x0 NOT ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x206E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP4 POP PUSH2 0x208E DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x20B8 JUMPI POP PUSH2 0x20A3 PUSH2 0x9D3 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x20FD JUMPI PUSH2 0x20C6 DUP4 PUSH2 0x21B5 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP4 ADD PUSH1 0x0 NOT ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH5 0x100000000 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2177 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2121 PUSH2 0x2114 PUSH2 0x9D3 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x153C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2135 DUP7 PUSH2 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD SWAP5 SWAP1 SWAP4 ADD MLOAD SWAP1 SWAP2 AND PUSH5 0x100000000 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 ADD SSTORE JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x798 DUP3 DUP5 PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x568 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP3 GT ISZERO PUSH2 0x15A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32342062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2263 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x224B JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2284 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2248 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x798 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x226C JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x22C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22E3 DUP4 PUSH2 0x22AB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x230F DUP5 PUSH2 0x22AB JUMP JUMPDEST SWAP3 POP PUSH2 0x231D PUSH1 0x20 DUP6 ADD PUSH2 0x22AB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x233F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2369 PUSH1 0x20 DUP5 ADD PUSH2 0x22AB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x798 DUP3 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0x23AD PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x226C JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x23BF DUP2 DUP11 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2411 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x23F5 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x22C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x244D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2456 DUP8 PUSH2 0x22AB JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2472 PUSH1 0x60 DUP9 ADD PUSH2 0x2423 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x24A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24B0 DUP9 PUSH2 0x22AB JUMP JUMPDEST SWAP7 POP PUSH2 0x24BE PUSH1 0x20 DUP10 ADD PUSH2 0x22AB JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x24DA PUSH1 0x80 DUP10 ADD PUSH2 0x2423 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2512 DUP4 PUSH2 0x22AB JUMP JUMPDEST SWAP2 POP PUSH2 0x2369 PUSH1 0x20 DUP5 ADD PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x253C DUP4 PUSH2 0x22AB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2574 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x172E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x568 JUMPI PUSH2 0x568 PUSH2 0x2594 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x568 JUMPI PUSH2 0x568 PUSH2 0x2594 JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x2634 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2248 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x2665 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2248 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x26A4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x568 JUMPI PUSH2 0x568 PUSH2 0x2594 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x26E5 JUMPI PUSH2 0x26E5 PUSH2 0x2594 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 ADDMOD PUSH10 0x7CC28008A41EC14E7B37 ORIGIN JUMPI DUP8 0xD5 SMOD STOP 0xBA PUSH5 0xC484F75A68 0xA8 SWAP16 0xBB 0xD1 0xA5 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"411:905:25:-:0;;;548:155;;;;;;;;;;1817:52:8;;;;;;;;;;;;;-1:-1:-1;;;1817:52:8;;;1856:4;3178:431:19;;;;;;;;;;;;;-1:-1:-1;;;3178:431:19;;;1980:113:6;;;;;;;;;;;;;-1:-1:-1;;;1980:113:6;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:6;;;2054:5;2046;:13;;;;;;:::i;:::-;-1:-1:-1;2069:7:6;:17;2079:7;2069;:17;:::i;:::-;-1:-1:-1;3251:45:19;;-1:-1:-1;3251:4:19;;-1:-1:-1;3282:13:19;3251:30;:45::i;:::-;3243:53;;3317:51;:7;3351:16;3317:33;:51::i;:::-;3306:62;;3392:22;;;;;;;;;;3378:36;;3441:25;;;;;;3424:42;;3494:13;3477:30;;3542:23;4077:11;;4090:14;;4054:81;;;1929:95;4054:81;;;2994:25:26;3035:18;;;3028:34;;;;3078:18;;;3071:34;4106:13:19;3121:18:26;;;3114:34;4129:4:19;3164:19:26;;;3157:61;4018:7:19;;2966:19:26;;4054:81:19;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;3542:23;3517:48;;-1:-1:-1;;3597:4:19;3575:27;;-1:-1:-1;615:42:25::2;2198:4:0;646:10:25;615;:42::i;:::-;663:35;519:24;687:10;663;:35::i;:::-;411:905:::0;;2895:341:15;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;:20::i;:::-;3058:27;;;;3014:216;3142:5;3116:46;3157:5;3142;3116:46;:::i;:::-;-1:-1:-1;1371:66:15;;-1:-1:-1;3014:216:15;2895:341;;;;:::o;7587:233:0:-;3107:4;3130:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;7665:149;;7708:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7708:29:0;;;;;;;;;:36;;-1:-1:-1;;7708:36:0;7740:4;7708:36;;;7790:12;719:10:13;;640:96;7790:12:0;-1:-1:-1;;;;;7763:40:0;7781:7;-1:-1:-1;;;;;7763:40:0;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;1689:286:15:-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;-1:-1:-1;;;1860:18:15;;;;;;;;:::i;:::-;;;;;;;;1817:72;1955:11;;1938:13;1955:4;1938:13;:::i;:::-;1930:36;;1689:286;-1:-1:-1;;;1689:286:15:o;14:127:26:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:26;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:26;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:26;;;2580:26;2531:89;-1:-1:-1;;1335:1:26;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:26;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:26;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:26;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:26:o;3229:548::-;3341:4;3370:2;3399;3388:9;3381:21;3431:6;3425:13;3474:6;3469:2;3458:9;3454:18;3447:34;3499:1;3509:140;3523:6;3520:1;3517:13;3509:140;;;3618:14;;;3614:23;;3608:30;3584:17;;;3603:2;3580:26;3573:66;3538:10;;3509:140;;;3513:3;3698:1;3693:2;3684:6;3673:9;3669:22;3665:31;3658:42;3768:2;3761;3757:7;3752:2;3744:6;3740:15;3736:29;3725:9;3721:45;3717:54;3709:62;;;;3229:548;;;;:::o;3782:297::-;3900:12;;3947:4;3936:16;;;3930:23;;3900:12;3965:16;;3962:111;;;-1:-1:-1;;4039:4:26;4035:17;;;;4032:1;4028:25;4024:38;4013:50;;3782:297;-1:-1:-1;3782:297:26:o;:::-;411:905:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CLOCK_MODE_1421":{"entryPoint":2003,"id":1421,"parameterSlots":0,"returnSlots":1},"@DEFAULT_ADMIN_ROLE_27":{"entryPoint":null,"id":27,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_1322":{"entryPoint":1638,"id":1322,"parameterSlots":0,"returnSlots":1},"@MINTER_ROLE_5942":{"entryPoint":null,"id":5942,"parameterSlots":0,"returnSlots":0},"@_add_2056":{"entryPoint":8192,"id":2056,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_1101":{"entryPoint":null,"id":1101,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_1831":{"entryPoint":7343,"id":1831,"parameterSlots":3,"returnSlots":0},"@_afterTokenTransfer_6002":{"entryPoint":5940,"id":6002,"parameterSlots":3,"returnSlots":0},"@_approve_1036":{"entryPoint":3686,"id":1036,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1090":{"entryPoint":null,"id":1090,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_3307":{"entryPoint":null,"id":3307,"parameterSlots":0,"returnSlots":1},"@_checkRole_131":{"entryPoint":5951,"id":131,"parameterSlots":2,"returnSlots":0},"@_checkRole_92":{"entryPoint":4526,"id":92,"parameterSlots":1,"returnSlots":0},"@_checkpointsLookup_1659":{"entryPoint":5072,"id":1659,"parameterSlots":2,"returnSlots":1},"@_delegate_1870":{"entryPoint":5315,"id":1870,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_3286":{"entryPoint":4670,"id":3286,"parameterSlots":0,"returnSlots":1},"@_grantRole_283":{"entryPoint":4536,"id":283,"parameterSlots":2,"returnSlots":0},"@_hashTypedDataV4_3323":{"entryPoint":5815,"id":3323,"parameterSlots":1,"returnSlots":1},"@_maxSupply_1746":{"entryPoint":null,"id":1746,"parameterSlots":0,"returnSlots":1},"@_mint_1778":{"entryPoint":6299,"id":1778,"parameterSlots":2,"returnSlots":0},"@_mint_6020":{"entryPoint":5305,"id":6020,"parameterSlots":2,"returnSlots":0},"@_mint_919":{"entryPoint":7993,"id":919,"parameterSlots":2,"returnSlots":0},"@_moveVotingPower_1941":{"entryPoint":6437,"id":1941,"parameterSlots":3,"returnSlots":0},"@_msgSender_2162":{"entryPoint":null,"id":2162,"parameterSlots":0,"returnSlots":1},"@_revokeRole_314":{"entryPoint":4969,"id":314,"parameterSlots":2,"returnSlots":0},"@_spendAllowance_1079":{"entryPoint":3978,"id":1079,"parameterSlots":3,"returnSlots":0},"@_subtract_2070":{"entryPoint":8577,"id":2070,"parameterSlots":2,"returnSlots":1},"@_throwError_2855":{"entryPoint":7013,"id":2855,"parameterSlots":1,"returnSlots":0},"@_transfer_862":{"entryPoint":4100,"id":862,"parameterSlots":3,"returnSlots":0},"@_unsafeAccess_2085":{"entryPoint":null,"id":2085,"parameterSlots":2,"returnSlots":1},"@_useNonce_1351":{"entryPoint":5900,"id":1351,"parameterSlots":1,"returnSlots":1},"@_writeCheckpoint_2042":{"entryPoint":8204,"id":2042,"parameterSlots":3,"returnSlots":2},"@allowance_657":{"entryPoint":3511,"id":657,"parameterSlots":2,"returnSlots":1},"@approve_682":{"entryPoint":1536,"id":682,"parameterSlots":2,"returnSlots":1},"@average_3473":{"entryPoint":6272,"id":3473,"parameterSlots":2,"returnSlots":1},"@balanceOf_614":{"entryPoint":null,"id":614,"parameterSlots":1,"returnSlots":1},"@byteLength_2363":{"entryPoint":8589,"id":2363,"parameterSlots":1,"returnSlots":1},"@checkpoints_1439":{"entryPoint":3554,"id":1439,"parameterSlots":2,"returnSlots":1},"@clock_1402":{"entryPoint":2515,"id":1402,"parameterSlots":0,"returnSlots":1},"@current_2190":{"entryPoint":null,"id":2190,"parameterSlots":1,"returnSlots":1},"@decimals_590":{"entryPoint":null,"id":590,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_785":{"entryPoint":2671,"id":785,"parameterSlots":2,"returnSlots":1},"@delegateBySig_1733":{"entryPoint":2808,"id":1733,"parameterSlots":6,"returnSlots":0},"@delegate_1673":{"entryPoint":2155,"id":1673,"parameterSlots":1,"returnSlots":0},"@delegates_1470":{"entryPoint":null,"id":1470,"parameterSlots":1,"returnSlots":1},"@eip712Domain_3370":{"entryPoint":2232,"id":3370,"parameterSlots":0,"returnSlots":7},"@getPastTotalSupply_1552":{"entryPoint":2369,"id":1552,"parameterSlots":1,"returnSlots":1},"@getPastVotes_1529":{"entryPoint":1818,"id":1529,"parameterSlots":2,"returnSlots":1},"@getRoleAdmin_146":{"entryPoint":null,"id":146,"parameterSlots":1,"returnSlots":1},"@getVotes_1502":{"entryPoint":2541,"id":1502,"parameterSlots":1,"returnSlots":1},"@grantRole_166":{"entryPoint":1596,"id":166,"parameterSlots":2,"returnSlots":0},"@hasRole_79":{"entryPoint":2472,"id":79,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_744":{"entryPoint":1784,"id":744,"parameterSlots":2,"returnSlots":1},"@increment_2204":{"entryPoint":null,"id":2204,"parameterSlots":1,"returnSlots":0},"@log2_3945":{"entryPoint":7823,"id":3945,"parameterSlots":1,"returnSlots":1},"@min_3450":{"entryPoint":7971,"id":3450,"parameterSlots":2,"returnSlots":1},"@mint_5981":{"entryPoint":1951,"id":5981,"parameterSlots":2,"returnSlots":0},"@name_570":{"entryPoint":1390,"id":570,"parameterSlots":0,"returnSlots":1},"@nonces_1311":{"entryPoint":2202,"id":1311,"parameterSlots":1,"returnSlots":1},"@numCheckpoints_1456":{"entryPoint":2168,"id":1456,"parameterSlots":1,"returnSlots":1},"@permit_1295":{"entryPoint":3118,"id":1295,"parameterSlots":7,"returnSlots":0},"@recover_3102":{"entryPoint":5860,"id":3102,"parameterSlots":4,"returnSlots":1},"@renounceRole_209":{"entryPoint":1653,"id":209,"parameterSlots":2,"returnSlots":0},"@revokeRole_186":{"entryPoint":3474,"id":186,"parameterSlots":2,"returnSlots":0},"@sqrt_3777":{"entryPoint":6040,"id":3777,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3394":{"entryPoint":null,"id":3394,"parameterSlots":1,"returnSlots":1},"@supportsInterface_60":{"entryPoint":1335,"id":60,"parameterSlots":1,"returnSlots":1},"@symbol_580":{"entryPoint":2526,"id":580,"parameterSlots":0,"returnSlots":1},"@toHexString_2755":{"entryPoint":7411,"id":2755,"parameterSlots":2,"returnSlots":1},"@toHexString_2775":{"entryPoint":7393,"id":2775,"parameterSlots":1,"returnSlots":1},"@toStringWithFallback_2430":{"entryPoint":5541,"id":2430,"parameterSlots":2,"returnSlots":1},"@toString_2331":{"entryPoint":6754,"id":2331,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3146":{"entryPoint":null,"id":3146,"parameterSlots":2,"returnSlots":1},"@toUint224_4376":{"entryPoint":8629,"id":4376,"parameterSlots":1,"returnSlots":1},"@toUint32_4976":{"entryPoint":5436,"id":4976,"parameterSlots":1,"returnSlots":1},"@toUint48_4926":{"entryPoint":5712,"id":4926,"parameterSlots":1,"returnSlots":1},"@totalSupply_600":{"entryPoint":null,"id":600,"parameterSlots":0,"returnSlots":1},"@transferFrom_715":{"entryPoint":1560,"id":715,"parameterSlots":3,"returnSlots":1},"@transfer_639":{"entryPoint":2794,"id":639,"parameterSlots":2,"returnSlots":1},"@tryRecover_3069":{"entryPoint":6817,"id":3069,"parameterSlots":4,"returnSlots":2},"abi_decode_address":{"entryPoint":8875,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9074,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9462,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8945,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":9356,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8903,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":9268,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_addresst_uint32":{"entryPoint":9504,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":9005,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":9030,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":8734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint8":{"entryPoint":9251,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string":{"entryPoint":8812,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9724,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9101,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8856,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Checkpoint_$1369_memory_ptr__to_t_struct$_Checkpoint_$1369_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9642,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":9863,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":9919,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":9705,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":8776,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":9942,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":9568,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9620,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":9841,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":9897,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":9683,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9661,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:21193:26","statements":[{"nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:217:26","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:26"},"nodeType":"YulFunctionCall","src":"131:12:26"},"nodeType":"YulExpressionStatement","src":"131:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:26"},"nodeType":"YulFunctionCall","src":"100:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:26"},"nodeType":"YulFunctionCall","src":"96:32:26"},"nodeType":"YulIf","src":"93:52:26"},{"nodeType":"YulVariableDeclaration","src":"154:36:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:26"},"nodeType":"YulFunctionCall","src":"167:23:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:26"},"nodeType":"YulFunctionCall","src":"256:12:26"},"nodeType":"YulExpressionStatement","src":"256:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"234:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"239:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"230:3:26"},"nodeType":"YulFunctionCall","src":"230:20:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:26"},"nodeType":"YulFunctionCall","src":"219:32:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:26"},"nodeType":"YulFunctionCall","src":"209:43:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:26"},"nodeType":"YulFunctionCall","src":"202:51:26"},"nodeType":"YulIf","src":"199:71:26"},{"nodeType":"YulAssignment","src":"279:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:26"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:26","type":""}],"src":"14:286:26"},{"body":{"nodeType":"YulBlock","src":"400:92:26","statements":[{"nodeType":"YulAssignment","src":"410:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"433:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"418:3:26"},"nodeType":"YulFunctionCall","src":"418:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"410:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"452:9:26"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:26"},"nodeType":"YulFunctionCall","src":"470:14:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:26"},"nodeType":"YulFunctionCall","src":"463:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:26"},"nodeType":"YulFunctionCall","src":"445:41:26"},"nodeType":"YulExpressionStatement","src":"445:41:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"380:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"391:4:26","type":""}],"src":"305:187:26"},{"body":{"nodeType":"YulBlock","src":"563:184:26","statements":[{"nodeType":"YulVariableDeclaration","src":"573:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"582:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"577:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"642:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"667:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"672:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"663:3:26"},"nodeType":"YulFunctionCall","src":"663:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"686:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"691:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"682:3:26"},"nodeType":"YulFunctionCall","src":"682:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"676:5:26"},"nodeType":"YulFunctionCall","src":"676:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"656:6:26"},"nodeType":"YulFunctionCall","src":"656:39:26"},"nodeType":"YulExpressionStatement","src":"656:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"603:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"606:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"600:2:26"},"nodeType":"YulFunctionCall","src":"600:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"614:19:26","statements":[{"nodeType":"YulAssignment","src":"616:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"625:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"628:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"621:3:26"},"nodeType":"YulFunctionCall","src":"621:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"616:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"596:3:26","statements":[]},"src":"592:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"725:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"730:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"721:3:26"},"nodeType":"YulFunctionCall","src":"721:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"739:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"714:6:26"},"nodeType":"YulFunctionCall","src":"714:27:26"},"nodeType":"YulExpressionStatement","src":"714:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"541:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"546:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"551:6:26","type":""}],"src":"497:250:26"},{"body":{"nodeType":"YulBlock","src":"802:221:26","statements":[{"nodeType":"YulVariableDeclaration","src":"812:26:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"832:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"826:5:26"},"nodeType":"YulFunctionCall","src":"826:12:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"816:6:26","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"854:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"859:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"847:6:26"},"nodeType":"YulFunctionCall","src":"847:19:26"},"nodeType":"YulExpressionStatement","src":"847:19:26"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"914:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"921:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"910:3:26"},"nodeType":"YulFunctionCall","src":"910:16:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"932:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"937:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:26"},"nodeType":"YulFunctionCall","src":"928:14:26"},{"name":"length","nodeType":"YulIdentifier","src":"944:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"875:34:26"},"nodeType":"YulFunctionCall","src":"875:76:26"},"nodeType":"YulExpressionStatement","src":"875:76:26"},{"nodeType":"YulAssignment","src":"960:57:26","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"975:3:26"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"988:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"996:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"984:3:26"},"nodeType":"YulFunctionCall","src":"984:15:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1005:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1001:3:26"},"nodeType":"YulFunctionCall","src":"1001:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"980:3:26"},"nodeType":"YulFunctionCall","src":"980:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"971:3:26"},"nodeType":"YulFunctionCall","src":"971:39:26"},{"kind":"number","nodeType":"YulLiteral","src":"1012:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:26"},"nodeType":"YulFunctionCall","src":"967:50:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"960:3:26"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"779:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"786:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"794:3:26","type":""}],"src":"752:271:26"},{"body":{"nodeType":"YulBlock","src":"1149:99:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1166:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1177:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1159:6:26"},"nodeType":"YulFunctionCall","src":"1159:21:26"},"nodeType":"YulExpressionStatement","src":"1159:21:26"},{"nodeType":"YulAssignment","src":"1189:53:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1215:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1227:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1238:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1223:3:26"},"nodeType":"YulFunctionCall","src":"1223:18:26"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1197:17:26"},"nodeType":"YulFunctionCall","src":"1197:45:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1189:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1118:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1129:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1140:4:26","type":""}],"src":"1028:220:26"},{"body":{"nodeType":"YulBlock","src":"1302:124:26","statements":[{"nodeType":"YulAssignment","src":"1312:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1334:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1321:12:26"},"nodeType":"YulFunctionCall","src":"1321:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1312:5:26"}]},{"body":{"nodeType":"YulBlock","src":"1404:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1413:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1416:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1406:6:26"},"nodeType":"YulFunctionCall","src":"1406:12:26"},"nodeType":"YulExpressionStatement","src":"1406:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1363:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1374:5:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1389:3:26","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1394:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1385:3:26"},"nodeType":"YulFunctionCall","src":"1385:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"1398:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1381:3:26"},"nodeType":"YulFunctionCall","src":"1381:19:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1370:3:26"},"nodeType":"YulFunctionCall","src":"1370:31:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1360:2:26"},"nodeType":"YulFunctionCall","src":"1360:42:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1353:6:26"},"nodeType":"YulFunctionCall","src":"1353:50:26"},"nodeType":"YulIf","src":"1350:70:26"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1281:6:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1292:5:26","type":""}],"src":"1253:173:26"},{"body":{"nodeType":"YulBlock","src":"1518:167:26","statements":[{"body":{"nodeType":"YulBlock","src":"1564:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1573:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1576:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1566:6:26"},"nodeType":"YulFunctionCall","src":"1566:12:26"},"nodeType":"YulExpressionStatement","src":"1566:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1548:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:26"},"nodeType":"YulFunctionCall","src":"1535:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"1560:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1531:3:26"},"nodeType":"YulFunctionCall","src":"1531:32:26"},"nodeType":"YulIf","src":"1528:52:26"},{"nodeType":"YulAssignment","src":"1589:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1618:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1599:18:26"},"nodeType":"YulFunctionCall","src":"1599:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1589:6:26"}]},{"nodeType":"YulAssignment","src":"1637:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1664:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1675:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1660:3:26"},"nodeType":"YulFunctionCall","src":"1660:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1647:12:26"},"nodeType":"YulFunctionCall","src":"1647:32:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1637:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1476:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1487:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1499:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1507:6:26","type":""}],"src":"1431:254:26"},{"body":{"nodeType":"YulBlock","src":"1791:76:26","statements":[{"nodeType":"YulAssignment","src":"1801:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1813:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1824:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1809:3:26"},"nodeType":"YulFunctionCall","src":"1809:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1801:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1843:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"1854:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1836:6:26"},"nodeType":"YulFunctionCall","src":"1836:25:26"},"nodeType":"YulExpressionStatement","src":"1836:25:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1760:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1771:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1782:4:26","type":""}],"src":"1690:177:26"},{"body":{"nodeType":"YulBlock","src":"1976:224:26","statements":[{"body":{"nodeType":"YulBlock","src":"2022:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2031:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2034:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2024:6:26"},"nodeType":"YulFunctionCall","src":"2024:12:26"},"nodeType":"YulExpressionStatement","src":"2024:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1997:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2006:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1993:3:26"},"nodeType":"YulFunctionCall","src":"1993:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2018:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1989:3:26"},"nodeType":"YulFunctionCall","src":"1989:32:26"},"nodeType":"YulIf","src":"1986:52:26"},{"nodeType":"YulAssignment","src":"2047:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2076:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2057:18:26"},"nodeType":"YulFunctionCall","src":"2057:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2047:6:26"}]},{"nodeType":"YulAssignment","src":"2095:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2128:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2139:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2124:3:26"},"nodeType":"YulFunctionCall","src":"2124:18:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2105:18:26"},"nodeType":"YulFunctionCall","src":"2105:38:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2095:6:26"}]},{"nodeType":"YulAssignment","src":"2152:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2179:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2190:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2175:3:26"},"nodeType":"YulFunctionCall","src":"2175:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2162:12:26"},"nodeType":"YulFunctionCall","src":"2162:32:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2152:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1926:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1937:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1949:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1957:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1965:6:26","type":""}],"src":"1872:328:26"},{"body":{"nodeType":"YulBlock","src":"2275:110:26","statements":[{"body":{"nodeType":"YulBlock","src":"2321:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2330:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2333:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2323:6:26"},"nodeType":"YulFunctionCall","src":"2323:12:26"},"nodeType":"YulExpressionStatement","src":"2323:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2296:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2305:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2292:3:26"},"nodeType":"YulFunctionCall","src":"2292:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2317:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2288:3:26"},"nodeType":"YulFunctionCall","src":"2288:32:26"},"nodeType":"YulIf","src":"2285:52:26"},{"nodeType":"YulAssignment","src":"2346:33:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2369:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2356:12:26"},"nodeType":"YulFunctionCall","src":"2356:23:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2346:6:26"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2241:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2252:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2264:6:26","type":""}],"src":"2205:180:26"},{"body":{"nodeType":"YulBlock","src":"2491:76:26","statements":[{"nodeType":"YulAssignment","src":"2501:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2513:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2524:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2509:3:26"},"nodeType":"YulFunctionCall","src":"2509:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2501:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2543:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"2554:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2536:6:26"},"nodeType":"YulFunctionCall","src":"2536:25:26"},"nodeType":"YulExpressionStatement","src":"2536:25:26"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2460:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2471:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2482:4:26","type":""}],"src":"2390:177:26"},{"body":{"nodeType":"YulBlock","src":"2659:167:26","statements":[{"body":{"nodeType":"YulBlock","src":"2705:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2714:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2717:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2707:6:26"},"nodeType":"YulFunctionCall","src":"2707:12:26"},"nodeType":"YulExpressionStatement","src":"2707:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2680:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2689:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2676:3:26"},"nodeType":"YulFunctionCall","src":"2676:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2701:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2672:3:26"},"nodeType":"YulFunctionCall","src":"2672:32:26"},"nodeType":"YulIf","src":"2669:52:26"},{"nodeType":"YulAssignment","src":"2730:33:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2753:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2740:12:26"},"nodeType":"YulFunctionCall","src":"2740:23:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2730:6:26"}]},{"nodeType":"YulAssignment","src":"2772:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2805:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2816:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2801:3:26"},"nodeType":"YulFunctionCall","src":"2801:18:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2782:18:26"},"nodeType":"YulFunctionCall","src":"2782:38:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2772:6:26"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2617:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2628:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2640:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2648:6:26","type":""}],"src":"2572:254:26"},{"body":{"nodeType":"YulBlock","src":"2928:87:26","statements":[{"nodeType":"YulAssignment","src":"2938:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2950:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2961:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2946:3:26"},"nodeType":"YulFunctionCall","src":"2946:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2938:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2980:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2995:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3003:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2991:3:26"},"nodeType":"YulFunctionCall","src":"2991:17:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2973:6:26"},"nodeType":"YulFunctionCall","src":"2973:36:26"},"nodeType":"YulExpressionStatement","src":"2973:36:26"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2897:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2908:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2919:4:26","type":""}],"src":"2831:184:26"},{"body":{"nodeType":"YulBlock","src":"3090:116:26","statements":[{"body":{"nodeType":"YulBlock","src":"3136:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3145:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3148:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3138:6:26"},"nodeType":"YulFunctionCall","src":"3138:12:26"},"nodeType":"YulExpressionStatement","src":"3138:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3111:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3120:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3107:3:26"},"nodeType":"YulFunctionCall","src":"3107:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"3132:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3103:3:26"},"nodeType":"YulFunctionCall","src":"3103:32:26"},"nodeType":"YulIf","src":"3100:52:26"},{"nodeType":"YulAssignment","src":"3161:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3190:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3171:18:26"},"nodeType":"YulFunctionCall","src":"3171:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3161:6:26"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3056:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3067:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3079:6:26","type":""}],"src":"3020:186:26"},{"body":{"nodeType":"YulBlock","src":"3312:102:26","statements":[{"nodeType":"YulAssignment","src":"3322:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3334:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3345:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3330:3:26"},"nodeType":"YulFunctionCall","src":"3330:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3322:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3364:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3379:6:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3395:3:26","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3400:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3391:3:26"},"nodeType":"YulFunctionCall","src":"3391:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"3404:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3387:3:26"},"nodeType":"YulFunctionCall","src":"3387:19:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3375:3:26"},"nodeType":"YulFunctionCall","src":"3375:32:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3357:6:26"},"nodeType":"YulFunctionCall","src":"3357:51:26"},"nodeType":"YulExpressionStatement","src":"3357:51:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3281:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3292:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3303:4:26","type":""}],"src":"3211:203:26"},{"body":{"nodeType":"YulBlock","src":"3518:93:26","statements":[{"nodeType":"YulAssignment","src":"3528:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3540:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3551:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3536:3:26"},"nodeType":"YulFunctionCall","src":"3536:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3528:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3570:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3585:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3593:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3581:3:26"},"nodeType":"YulFunctionCall","src":"3581:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3563:6:26"},"nodeType":"YulFunctionCall","src":"3563:42:26"},"nodeType":"YulExpressionStatement","src":"3563:42:26"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3487:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3498:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3509:4:26","type":""}],"src":"3419:192:26"},{"body":{"nodeType":"YulBlock","src":"3973:902:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3990:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4005:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4017:3:26","type":"","value":"248"},{"kind":"number","nodeType":"YulLiteral","src":"4022:3:26","type":"","value":"255"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4013:3:26"},"nodeType":"YulFunctionCall","src":"4013:13:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4001:3:26"},"nodeType":"YulFunctionCall","src":"4001:26:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3983:6:26"},"nodeType":"YulFunctionCall","src":"3983:45:26"},"nodeType":"YulExpressionStatement","src":"3983:45:26"},{"nodeType":"YulVariableDeclaration","src":"4037:12:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4047:2:26","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4041:2:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4069:9:26"},{"name":"_1","nodeType":"YulIdentifier","src":"4080:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4065:3:26"},"nodeType":"YulFunctionCall","src":"4065:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"4085:3:26","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4058:6:26"},"nodeType":"YulFunctionCall","src":"4058:31:26"},"nodeType":"YulExpressionStatement","src":"4058:31:26"},{"nodeType":"YulVariableDeclaration","src":"4098:60:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4130:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4142:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4153:3:26","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4138:3:26"},"nodeType":"YulFunctionCall","src":"4138:19:26"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4112:17:26"},"nodeType":"YulFunctionCall","src":"4112:46:26"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4102:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4178:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4189:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4174:3:26"},"nodeType":"YulFunctionCall","src":"4174:18:26"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4198:6:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4206:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4194:3:26"},"nodeType":"YulFunctionCall","src":"4194:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4167:6:26"},"nodeType":"YulFunctionCall","src":"4167:50:26"},"nodeType":"YulExpressionStatement","src":"4167:50:26"},{"nodeType":"YulVariableDeclaration","src":"4226:47:26","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4258:6:26"},{"name":"tail_1","nodeType":"YulIdentifier","src":"4266:6:26"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4240:17:26"},"nodeType":"YulFunctionCall","src":"4240:33:26"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"4230:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4293:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4304:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4289:3:26"},"nodeType":"YulFunctionCall","src":"4289:18:26"},{"name":"value3","nodeType":"YulIdentifier","src":"4309:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4282:6:26"},"nodeType":"YulFunctionCall","src":"4282:34:26"},"nodeType":"YulExpressionStatement","src":"4282:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4336:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4347:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4332:3:26"},"nodeType":"YulFunctionCall","src":"4332:19:26"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4357:6:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4373:3:26","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4378:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4369:3:26"},"nodeType":"YulFunctionCall","src":"4369:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"4382:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4365:3:26"},"nodeType":"YulFunctionCall","src":"4365:19:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4353:3:26"},"nodeType":"YulFunctionCall","src":"4353:32:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4325:6:26"},"nodeType":"YulFunctionCall","src":"4325:61:26"},"nodeType":"YulExpressionStatement","src":"4325:61:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4406:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4417:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4402:3:26"},"nodeType":"YulFunctionCall","src":"4402:19:26"},{"name":"value5","nodeType":"YulIdentifier","src":"4423:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4395:6:26"},"nodeType":"YulFunctionCall","src":"4395:35:26"},"nodeType":"YulExpressionStatement","src":"4395:35:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4450:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4461:3:26","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4446:3:26"},"nodeType":"YulFunctionCall","src":"4446:19:26"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"4471:6:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4479:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4467:3:26"},"nodeType":"YulFunctionCall","src":"4467:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4439:6:26"},"nodeType":"YulFunctionCall","src":"4439:51:26"},"nodeType":"YulExpressionStatement","src":"4439:51:26"},{"nodeType":"YulVariableDeclaration","src":"4499:17:26","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"4510:6:26"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"4503:3:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4525:27:26","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"4545:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4539:5:26"},"nodeType":"YulFunctionCall","src":"4539:13:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4529:6:26","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"4568:6:26"},{"name":"length","nodeType":"YulIdentifier","src":"4576:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4561:6:26"},"nodeType":"YulFunctionCall","src":"4561:22:26"},"nodeType":"YulExpressionStatement","src":"4561:22:26"},{"nodeType":"YulAssignment","src":"4592:22:26","value":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"4603:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"4611:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4599:3:26"},"nodeType":"YulFunctionCall","src":"4599:15:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4592:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"4623:29:26","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"4641:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"4649:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4637:3:26"},"nodeType":"YulFunctionCall","src":"4637:15:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4627:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4661:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4670:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4665:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"4729:120:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4750:3:26"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4761:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4755:5:26"},"nodeType":"YulFunctionCall","src":"4755:13:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4743:6:26"},"nodeType":"YulFunctionCall","src":"4743:26:26"},"nodeType":"YulExpressionStatement","src":"4743:26:26"},{"nodeType":"YulAssignment","src":"4782:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4793:3:26"},{"name":"_1","nodeType":"YulIdentifier","src":"4798:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4789:3:26"},"nodeType":"YulFunctionCall","src":"4789:12:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4782:3:26"}]},{"nodeType":"YulAssignment","src":"4814:25:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4828:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"4836:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4824:3:26"},"nodeType":"YulFunctionCall","src":"4824:15:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4814:6:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4691:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"4694:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4688:2:26"},"nodeType":"YulFunctionCall","src":"4688:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4702:18:26","statements":[{"nodeType":"YulAssignment","src":"4704:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4713:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"4716:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4709:3:26"},"nodeType":"YulFunctionCall","src":"4709:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4704:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"4684:3:26","statements":[]},"src":"4680:169:26"},{"nodeType":"YulAssignment","src":"4858:11:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"4866:3:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4858:4:26"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3894:9:26","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3905:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3913:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3921:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3929:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3937:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3945:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3953:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3964:4:26","type":""}],"src":"3616:1259:26"},{"body":{"nodeType":"YulBlock","src":"4950:110:26","statements":[{"body":{"nodeType":"YulBlock","src":"4996:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5005:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5008:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4998:6:26"},"nodeType":"YulFunctionCall","src":"4998:12:26"},"nodeType":"YulExpressionStatement","src":"4998:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4971:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4980:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4967:3:26"},"nodeType":"YulFunctionCall","src":"4967:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4992:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4963:3:26"},"nodeType":"YulFunctionCall","src":"4963:32:26"},"nodeType":"YulIf","src":"4960:52:26"},{"nodeType":"YulAssignment","src":"5021:33:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5044:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5031:12:26"},"nodeType":"YulFunctionCall","src":"5031:23:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5021:6:26"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4916:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4927:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4939:6:26","type":""}],"src":"4880:180:26"},{"body":{"nodeType":"YulBlock","src":"5164:97:26","statements":[{"nodeType":"YulAssignment","src":"5174:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5186:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5197:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5182:3:26"},"nodeType":"YulFunctionCall","src":"5182:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5174:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5216:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5231:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5239:14:26","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5227:3:26"},"nodeType":"YulFunctionCall","src":"5227:27:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5209:6:26"},"nodeType":"YulFunctionCall","src":"5209:46:26"},"nodeType":"YulExpressionStatement","src":"5209:46:26"}]},"name":"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5133:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5144:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5155:4:26","type":""}],"src":"5065:196:26"},{"body":{"nodeType":"YulBlock","src":"5313:109:26","statements":[{"nodeType":"YulAssignment","src":"5323:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5345:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5332:12:26"},"nodeType":"YulFunctionCall","src":"5332:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5323:5:26"}]},{"body":{"nodeType":"YulBlock","src":"5400:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5409:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5412:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5402:6:26"},"nodeType":"YulFunctionCall","src":"5402:12:26"},"nodeType":"YulExpressionStatement","src":"5402:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5374:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5385:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"5392:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5381:3:26"},"nodeType":"YulFunctionCall","src":"5381:16:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5371:2:26"},"nodeType":"YulFunctionCall","src":"5371:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5364:6:26"},"nodeType":"YulFunctionCall","src":"5364:35:26"},"nodeType":"YulIf","src":"5361:55:26"}]},"name":"abi_decode_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5292:6:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5303:5:26","type":""}],"src":"5266:156:26"},{"body":{"nodeType":"YulBlock","src":"5580:378:26","statements":[{"body":{"nodeType":"YulBlock","src":"5627:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5636:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5639:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5629:6:26"},"nodeType":"YulFunctionCall","src":"5629:12:26"},"nodeType":"YulExpressionStatement","src":"5629:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5601:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5610:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5597:3:26"},"nodeType":"YulFunctionCall","src":"5597:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5622:3:26","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5593:3:26"},"nodeType":"YulFunctionCall","src":"5593:33:26"},"nodeType":"YulIf","src":"5590:53:26"},{"nodeType":"YulAssignment","src":"5652:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5681:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5662:18:26"},"nodeType":"YulFunctionCall","src":"5662:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5652:6:26"}]},{"nodeType":"YulAssignment","src":"5700:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5727:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5738:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5723:3:26"},"nodeType":"YulFunctionCall","src":"5723:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5710:12:26"},"nodeType":"YulFunctionCall","src":"5710:32:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5700:6:26"}]},{"nodeType":"YulAssignment","src":"5751:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5778:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5789:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5774:3:26"},"nodeType":"YulFunctionCall","src":"5774:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5761:12:26"},"nodeType":"YulFunctionCall","src":"5761:32:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5751:6:26"}]},{"nodeType":"YulAssignment","src":"5802:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5833:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5844:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5829:3:26"},"nodeType":"YulFunctionCall","src":"5829:18:26"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"5812:16:26"},"nodeType":"YulFunctionCall","src":"5812:36:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5802:6:26"}]},{"nodeType":"YulAssignment","src":"5857:43:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5884:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5895:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5880:3:26"},"nodeType":"YulFunctionCall","src":"5880:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5867:12:26"},"nodeType":"YulFunctionCall","src":"5867:33:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5857:6:26"}]},{"nodeType":"YulAssignment","src":"5909:43:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5936:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5947:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5932:3:26"},"nodeType":"YulFunctionCall","src":"5932:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5919:12:26"},"nodeType":"YulFunctionCall","src":"5919:33:26"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"5909:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5506:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5517:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5529:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5537:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5545:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5553:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5561:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5569:6:26","type":""}],"src":"5427:531:26"},{"body":{"nodeType":"YulBlock","src":"6133:436:26","statements":[{"body":{"nodeType":"YulBlock","src":"6180:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6189:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6192:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6182:6:26"},"nodeType":"YulFunctionCall","src":"6182:12:26"},"nodeType":"YulExpressionStatement","src":"6182:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6154:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6163:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6150:3:26"},"nodeType":"YulFunctionCall","src":"6150:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6175:3:26","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6146:3:26"},"nodeType":"YulFunctionCall","src":"6146:33:26"},"nodeType":"YulIf","src":"6143:53:26"},{"nodeType":"YulAssignment","src":"6205:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6234:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6215:18:26"},"nodeType":"YulFunctionCall","src":"6215:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6205:6:26"}]},{"nodeType":"YulAssignment","src":"6253:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6286:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6297:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6282:3:26"},"nodeType":"YulFunctionCall","src":"6282:18:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6263:18:26"},"nodeType":"YulFunctionCall","src":"6263:38:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6253:6:26"}]},{"nodeType":"YulAssignment","src":"6310:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6337:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6348:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6333:3:26"},"nodeType":"YulFunctionCall","src":"6333:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6320:12:26"},"nodeType":"YulFunctionCall","src":"6320:32:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6310:6:26"}]},{"nodeType":"YulAssignment","src":"6361:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6388:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6399:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6384:3:26"},"nodeType":"YulFunctionCall","src":"6384:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6371:12:26"},"nodeType":"YulFunctionCall","src":"6371:32:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6361:6:26"}]},{"nodeType":"YulAssignment","src":"6412:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6443:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6454:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6439:3:26"},"nodeType":"YulFunctionCall","src":"6439:19:26"}],"functionName":{"name":"abi_decode_uint8","nodeType":"YulIdentifier","src":"6422:16:26"},"nodeType":"YulFunctionCall","src":"6422:37:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6412:6:26"}]},{"nodeType":"YulAssignment","src":"6468:43:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6495:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6506:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6491:3:26"},"nodeType":"YulFunctionCall","src":"6491:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6478:12:26"},"nodeType":"YulFunctionCall","src":"6478:33:26"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"6468:6:26"}]},{"nodeType":"YulAssignment","src":"6520:43:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6547:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6558:3:26","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6543:3:26"},"nodeType":"YulFunctionCall","src":"6543:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6530:12:26"},"nodeType":"YulFunctionCall","src":"6530:33:26"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"6520:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6051:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6062:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6074:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6082:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6090:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6098:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6106:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6114:6:26","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6122:6:26","type":""}],"src":"5963:606:26"},{"body":{"nodeType":"YulBlock","src":"6661:173:26","statements":[{"body":{"nodeType":"YulBlock","src":"6707:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6716:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6719:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6709:6:26"},"nodeType":"YulFunctionCall","src":"6709:12:26"},"nodeType":"YulExpressionStatement","src":"6709:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6682:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6691:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6678:3:26"},"nodeType":"YulFunctionCall","src":"6678:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6703:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6674:3:26"},"nodeType":"YulFunctionCall","src":"6674:32:26"},"nodeType":"YulIf","src":"6671:52:26"},{"nodeType":"YulAssignment","src":"6732:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6761:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6742:18:26"},"nodeType":"YulFunctionCall","src":"6742:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6732:6:26"}]},{"nodeType":"YulAssignment","src":"6780:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6813:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6824:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6809:3:26"},"nodeType":"YulFunctionCall","src":"6809:18:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6790:18:26"},"nodeType":"YulFunctionCall","src":"6790:38:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6780:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6619:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6630:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6642:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6650:6:26","type":""}],"src":"6574:260:26"},{"body":{"nodeType":"YulBlock","src":"6925:264:26","statements":[{"body":{"nodeType":"YulBlock","src":"6971:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6980:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6983:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6973:6:26"},"nodeType":"YulFunctionCall","src":"6973:12:26"},"nodeType":"YulExpressionStatement","src":"6973:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6946:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6955:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6942:3:26"},"nodeType":"YulFunctionCall","src":"6942:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6967:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6938:3:26"},"nodeType":"YulFunctionCall","src":"6938:32:26"},"nodeType":"YulIf","src":"6935:52:26"},{"nodeType":"YulAssignment","src":"6996:39:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7025:9:26"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"7006:18:26"},"nodeType":"YulFunctionCall","src":"7006:29:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6996:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"7044:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7074:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7085:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7070:3:26"},"nodeType":"YulFunctionCall","src":"7070:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7057:12:26"},"nodeType":"YulFunctionCall","src":"7057:32:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"7048:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7143:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7152:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7155:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7145:6:26"},"nodeType":"YulFunctionCall","src":"7145:12:26"},"nodeType":"YulExpressionStatement","src":"7145:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7111:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7122:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"7129:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7118:3:26"},"nodeType":"YulFunctionCall","src":"7118:22:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7108:2:26"},"nodeType":"YulFunctionCall","src":"7108:33:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7101:6:26"},"nodeType":"YulFunctionCall","src":"7101:41:26"},"nodeType":"YulIf","src":"7098:61:26"},{"nodeType":"YulAssignment","src":"7168:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"7178:5:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7168:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6883:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6894:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6906:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6914:6:26","type":""}],"src":"6839:350:26"},{"body":{"nodeType":"YulBlock","src":"7351:189:26","statements":[{"nodeType":"YulAssignment","src":"7361:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7373:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7384:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7369:3:26"},"nodeType":"YulFunctionCall","src":"7369:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7361:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7403:9:26"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7424:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7418:5:26"},"nodeType":"YulFunctionCall","src":"7418:13:26"},{"kind":"number","nodeType":"YulLiteral","src":"7433:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7414:3:26"},"nodeType":"YulFunctionCall","src":"7414:30:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7396:6:26"},"nodeType":"YulFunctionCall","src":"7396:49:26"},"nodeType":"YulExpressionStatement","src":"7396:49:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7465:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7476:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7461:3:26"},"nodeType":"YulFunctionCall","src":"7461:20:26"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7497:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7505:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7493:3:26"},"nodeType":"YulFunctionCall","src":"7493:17:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7487:5:26"},"nodeType":"YulFunctionCall","src":"7487:24:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7521:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7526:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7517:3:26"},"nodeType":"YulFunctionCall","src":"7517:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"7530:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7513:3:26"},"nodeType":"YulFunctionCall","src":"7513:19:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7483:3:26"},"nodeType":"YulFunctionCall","src":"7483:50:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7454:6:26"},"nodeType":"YulFunctionCall","src":"7454:80:26"},"nodeType":"YulExpressionStatement","src":"7454:80:26"}]},"name":"abi_encode_tuple_t_struct$_Checkpoint_$1369_memory_ptr__to_t_struct$_Checkpoint_$1369_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7320:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7331:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7342:4:26","type":""}],"src":"7194:346:26"},{"body":{"nodeType":"YulBlock","src":"7600:325:26","statements":[{"nodeType":"YulAssignment","src":"7610:22:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7624:1:26","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"7627:4:26"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7620:3:26"},"nodeType":"YulFunctionCall","src":"7620:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7610:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"7641:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7671:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"7677:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7667:3:26"},"nodeType":"YulFunctionCall","src":"7667:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7645:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7718:31:26","statements":[{"nodeType":"YulAssignment","src":"7720:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7734:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7742:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7730:3:26"},"nodeType":"YulFunctionCall","src":"7730:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7720:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7698:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7691:6:26"},"nodeType":"YulFunctionCall","src":"7691:26:26"},"nodeType":"YulIf","src":"7688:61:26"},{"body":{"nodeType":"YulBlock","src":"7808:111:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7829:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7836:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7841:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7832:3:26"},"nodeType":"YulFunctionCall","src":"7832:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7822:6:26"},"nodeType":"YulFunctionCall","src":"7822:31:26"},"nodeType":"YulExpressionStatement","src":"7822:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7873:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7876:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7866:6:26"},"nodeType":"YulFunctionCall","src":"7866:15:26"},"nodeType":"YulExpressionStatement","src":"7866:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7901:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7894:6:26"},"nodeType":"YulFunctionCall","src":"7894:15:26"},"nodeType":"YulExpressionStatement","src":"7894:15:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7764:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7787:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7795:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7784:2:26"},"nodeType":"YulFunctionCall","src":"7784:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7761:2:26"},"nodeType":"YulFunctionCall","src":"7761:38:26"},"nodeType":"YulIf","src":"7758:161:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7580:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7589:6:26","type":""}],"src":"7545:380:26"},{"body":{"nodeType":"YulBlock","src":"8104:237:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8121:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8132:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8114:6:26"},"nodeType":"YulFunctionCall","src":"8114:21:26"},"nodeType":"YulExpressionStatement","src":"8114:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8155:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8166:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8151:3:26"},"nodeType":"YulFunctionCall","src":"8151:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"8171:2:26","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8144:6:26"},"nodeType":"YulFunctionCall","src":"8144:30:26"},"nodeType":"YulExpressionStatement","src":"8144:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8194:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8205:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8190:3:26"},"nodeType":"YulFunctionCall","src":"8190:18:26"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"8210:34:26","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8183:6:26"},"nodeType":"YulFunctionCall","src":"8183:62:26"},"nodeType":"YulExpressionStatement","src":"8183:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8265:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8276:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8261:3:26"},"nodeType":"YulFunctionCall","src":"8261:18:26"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"8281:17:26","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8254:6:26"},"nodeType":"YulFunctionCall","src":"8254:45:26"},"nodeType":"YulExpressionStatement","src":"8254:45:26"},{"nodeType":"YulAssignment","src":"8308:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8320:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8331:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8316:3:26"},"nodeType":"YulFunctionCall","src":"8316:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8308:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8081:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8095:4:26","type":""}],"src":"7930:411:26"},{"body":{"nodeType":"YulBlock","src":"8378:95:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8395:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8402:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8407:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8398:3:26"},"nodeType":"YulFunctionCall","src":"8398:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8388:6:26"},"nodeType":"YulFunctionCall","src":"8388:31:26"},"nodeType":"YulExpressionStatement","src":"8388:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8435:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8438:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8428:6:26"},"nodeType":"YulFunctionCall","src":"8428:15:26"},"nodeType":"YulExpressionStatement","src":"8428:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8459:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8462:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8452:6:26"},"nodeType":"YulFunctionCall","src":"8452:15:26"},"nodeType":"YulExpressionStatement","src":"8452:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8346:127:26"},{"body":{"nodeType":"YulBlock","src":"8526:77:26","statements":[{"nodeType":"YulAssignment","src":"8536:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8547:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"8550:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8543:3:26"},"nodeType":"YulFunctionCall","src":"8543:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"8536:3:26"}]},{"body":{"nodeType":"YulBlock","src":"8575:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8577:16:26"},"nodeType":"YulFunctionCall","src":"8577:18:26"},"nodeType":"YulExpressionStatement","src":"8577:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8567:1:26"},{"name":"sum","nodeType":"YulIdentifier","src":"8570:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8564:2:26"},"nodeType":"YulFunctionCall","src":"8564:10:26"},"nodeType":"YulIf","src":"8561:36:26"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8509:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"8512:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"8518:3:26","type":""}],"src":"8478:125:26"},{"body":{"nodeType":"YulBlock","src":"8782:175:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8799:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8810:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8792:6:26"},"nodeType":"YulFunctionCall","src":"8792:21:26"},"nodeType":"YulExpressionStatement","src":"8792:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8833:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8844:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8829:3:26"},"nodeType":"YulFunctionCall","src":"8829:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"8849:2:26","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8822:6:26"},"nodeType":"YulFunctionCall","src":"8822:30:26"},"nodeType":"YulExpressionStatement","src":"8822:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8872:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8883:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8868:3:26"},"nodeType":"YulFunctionCall","src":"8868:18:26"},{"hexValue":"4552433230566f7465733a20667574757265206c6f6f6b7570","kind":"string","nodeType":"YulLiteral","src":"8888:27:26","type":"","value":"ERC20Votes: future lookup"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8861:6:26"},"nodeType":"YulFunctionCall","src":"8861:55:26"},"nodeType":"YulExpressionStatement","src":"8861:55:26"},{"nodeType":"YulAssignment","src":"8925:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8937:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8948:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8933:3:26"},"nodeType":"YulFunctionCall","src":"8933:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8925:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8759:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8773:4:26","type":""}],"src":"8608:349:26"},{"body":{"nodeType":"YulBlock","src":"9136:179:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9153:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9164:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9146:6:26"},"nodeType":"YulFunctionCall","src":"9146:21:26"},"nodeType":"YulExpressionStatement","src":"9146:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9187:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9198:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9183:3:26"},"nodeType":"YulFunctionCall","src":"9183:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"9203:2:26","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9176:6:26"},"nodeType":"YulFunctionCall","src":"9176:30:26"},"nodeType":"YulExpressionStatement","src":"9176:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9226:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9237:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9222:3:26"},"nodeType":"YulFunctionCall","src":"9222:18:26"},{"hexValue":"4552433230566f7465733a2062726f6b656e20636c6f636b206d6f6465","kind":"string","nodeType":"YulLiteral","src":"9242:31:26","type":"","value":"ERC20Votes: broken clock mode"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9215:6:26"},"nodeType":"YulFunctionCall","src":"9215:59:26"},"nodeType":"YulExpressionStatement","src":"9215:59:26"},{"nodeType":"YulAssignment","src":"9283:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9295:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9306:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9291:3:26"},"nodeType":"YulFunctionCall","src":"9291:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9283:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9113:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9127:4:26","type":""}],"src":"8962:353:26"},{"body":{"nodeType":"YulBlock","src":"9352:95:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9369:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9376:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9381:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9372:3:26"},"nodeType":"YulFunctionCall","src":"9372:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9362:6:26"},"nodeType":"YulFunctionCall","src":"9362:31:26"},"nodeType":"YulExpressionStatement","src":"9362:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9409:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9412:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9402:6:26"},"nodeType":"YulFunctionCall","src":"9402:15:26"},"nodeType":"YulExpressionStatement","src":"9402:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9433:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9436:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9426:6:26"},"nodeType":"YulFunctionCall","src":"9426:15:26"},"nodeType":"YulExpressionStatement","src":"9426:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"9320:127:26"},{"body":{"nodeType":"YulBlock","src":"9484:95:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9501:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9508:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9513:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9504:3:26"},"nodeType":"YulFunctionCall","src":"9504:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9494:6:26"},"nodeType":"YulFunctionCall","src":"9494:31:26"},"nodeType":"YulExpressionStatement","src":"9494:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9541:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9544:4:26","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9534:6:26"},"nodeType":"YulFunctionCall","src":"9534:15:26"},"nodeType":"YulExpressionStatement","src":"9534:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9565:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9568:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9558:6:26"},"nodeType":"YulFunctionCall","src":"9558:15:26"},"nodeType":"YulExpressionStatement","src":"9558:15:26"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"9452:127:26"},{"body":{"nodeType":"YulBlock","src":"9758:227:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9775:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9786:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9768:6:26"},"nodeType":"YulFunctionCall","src":"9768:21:26"},"nodeType":"YulExpressionStatement","src":"9768:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9809:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9820:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9805:3:26"},"nodeType":"YulFunctionCall","src":"9805:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"9825:2:26","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9798:6:26"},"nodeType":"YulFunctionCall","src":"9798:30:26"},"nodeType":"YulExpressionStatement","src":"9798:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9848:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9859:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9844:3:26"},"nodeType":"YulFunctionCall","src":"9844:18:26"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"9864:34:26","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9837:6:26"},"nodeType":"YulFunctionCall","src":"9837:62:26"},"nodeType":"YulExpressionStatement","src":"9837:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9919:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9930:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9915:3:26"},"nodeType":"YulFunctionCall","src":"9915:18:26"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"9935:7:26","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9908:6:26"},"nodeType":"YulFunctionCall","src":"9908:35:26"},"nodeType":"YulExpressionStatement","src":"9908:35:26"},{"nodeType":"YulAssignment","src":"9952:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9964:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9975:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9960:3:26"},"nodeType":"YulFunctionCall","src":"9960:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9952:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9735:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9749:4:26","type":""}],"src":"9584:401:26"},{"body":{"nodeType":"YulBlock","src":"10164:179:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10181:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10192:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10174:6:26"},"nodeType":"YulFunctionCall","src":"10174:21:26"},"nodeType":"YulExpressionStatement","src":"10174:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10215:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10226:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10211:3:26"},"nodeType":"YulFunctionCall","src":"10211:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"10231:2:26","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10204:6:26"},"nodeType":"YulFunctionCall","src":"10204:30:26"},"nodeType":"YulExpressionStatement","src":"10204:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10254:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10265:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10250:3:26"},"nodeType":"YulFunctionCall","src":"10250:18:26"},{"hexValue":"4552433230566f7465733a207369676e61747572652065787069726564","kind":"string","nodeType":"YulLiteral","src":"10270:31:26","type":"","value":"ERC20Votes: signature expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10243:6:26"},"nodeType":"YulFunctionCall","src":"10243:59:26"},"nodeType":"YulExpressionStatement","src":"10243:59:26"},{"nodeType":"YulAssignment","src":"10311:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10323:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10334:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10319:3:26"},"nodeType":"YulFunctionCall","src":"10319:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10311:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10141:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10155:4:26","type":""}],"src":"9990:353:26"},{"body":{"nodeType":"YulBlock","src":"10533:232:26","statements":[{"nodeType":"YulAssignment","src":"10543:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10555:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10566:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10551:3:26"},"nodeType":"YulFunctionCall","src":"10551:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10543:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10586:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"10597:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10579:6:26"},"nodeType":"YulFunctionCall","src":"10579:25:26"},"nodeType":"YulExpressionStatement","src":"10579:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10624:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10635:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10620:3:26"},"nodeType":"YulFunctionCall","src":"10620:18:26"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10644:6:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10660:3:26","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10665:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10656:3:26"},"nodeType":"YulFunctionCall","src":"10656:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"10669:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10652:3:26"},"nodeType":"YulFunctionCall","src":"10652:19:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10640:3:26"},"nodeType":"YulFunctionCall","src":"10640:32:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10613:6:26"},"nodeType":"YulFunctionCall","src":"10613:60:26"},"nodeType":"YulExpressionStatement","src":"10613:60:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10693:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10704:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10689:3:26"},"nodeType":"YulFunctionCall","src":"10689:18:26"},{"name":"value2","nodeType":"YulIdentifier","src":"10709:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10682:6:26"},"nodeType":"YulFunctionCall","src":"10682:34:26"},"nodeType":"YulExpressionStatement","src":"10682:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10736:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10747:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10732:3:26"},"nodeType":"YulFunctionCall","src":"10732:18:26"},{"name":"value3","nodeType":"YulIdentifier","src":"10752:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10725:6:26"},"nodeType":"YulFunctionCall","src":"10725:34:26"},"nodeType":"YulExpressionStatement","src":"10725:34:26"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10478:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10489:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10497:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10505:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10513:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10524:4:26","type":""}],"src":"10348:417:26"},{"body":{"nodeType":"YulBlock","src":"10944:175:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10961:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10972:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10954:6:26"},"nodeType":"YulFunctionCall","src":"10954:21:26"},"nodeType":"YulExpressionStatement","src":"10954:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10995:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11006:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10991:3:26"},"nodeType":"YulFunctionCall","src":"10991:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"11011:2:26","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10984:6:26"},"nodeType":"YulFunctionCall","src":"10984:30:26"},"nodeType":"YulExpressionStatement","src":"10984:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11034:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11045:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11030:3:26"},"nodeType":"YulFunctionCall","src":"11030:18:26"},{"hexValue":"4552433230566f7465733a20696e76616c6964206e6f6e6365","kind":"string","nodeType":"YulLiteral","src":"11050:27:26","type":"","value":"ERC20Votes: invalid nonce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11023:6:26"},"nodeType":"YulFunctionCall","src":"11023:55:26"},"nodeType":"YulExpressionStatement","src":"11023:55:26"},{"nodeType":"YulAssignment","src":"11087:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11099:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11110:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11095:3:26"},"nodeType":"YulFunctionCall","src":"11095:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11087:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10921:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10935:4:26","type":""}],"src":"10770:349:26"},{"body":{"nodeType":"YulBlock","src":"11298:179:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11315:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11326:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11308:6:26"},"nodeType":"YulFunctionCall","src":"11308:21:26"},"nodeType":"YulExpressionStatement","src":"11308:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11349:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11360:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11345:3:26"},"nodeType":"YulFunctionCall","src":"11345:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"11365:2:26","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11338:6:26"},"nodeType":"YulFunctionCall","src":"11338:30:26"},"nodeType":"YulExpressionStatement","src":"11338:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11388:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11399:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11384:3:26"},"nodeType":"YulFunctionCall","src":"11384:18:26"},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","kind":"string","nodeType":"YulLiteral","src":"11404:31:26","type":"","value":"ERC20Permit: expired deadline"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11377:6:26"},"nodeType":"YulFunctionCall","src":"11377:59:26"},"nodeType":"YulExpressionStatement","src":"11377:59:26"},{"nodeType":"YulAssignment","src":"11445:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11457:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11468:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11453:3:26"},"nodeType":"YulFunctionCall","src":"11453:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11445:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11275:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11289:4:26","type":""}],"src":"11124:353:26"},{"body":{"nodeType":"YulBlock","src":"11723:350:26","statements":[{"nodeType":"YulAssignment","src":"11733:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11745:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11756:3:26","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11741:3:26"},"nodeType":"YulFunctionCall","src":"11741:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11733:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11776:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"11787:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11769:6:26"},"nodeType":"YulFunctionCall","src":"11769:25:26"},"nodeType":"YulExpressionStatement","src":"11769:25:26"},{"nodeType":"YulVariableDeclaration","src":"11803:29:26","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11821:3:26","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11826:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11817:3:26"},"nodeType":"YulFunctionCall","src":"11817:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"11830:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11813:3:26"},"nodeType":"YulFunctionCall","src":"11813:19:26"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11807:2:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11852:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11863:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11848:3:26"},"nodeType":"YulFunctionCall","src":"11848:18:26"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11872:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"11880:2:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11868:3:26"},"nodeType":"YulFunctionCall","src":"11868:15:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11841:6:26"},"nodeType":"YulFunctionCall","src":"11841:43:26"},"nodeType":"YulExpressionStatement","src":"11841:43:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11904:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11915:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11900:3:26"},"nodeType":"YulFunctionCall","src":"11900:18:26"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11924:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"11932:2:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11920:3:26"},"nodeType":"YulFunctionCall","src":"11920:15:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11893:6:26"},"nodeType":"YulFunctionCall","src":"11893:43:26"},"nodeType":"YulExpressionStatement","src":"11893:43:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11956:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11967:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11952:3:26"},"nodeType":"YulFunctionCall","src":"11952:18:26"},{"name":"value3","nodeType":"YulIdentifier","src":"11972:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11945:6:26"},"nodeType":"YulFunctionCall","src":"11945:34:26"},"nodeType":"YulExpressionStatement","src":"11945:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11999:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12010:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11995:3:26"},"nodeType":"YulFunctionCall","src":"11995:19:26"},{"name":"value4","nodeType":"YulIdentifier","src":"12016:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11988:6:26"},"nodeType":"YulFunctionCall","src":"11988:35:26"},"nodeType":"YulExpressionStatement","src":"11988:35:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12043:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12054:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12039:3:26"},"nodeType":"YulFunctionCall","src":"12039:19:26"},{"name":"value5","nodeType":"YulIdentifier","src":"12060:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12032:6:26"},"nodeType":"YulFunctionCall","src":"12032:35:26"},"nodeType":"YulExpressionStatement","src":"12032:35:26"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11652:9:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11663:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11671:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11679:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11687:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11695:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11703:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11714:4:26","type":""}],"src":"11482:591:26"},{"body":{"nodeType":"YulBlock","src":"12252:180:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12269:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12280:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12262:6:26"},"nodeType":"YulFunctionCall","src":"12262:21:26"},"nodeType":"YulExpressionStatement","src":"12262:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12303:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12314:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12299:3:26"},"nodeType":"YulFunctionCall","src":"12299:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"12319:2:26","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12292:6:26"},"nodeType":"YulFunctionCall","src":"12292:30:26"},"nodeType":"YulExpressionStatement","src":"12292:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12342:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12353:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12338:3:26"},"nodeType":"YulFunctionCall","src":"12338:18:26"},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"12358:32:26","type":"","value":"ERC20Permit: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12331:6:26"},"nodeType":"YulFunctionCall","src":"12331:60:26"},"nodeType":"YulExpressionStatement","src":"12331:60:26"},{"nodeType":"YulAssignment","src":"12400:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12412:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12423:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12408:3:26"},"nodeType":"YulFunctionCall","src":"12408:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12400:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12229:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12243:4:26","type":""}],"src":"12078:354:26"},{"body":{"nodeType":"YulBlock","src":"12611:226:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12628:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12639:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12621:6:26"},"nodeType":"YulFunctionCall","src":"12621:21:26"},"nodeType":"YulExpressionStatement","src":"12621:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12662:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12673:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12658:3:26"},"nodeType":"YulFunctionCall","src":"12658:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"12678:2:26","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12651:6:26"},"nodeType":"YulFunctionCall","src":"12651:30:26"},"nodeType":"YulExpressionStatement","src":"12651:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12701:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12712:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12697:3:26"},"nodeType":"YulFunctionCall","src":"12697:18:26"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"12717:34:26","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12690:6:26"},"nodeType":"YulFunctionCall","src":"12690:62:26"},"nodeType":"YulExpressionStatement","src":"12690:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12772:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12783:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12768:3:26"},"nodeType":"YulFunctionCall","src":"12768:18:26"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"12788:6:26","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12761:6:26"},"nodeType":"YulFunctionCall","src":"12761:34:26"},"nodeType":"YulExpressionStatement","src":"12761:34:26"},{"nodeType":"YulAssignment","src":"12804:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12816:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12827:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12812:3:26"},"nodeType":"YulFunctionCall","src":"12812:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12804:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12588:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12602:4:26","type":""}],"src":"12437:400:26"},{"body":{"nodeType":"YulBlock","src":"13016:224:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13033:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13044:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13026:6:26"},"nodeType":"YulFunctionCall","src":"13026:21:26"},"nodeType":"YulExpressionStatement","src":"13026:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13067:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13078:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13063:3:26"},"nodeType":"YulFunctionCall","src":"13063:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"13083:2:26","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13056:6:26"},"nodeType":"YulFunctionCall","src":"13056:30:26"},"nodeType":"YulExpressionStatement","src":"13056:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13106:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13117:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13102:3:26"},"nodeType":"YulFunctionCall","src":"13102:18:26"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"13122:34:26","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13095:6:26"},"nodeType":"YulFunctionCall","src":"13095:62:26"},"nodeType":"YulExpressionStatement","src":"13095:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13177:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13188:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13173:3:26"},"nodeType":"YulFunctionCall","src":"13173:18:26"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"13193:4:26","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13166:6:26"},"nodeType":"YulFunctionCall","src":"13166:32:26"},"nodeType":"YulExpressionStatement","src":"13166:32:26"},{"nodeType":"YulAssignment","src":"13207:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13219:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13230:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13215:3:26"},"nodeType":"YulFunctionCall","src":"13215:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13207:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12993:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13007:4:26","type":""}],"src":"12842:398:26"},{"body":{"nodeType":"YulBlock","src":"13419:179:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13436:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13447:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13429:6:26"},"nodeType":"YulFunctionCall","src":"13429:21:26"},"nodeType":"YulExpressionStatement","src":"13429:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:26"},"nodeType":"YulFunctionCall","src":"13466:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"13486:2:26","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13459:6:26"},"nodeType":"YulFunctionCall","src":"13459:30:26"},"nodeType":"YulExpressionStatement","src":"13459:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13509:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13520:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13505:3:26"},"nodeType":"YulFunctionCall","src":"13505:18:26"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"13525:31:26","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13498:6:26"},"nodeType":"YulFunctionCall","src":"13498:59:26"},"nodeType":"YulExpressionStatement","src":"13498:59:26"},{"nodeType":"YulAssignment","src":"13566:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13578:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13589:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13574:3:26"},"nodeType":"YulFunctionCall","src":"13574:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13566:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13396:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13410:4:26","type":""}],"src":"13245:353:26"},{"body":{"nodeType":"YulBlock","src":"13777:227:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13794:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13805:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13787:6:26"},"nodeType":"YulFunctionCall","src":"13787:21:26"},"nodeType":"YulExpressionStatement","src":"13787:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13828:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13839:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13824:3:26"},"nodeType":"YulFunctionCall","src":"13824:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"13844:2:26","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13817:6:26"},"nodeType":"YulFunctionCall","src":"13817:30:26"},"nodeType":"YulExpressionStatement","src":"13817:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13867:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13878:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13863:3:26"},"nodeType":"YulFunctionCall","src":"13863:18:26"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"13883:34:26","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13856:6:26"},"nodeType":"YulFunctionCall","src":"13856:62:26"},"nodeType":"YulExpressionStatement","src":"13856:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13938:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13949:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13934:3:26"},"nodeType":"YulFunctionCall","src":"13934:18:26"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"13954:7:26","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13927:6:26"},"nodeType":"YulFunctionCall","src":"13927:35:26"},"nodeType":"YulExpressionStatement","src":"13927:35:26"},{"nodeType":"YulAssignment","src":"13971:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13983:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13994:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13979:3:26"},"nodeType":"YulFunctionCall","src":"13979:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13971:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13754:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13768:4:26","type":""}],"src":"13603:401:26"},{"body":{"nodeType":"YulBlock","src":"14183:225:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14200:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14211:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14193:6:26"},"nodeType":"YulFunctionCall","src":"14193:21:26"},"nodeType":"YulExpressionStatement","src":"14193:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14234:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14245:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14230:3:26"},"nodeType":"YulFunctionCall","src":"14230:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"14250:2:26","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14223:6:26"},"nodeType":"YulFunctionCall","src":"14223:30:26"},"nodeType":"YulExpressionStatement","src":"14223:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14273:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14284:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14269:3:26"},"nodeType":"YulFunctionCall","src":"14269:18:26"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"14289:34:26","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14262:6:26"},"nodeType":"YulFunctionCall","src":"14262:62:26"},"nodeType":"YulExpressionStatement","src":"14262:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14344:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14355:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14340:3:26"},"nodeType":"YulFunctionCall","src":"14340:18:26"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"14360:5:26","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14333:6:26"},"nodeType":"YulFunctionCall","src":"14333:33:26"},"nodeType":"YulExpressionStatement","src":"14333:33:26"},{"nodeType":"YulAssignment","src":"14375:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14387:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14398:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14383:3:26"},"nodeType":"YulFunctionCall","src":"14383:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14375:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14160:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14174:4:26","type":""}],"src":"14009:399:26"},{"body":{"nodeType":"YulBlock","src":"14587:228:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14604:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14615:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14597:6:26"},"nodeType":"YulFunctionCall","src":"14597:21:26"},"nodeType":"YulExpressionStatement","src":"14597:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14638:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14649:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14634:3:26"},"nodeType":"YulFunctionCall","src":"14634:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"14654:2:26","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14627:6:26"},"nodeType":"YulFunctionCall","src":"14627:30:26"},"nodeType":"YulExpressionStatement","src":"14627:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14677:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14688:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14673:3:26"},"nodeType":"YulFunctionCall","src":"14673:18:26"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"14693:34:26","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14666:6:26"},"nodeType":"YulFunctionCall","src":"14666:62:26"},"nodeType":"YulExpressionStatement","src":"14666:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14748:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14759:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14744:3:26"},"nodeType":"YulFunctionCall","src":"14744:18:26"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"14764:8:26","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14737:6:26"},"nodeType":"YulFunctionCall","src":"14737:36:26"},"nodeType":"YulExpressionStatement","src":"14737:36:26"},{"nodeType":"YulAssignment","src":"14782:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14794:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14805:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14790:3:26"},"nodeType":"YulFunctionCall","src":"14790:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14782:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14564:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14578:4:26","type":""}],"src":"14413:402:26"},{"body":{"nodeType":"YulBlock","src":"14869:79:26","statements":[{"nodeType":"YulAssignment","src":"14879:17:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"14891:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"14894:1:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14887:3:26"},"nodeType":"YulFunctionCall","src":"14887:9:26"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"14879:4:26"}]},{"body":{"nodeType":"YulBlock","src":"14920:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14922:16:26"},"nodeType":"YulFunctionCall","src":"14922:18:26"},"nodeType":"YulExpressionStatement","src":"14922:18:26"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"14911:4:26"},{"name":"x","nodeType":"YulIdentifier","src":"14917:1:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14908:2:26"},"nodeType":"YulFunctionCall","src":"14908:11:26"},"nodeType":"YulIf","src":"14905:37:26"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"14851:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"14854:1:26","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"14860:4:26","type":""}],"src":"14820:128:26"},{"body":{"nodeType":"YulBlock","src":"15127:228:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15144:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15155:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15137:6:26"},"nodeType":"YulFunctionCall","src":"15137:21:26"},"nodeType":"YulExpressionStatement","src":"15137:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15178:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15189:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15174:3:26"},"nodeType":"YulFunctionCall","src":"15174:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"15194:2:26","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15167:6:26"},"nodeType":"YulFunctionCall","src":"15167:30:26"},"nodeType":"YulExpressionStatement","src":"15167:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15217:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15228:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15213:3:26"},"nodeType":"YulFunctionCall","src":"15213:18:26"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033","kind":"string","nodeType":"YulLiteral","src":"15233:34:26","type":"","value":"SafeCast: value doesn't fit in 3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15206:6:26"},"nodeType":"YulFunctionCall","src":"15206:62:26"},"nodeType":"YulExpressionStatement","src":"15206:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15288:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15299:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15284:3:26"},"nodeType":"YulFunctionCall","src":"15284:18:26"},{"hexValue":"322062697473","kind":"string","nodeType":"YulLiteral","src":"15304:8:26","type":"","value":"2 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15277:6:26"},"nodeType":"YulFunctionCall","src":"15277:36:26"},"nodeType":"YulExpressionStatement","src":"15277:36:26"},{"nodeType":"YulAssignment","src":"15322:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15334:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15345:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15330:3:26"},"nodeType":"YulFunctionCall","src":"15330:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15322:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15104:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15118:4:26","type":""}],"src":"14953:402:26"},{"body":{"nodeType":"YulBlock","src":"15534:228:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15551:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15562:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15544:6:26"},"nodeType":"YulFunctionCall","src":"15544:21:26"},"nodeType":"YulExpressionStatement","src":"15544:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15585:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15596:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15581:3:26"},"nodeType":"YulFunctionCall","src":"15581:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"15601:2:26","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15574:6:26"},"nodeType":"YulFunctionCall","src":"15574:30:26"},"nodeType":"YulExpressionStatement","src":"15574:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15624:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15635:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15620:3:26"},"nodeType":"YulFunctionCall","src":"15620:18:26"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034","kind":"string","nodeType":"YulLiteral","src":"15640:34:26","type":"","value":"SafeCast: value doesn't fit in 4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15613:6:26"},"nodeType":"YulFunctionCall","src":"15613:62:26"},"nodeType":"YulExpressionStatement","src":"15613:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15695:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15706:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15691:3:26"},"nodeType":"YulFunctionCall","src":"15691:18:26"},{"hexValue":"382062697473","kind":"string","nodeType":"YulLiteral","src":"15711:8:26","type":"","value":"8 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15684:6:26"},"nodeType":"YulFunctionCall","src":"15684:36:26"},"nodeType":"YulExpressionStatement","src":"15684:36:26"},{"nodeType":"YulAssignment","src":"15729:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15741:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15752:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15737:3:26"},"nodeType":"YulFunctionCall","src":"15737:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15729:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15511:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15525:4:26","type":""}],"src":"15360:402:26"},{"body":{"nodeType":"YulBlock","src":"16156:423:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16173:3:26"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"16178:25:26","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16166:6:26"},"nodeType":"YulFunctionCall","src":"16166:38:26"},"nodeType":"YulExpressionStatement","src":"16166:38:26"},{"nodeType":"YulVariableDeclaration","src":"16213:27:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16233:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16227:5:26"},"nodeType":"YulFunctionCall","src":"16227:13:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16217:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16288:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"16296:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16284:3:26"},"nodeType":"YulFunctionCall","src":"16284:17:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16307:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"16312:2:26","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16303:3:26"},"nodeType":"YulFunctionCall","src":"16303:12:26"},{"name":"length","nodeType":"YulIdentifier","src":"16317:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16249:34:26"},"nodeType":"YulFunctionCall","src":"16249:75:26"},"nodeType":"YulExpressionStatement","src":"16249:75:26"},{"nodeType":"YulVariableDeclaration","src":"16333:26:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16347:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"16352:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16343:3:26"},"nodeType":"YulFunctionCall","src":"16343:16:26"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"16337:2:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"16379:2:26"},{"kind":"number","nodeType":"YulLiteral","src":"16383:2:26","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16375:3:26"},"nodeType":"YulFunctionCall","src":"16375:11:26"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"16388:19:26","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16368:6:26"},"nodeType":"YulFunctionCall","src":"16368:40:26"},"nodeType":"YulExpressionStatement","src":"16368:40:26"},{"nodeType":"YulVariableDeclaration","src":"16417:29:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16439:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16433:5:26"},"nodeType":"YulFunctionCall","src":"16433:13:26"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"16421:8:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16494:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"16502:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16490:3:26"},"nodeType":"YulFunctionCall","src":"16490:17:26"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"16513:2:26"},{"kind":"number","nodeType":"YulLiteral","src":"16517:2:26","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16509:3:26"},"nodeType":"YulFunctionCall","src":"16509:11:26"},{"name":"length_1","nodeType":"YulIdentifier","src":"16522:8:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16455:34:26"},"nodeType":"YulFunctionCall","src":"16455:76:26"},"nodeType":"YulExpressionStatement","src":"16455:76:26"},{"nodeType":"YulAssignment","src":"16540:33:26","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"16555:2:26"},{"name":"length_1","nodeType":"YulIdentifier","src":"16559:8:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16551:3:26"},"nodeType":"YulFunctionCall","src":"16551:17:26"},{"kind":"number","nodeType":"YulLiteral","src":"16570:2:26","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16547:3:26"},"nodeType":"YulFunctionCall","src":"16547:26:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16540:3:26"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16124:3:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16129:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16137:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16148:3:26","type":""}],"src":"15767:812:26"},{"body":{"nodeType":"YulBlock","src":"16797:276:26","statements":[{"nodeType":"YulAssignment","src":"16807:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16819:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16830:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16815:3:26"},"nodeType":"YulFunctionCall","src":"16815:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16807:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16850:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"16861:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16843:6:26"},"nodeType":"YulFunctionCall","src":"16843:25:26"},"nodeType":"YulExpressionStatement","src":"16843:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16888:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16899:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16884:3:26"},"nodeType":"YulFunctionCall","src":"16884:18:26"},{"name":"value1","nodeType":"YulIdentifier","src":"16904:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16877:6:26"},"nodeType":"YulFunctionCall","src":"16877:34:26"},"nodeType":"YulExpressionStatement","src":"16877:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16931:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16942:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16927:3:26"},"nodeType":"YulFunctionCall","src":"16927:18:26"},{"name":"value2","nodeType":"YulIdentifier","src":"16947:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16920:6:26"},"nodeType":"YulFunctionCall","src":"16920:34:26"},"nodeType":"YulExpressionStatement","src":"16920:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16974:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16985:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16970:3:26"},"nodeType":"YulFunctionCall","src":"16970:18:26"},{"name":"value3","nodeType":"YulIdentifier","src":"16990:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16963:6:26"},"nodeType":"YulFunctionCall","src":"16963:34:26"},"nodeType":"YulExpressionStatement","src":"16963:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17017:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17028:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17013:3:26"},"nodeType":"YulFunctionCall","src":"17013:19:26"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"17038:6:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17054:3:26","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"17059:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17050:3:26"},"nodeType":"YulFunctionCall","src":"17050:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"17063:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17046:3:26"},"nodeType":"YulFunctionCall","src":"17046:19:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17034:3:26"},"nodeType":"YulFunctionCall","src":"17034:32:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17006:6:26"},"nodeType":"YulFunctionCall","src":"17006:61:26"},"nodeType":"YulExpressionStatement","src":"17006:61:26"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16734:9:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16745:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16753:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16761:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16769:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16777:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16788:4:26","type":""}],"src":"16584:489:26"},{"body":{"nodeType":"YulBlock","src":"17110:95:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17127:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17134:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"17139:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17130:3:26"},"nodeType":"YulFunctionCall","src":"17130:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17120:6:26"},"nodeType":"YulFunctionCall","src":"17120:31:26"},"nodeType":"YulExpressionStatement","src":"17120:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17167:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17170:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17160:6:26"},"nodeType":"YulFunctionCall","src":"17160:15:26"},"nodeType":"YulExpressionStatement","src":"17160:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17191:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17194:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17184:6:26"},"nodeType":"YulFunctionCall","src":"17184:15:26"},"nodeType":"YulExpressionStatement","src":"17184:15:26"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"17078:127:26"},{"body":{"nodeType":"YulBlock","src":"17256:171:26","statements":[{"body":{"nodeType":"YulBlock","src":"17287:111:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17308:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17315:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"17320:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17311:3:26"},"nodeType":"YulFunctionCall","src":"17311:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17301:6:26"},"nodeType":"YulFunctionCall","src":"17301:31:26"},"nodeType":"YulExpressionStatement","src":"17301:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17352:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17355:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17345:6:26"},"nodeType":"YulFunctionCall","src":"17345:15:26"},"nodeType":"YulExpressionStatement","src":"17345:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17380:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17383:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17373:6:26"},"nodeType":"YulFunctionCall","src":"17373:15:26"},"nodeType":"YulExpressionStatement","src":"17373:15:26"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"17276:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17269:6:26"},"nodeType":"YulFunctionCall","src":"17269:9:26"},"nodeType":"YulIf","src":"17266:132:26"},{"nodeType":"YulAssignment","src":"17407:14:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"17416:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"17419:1:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"17412:3:26"},"nodeType":"YulFunctionCall","src":"17412:9:26"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"17407:1:26"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"17241:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"17244:1:26","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"17250:1:26","type":""}],"src":"17210:217:26"},{"body":{"nodeType":"YulBlock","src":"17606:238:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17623:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17634:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17616:6:26"},"nodeType":"YulFunctionCall","src":"17616:21:26"},"nodeType":"YulExpressionStatement","src":"17616:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17657:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17668:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17653:3:26"},"nodeType":"YulFunctionCall","src":"17653:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"17673:2:26","type":"","value":"48"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17646:6:26"},"nodeType":"YulFunctionCall","src":"17646:30:26"},"nodeType":"YulExpressionStatement","src":"17646:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17696:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17707:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17692:3:26"},"nodeType":"YulFunctionCall","src":"17692:18:26"},{"hexValue":"4552433230566f7465733a20746f74616c20737570706c79207269736b73206f","kind":"string","nodeType":"YulLiteral","src":"17712:34:26","type":"","value":"ERC20Votes: total supply risks o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17685:6:26"},"nodeType":"YulFunctionCall","src":"17685:62:26"},"nodeType":"YulExpressionStatement","src":"17685:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17767:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17778:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17763:3:26"},"nodeType":"YulFunctionCall","src":"17763:18:26"},{"hexValue":"766572666c6f77696e6720766f746573","kind":"string","nodeType":"YulLiteral","src":"17783:18:26","type":"","value":"verflowing votes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17756:6:26"},"nodeType":"YulFunctionCall","src":"17756:46:26"},"nodeType":"YulExpressionStatement","src":"17756:46:26"},{"nodeType":"YulAssignment","src":"17811:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17823:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17834:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17819:3:26"},"nodeType":"YulFunctionCall","src":"17819:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17811:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17583:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17597:4:26","type":""}],"src":"17432:412:26"},{"body":{"nodeType":"YulBlock","src":"17978:119:26","statements":[{"nodeType":"YulAssignment","src":"17988:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18000:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18011:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17996:3:26"},"nodeType":"YulFunctionCall","src":"17996:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17988:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18030:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"18041:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18023:6:26"},"nodeType":"YulFunctionCall","src":"18023:25:26"},"nodeType":"YulExpressionStatement","src":"18023:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18068:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18079:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18064:3:26"},"nodeType":"YulFunctionCall","src":"18064:18:26"},{"name":"value1","nodeType":"YulIdentifier","src":"18084:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18057:6:26"},"nodeType":"YulFunctionCall","src":"18057:34:26"},"nodeType":"YulExpressionStatement","src":"18057:34:26"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17939:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17950:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17958:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17969:4:26","type":""}],"src":"17849:248:26"},{"body":{"nodeType":"YulBlock","src":"18283:217:26","statements":[{"nodeType":"YulAssignment","src":"18293:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18305:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18316:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18301:3:26"},"nodeType":"YulFunctionCall","src":"18301:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18293:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18336:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"18347:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18329:6:26"},"nodeType":"YulFunctionCall","src":"18329:25:26"},"nodeType":"YulExpressionStatement","src":"18329:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18374:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18385:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18370:3:26"},"nodeType":"YulFunctionCall","src":"18370:18:26"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18394:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"18402:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18390:3:26"},"nodeType":"YulFunctionCall","src":"18390:17:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18363:6:26"},"nodeType":"YulFunctionCall","src":"18363:45:26"},"nodeType":"YulExpressionStatement","src":"18363:45:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18428:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18439:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18424:3:26"},"nodeType":"YulFunctionCall","src":"18424:18:26"},{"name":"value2","nodeType":"YulIdentifier","src":"18444:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18417:6:26"},"nodeType":"YulFunctionCall","src":"18417:34:26"},"nodeType":"YulExpressionStatement","src":"18417:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18471:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18482:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18467:3:26"},"nodeType":"YulFunctionCall","src":"18467:18:26"},{"name":"value3","nodeType":"YulIdentifier","src":"18487:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18460:6:26"},"nodeType":"YulFunctionCall","src":"18460:34:26"},"nodeType":"YulExpressionStatement","src":"18460:34:26"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18228:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18239:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18247:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18255:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18263:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18274:4:26","type":""}],"src":"18102:398:26"},{"body":{"nodeType":"YulBlock","src":"18537:95:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18554:1:26","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18561:3:26","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"18566:10:26","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18557:3:26"},"nodeType":"YulFunctionCall","src":"18557:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18547:6:26"},"nodeType":"YulFunctionCall","src":"18547:31:26"},"nodeType":"YulExpressionStatement","src":"18547:31:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18594:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18597:4:26","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18587:6:26"},"nodeType":"YulFunctionCall","src":"18587:15:26"},"nodeType":"YulExpressionStatement","src":"18587:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18618:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18621:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18611:6:26"},"nodeType":"YulFunctionCall","src":"18611:15:26"},"nodeType":"YulExpressionStatement","src":"18611:15:26"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"18505:127:26"},{"body":{"nodeType":"YulBlock","src":"18811:174:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18828:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18839:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18821:6:26"},"nodeType":"YulFunctionCall","src":"18821:21:26"},"nodeType":"YulExpressionStatement","src":"18821:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18862:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18873:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18858:3:26"},"nodeType":"YulFunctionCall","src":"18858:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"18878:2:26","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18851:6:26"},"nodeType":"YulFunctionCall","src":"18851:30:26"},"nodeType":"YulExpressionStatement","src":"18851:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18901:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18912:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18897:3:26"},"nodeType":"YulFunctionCall","src":"18897:18:26"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"18917:26:26","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18890:6:26"},"nodeType":"YulFunctionCall","src":"18890:54:26"},"nodeType":"YulExpressionStatement","src":"18890:54:26"},{"nodeType":"YulAssignment","src":"18953:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18965:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18976:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18961:3:26"},"nodeType":"YulFunctionCall","src":"18961:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18953:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18788:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18802:4:26","type":""}],"src":"18637:348:26"},{"body":{"nodeType":"YulBlock","src":"19164:181:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19181:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19192:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19174:6:26"},"nodeType":"YulFunctionCall","src":"19174:21:26"},"nodeType":"YulExpressionStatement","src":"19174:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19215:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19226:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19211:3:26"},"nodeType":"YulFunctionCall","src":"19211:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"19231:2:26","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19204:6:26"},"nodeType":"YulFunctionCall","src":"19204:30:26"},"nodeType":"YulExpressionStatement","src":"19204:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19254:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19265:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19250:3:26"},"nodeType":"YulFunctionCall","src":"19250:18:26"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"19270:33:26","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19243:6:26"},"nodeType":"YulFunctionCall","src":"19243:61:26"},"nodeType":"YulExpressionStatement","src":"19243:61:26"},{"nodeType":"YulAssignment","src":"19313:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19325:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19336:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19321:3:26"},"nodeType":"YulFunctionCall","src":"19321:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19313:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19141:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19155:4:26","type":""}],"src":"18990:355:26"},{"body":{"nodeType":"YulBlock","src":"19524:224:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19541:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19552:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19534:6:26"},"nodeType":"YulFunctionCall","src":"19534:21:26"},"nodeType":"YulExpressionStatement","src":"19534:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19575:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19586:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19571:3:26"},"nodeType":"YulFunctionCall","src":"19571:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"19591:2:26","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19564:6:26"},"nodeType":"YulFunctionCall","src":"19564:30:26"},"nodeType":"YulExpressionStatement","src":"19564:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19614:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19625:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19610:3:26"},"nodeType":"YulFunctionCall","src":"19610:18:26"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"19630:34:26","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19603:6:26"},"nodeType":"YulFunctionCall","src":"19603:62:26"},"nodeType":"YulExpressionStatement","src":"19603:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19685:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19696:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19681:3:26"},"nodeType":"YulFunctionCall","src":"19681:18:26"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"19701:4:26","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19674:6:26"},"nodeType":"YulFunctionCall","src":"19674:32:26"},"nodeType":"YulExpressionStatement","src":"19674:32:26"},{"nodeType":"YulAssignment","src":"19715:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19727:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19738:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19723:3:26"},"nodeType":"YulFunctionCall","src":"19723:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19715:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19501:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19515:4:26","type":""}],"src":"19350:398:26"},{"body":{"nodeType":"YulBlock","src":"19805:116:26","statements":[{"nodeType":"YulAssignment","src":"19815:20:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19830:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"19833:1:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19826:3:26"},"nodeType":"YulFunctionCall","src":"19826:9:26"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"19815:7:26"}]},{"body":{"nodeType":"YulBlock","src":"19893:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19895:16:26"},"nodeType":"YulFunctionCall","src":"19895:18:26"},"nodeType":"YulExpressionStatement","src":"19895:18:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19864:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19857:6:26"},"nodeType":"YulFunctionCall","src":"19857:9:26"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19871:1:26"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"19878:7:26"},{"name":"x","nodeType":"YulIdentifier","src":"19887:1:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"19874:3:26"},"nodeType":"YulFunctionCall","src":"19874:15:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19868:2:26"},"nodeType":"YulFunctionCall","src":"19868:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19854:2:26"},"nodeType":"YulFunctionCall","src":"19854:37:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19847:6:26"},"nodeType":"YulFunctionCall","src":"19847:45:26"},"nodeType":"YulIf","src":"19844:71:26"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19784:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"19787:1:26","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"19793:7:26","type":""}],"src":"19753:168:26"},{"body":{"nodeType":"YulBlock","src":"19973:89:26","statements":[{"body":{"nodeType":"YulBlock","src":"20000:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20002:16:26"},"nodeType":"YulFunctionCall","src":"20002:18:26"},"nodeType":"YulExpressionStatement","src":"20002:18:26"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19993:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19986:6:26"},"nodeType":"YulFunctionCall","src":"19986:13:26"},"nodeType":"YulIf","src":"19983:39:26"},{"nodeType":"YulAssignment","src":"20031:25:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20042:5:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20053:1:26","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20049:3:26"},"nodeType":"YulFunctionCall","src":"20049:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20038:3:26"},"nodeType":"YulFunctionCall","src":"20038:18:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20031:3:26"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19955:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19965:3:26","type":""}],"src":"19926:136:26"},{"body":{"nodeType":"YulBlock","src":"20241:182:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20258:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20269:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20251:6:26"},"nodeType":"YulFunctionCall","src":"20251:21:26"},"nodeType":"YulExpressionStatement","src":"20251:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20292:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20303:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20288:3:26"},"nodeType":"YulFunctionCall","src":"20288:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"20308:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20281:6:26"},"nodeType":"YulFunctionCall","src":"20281:30:26"},"nodeType":"YulExpressionStatement","src":"20281:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20331:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20342:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20327:3:26"},"nodeType":"YulFunctionCall","src":"20327:18:26"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"20347:34:26","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20320:6:26"},"nodeType":"YulFunctionCall","src":"20320:62:26"},"nodeType":"YulExpressionStatement","src":"20320:62:26"},{"nodeType":"YulAssignment","src":"20391:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20403:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20414:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20399:3:26"},"nodeType":"YulFunctionCall","src":"20399:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20391:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20218:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20232:4:26","type":""}],"src":"20067:356:26"},{"body":{"nodeType":"YulBlock","src":"20602:181:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20619:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20630:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20612:6:26"},"nodeType":"YulFunctionCall","src":"20612:21:26"},"nodeType":"YulExpressionStatement","src":"20612:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20653:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20664:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20649:3:26"},"nodeType":"YulFunctionCall","src":"20649:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"20669:2:26","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20642:6:26"},"nodeType":"YulFunctionCall","src":"20642:30:26"},"nodeType":"YulExpressionStatement","src":"20642:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20692:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20703:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20688:3:26"},"nodeType":"YulFunctionCall","src":"20688:18:26"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"20708:33:26","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20681:6:26"},"nodeType":"YulFunctionCall","src":"20681:61:26"},"nodeType":"YulExpressionStatement","src":"20681:61:26"},{"nodeType":"YulAssignment","src":"20751:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20763:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20774:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20759:3:26"},"nodeType":"YulFunctionCall","src":"20759:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20751:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20579:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20593:4:26","type":""}],"src":"20428:355:26"},{"body":{"nodeType":"YulBlock","src":"20962:229:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20979:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20990:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20972:6:26"},"nodeType":"YulFunctionCall","src":"20972:21:26"},"nodeType":"YulExpressionStatement","src":"20972:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21013:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21024:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21009:3:26"},"nodeType":"YulFunctionCall","src":"21009:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"21029:2:26","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21002:6:26"},"nodeType":"YulFunctionCall","src":"21002:30:26"},"nodeType":"YulExpressionStatement","src":"21002:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21052:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21063:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21048:3:26"},"nodeType":"YulFunctionCall","src":"21048:18:26"},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032","kind":"string","nodeType":"YulLiteral","src":"21068:34:26","type":"","value":"SafeCast: value doesn't fit in 2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21041:6:26"},"nodeType":"YulFunctionCall","src":"21041:62:26"},"nodeType":"YulExpressionStatement","src":"21041:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21123:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21134:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21119:3:26"},"nodeType":"YulFunctionCall","src":"21119:18:26"},{"hexValue":"32342062697473","kind":"string","nodeType":"YulLiteral","src":"21139:9:26","type":"","value":"24 bits"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21112:6:26"},"nodeType":"YulFunctionCall","src":"21112:37:26"},"nodeType":"YulExpressionStatement","src":"21112:37:26"},{"nodeType":"YulAssignment","src":"21158:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21170:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21181:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21166:3:26"},"nodeType":"YulFunctionCall","src":"21166:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21158:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20939:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20953:4:26","type":""}],"src":"20788:403:26"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        let _1 := 32\n        mstore(add(headStart, _1), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, _1)\n        let srcPtr := add(value6, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffff))\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_uint8(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := abi_decode_uint8(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_encode_tuple_t_struct$_Checkpoint_$1369_memory_ptr__to_t_struct$_Checkpoint_$1369_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(mload(value0), 0xffffffff))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), sub(shl(224, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_9fb4d8462c9084391e0cf06f1b2a0a5b1a23dc8fede26e3b7b37154948e87a72__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC20Votes: future lookup\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d8b645ec611d4ec3e2023618b4603d577ce189d5bc833b5325ebd41cfe74f8df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20Votes: broken clock mode\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_136d0f69bc85a5c125b5cc368e2880ebdb3c89d4d9828f6476431c386ea60257__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20Votes: signature expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_1a23b43d95073d55a7380117ca03cace60cd22fee15d5cb140d51e46236e6872__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC20Votes: invalid nonce\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20Permit: expired deadline\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"ERC20Permit: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 3\")\n        mstore(add(headStart, 96), \"2 bits\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 4\")\n        mstore(add(headStart, 96), \"8 bits\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_97859f657b3d95198b68f29ae96ee966779795bec3ef1e76700d2d39fefd7699__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"ERC20Votes: total supply risks o\")\n        mstore(add(headStart, 96), \"verflowing votes\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 's' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"SafeCast: value doesn't fit in 2\")\n        mstore(add(headStart, 96), \"24 bits\")\n        tail := add(headStart, 128)\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3184":[{"length":32,"start":4767}],"3186":[{"length":32,"start":4725}],"3188":[{"length":32,"start":4683}],"3190":[{"length":32,"start":4848}],"3192":[{"length":32,"start":4888}],"3195":[{"length":32,"start":2246}],"3198":[{"length":32,"start":2289}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106102065760003560e01c806370a082311161011a578063a217fddf116100ad578063d505accf1161007c578063d505accf1461049a578063d5391393146104ad578063d547741f146104d4578063dd62ed3e146104e7578063f1127ed8146104fa57600080fd5b8063a217fddf14610459578063a457c2d714610461578063a9059cbb14610474578063c3cda5201461048757600080fd5b806391d14854116100e957806391d148541461040c57806391ddadf41461041f57806395d89b411461043e5780639ab24eb01461044657600080fd5b806370a08231146103a25780637ecebe00146103cb57806384b0196e146103de5780638e539e8c146103f957600080fd5b80633644e5151161019d57806340c10f191161016c57806340c10f19146103085780634bf5d7e91461031b578063587cde1e146103235780635c19a95c146103675780636fcfff451461037a57600080fd5b80633644e515146102c757806336568abe146102cf57806339509351146102e25780633a46b1a8146102f557600080fd5b806323b872dd116101d957806323b872dd1461026d578063248a9ca3146102805780632f2ff15d146102a3578063313ce567146102b857600080fd5b806301ffc9a71461020b57806306fdde0314610233578063095ea7b31461024857806318160ddd1461025b575b600080fd5b61021e61021936600461221e565b610537565b60405190151581526020015b60405180910390f35b61023b61056e565b60405161022a9190612298565b61021e6102563660046122c7565b610600565b6002545b60405190815260200161022a565b61021e61027b3660046122f1565b610618565b61025f61028e36600461232d565b60009081526005602052604090206001015490565b6102b66102b1366004612346565b61063c565b005b6040516012815260200161022a565b61025f610666565b6102b66102dd366004612346565b610675565b61021e6102f03660046122c7565b6106f8565b61025f6103033660046122c7565b61071a565b6102b66103163660046122c7565b61079f565b61023b6107d3565b61034f610331366004612372565b6001600160a01b039081166000908152600a60205260409020541690565b6040516001600160a01b03909116815260200161022a565b6102b6610375366004612372565b61086b565b61038d610388366004612372565b610878565b60405163ffffffff909116815260200161022a565b61025f6103b0366004612372565b6001600160a01b031660009081526020819052604090205490565b61025f6103d9366004612372565b61089a565b6103e66108b8565b60405161022a979695949392919061238d565b61025f61040736600461232d565b610941565b61021e61041a366004612346565b6109a8565b6104276109d3565b60405165ffffffffffff909116815260200161022a565b61023b6109de565b61025f610454366004612372565b6109ed565b61025f600081565b61021e61046f3660046122c7565b610a6f565b61021e6104823660046122c7565b610aea565b6102b6610495366004612434565b610af8565b6102b66104a836600461248c565b610c2e565b61025f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102b66104e2366004612346565b610d92565b61025f6104f53660046124f6565b610db7565b61050d610508366004612520565b610de2565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161022a565b60006001600160e01b03198216637965db0b60e01b148061056857506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606003805461057d90612560565b80601f01602080910402602001604051908101604052809291908181526020018280546105a990612560565b80156105f65780601f106105cb576101008083540402835291602001916105f6565b820191906000526020600020905b8154815290600101906020018083116105d957829003601f168201915b5050505050905090565b60003361060e818585610e66565b5060019392505050565b600033610626858285610f8a565b610631858585611004565b506001949350505050565b600082815260056020526040902060010154610657816111ae565b61066183836111b8565b505050565b600061067061123e565b905090565b6001600160a01b03811633146106ea5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6106f48282611369565b5050565b60003361060e81858561070b8383610db7565b61071591906125aa565b610e66565b60006107246109d3565b65ffffffffffff1682106107765760405162461bcd60e51b815260206004820152601960248201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b60448201526064016106e1565b6001600160a01b0383166000908152600b6020526040902061079890836113d0565b9392505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66107c9816111ae565b61066183836114b9565b6060436107de6109d3565b65ffffffffffff16146108335760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a2062726f6b656e20636c6f636b206d6f646500000060448201526064016106e1565b5060408051808201909152601d81527f6d6f64653d626c6f636b6e756d6265722666726f6d3d64656661756c74000000602082015290565b61087533826114c3565b50565b6001600160a01b0381166000908152600b60205260408120546105689061153c565b6001600160a01b038116600090815260086020526040812054610568565b6000606080828080836108ec7f000000000000000000000000000000000000000000000000000000000000000060066115a5565b6109177f000000000000000000000000000000000000000000000000000000000000000060076115a5565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b600061094b6109d3565b65ffffffffffff16821061099d5760405162461bcd60e51b815260206004820152601960248201527804552433230566f7465733a20667574757265206c6f6f6b757603c1b60448201526064016106e1565b610568600c836113d0565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600061067043611650565b60606004805461057d90612560565b6001600160a01b0381166000908152600b60205260408120548015610a5c576001600160a01b0383166000908152600b6020526040902080546000198301908110610a3a57610a3a6125d3565b60009182526020909120015464010000000090046001600160e01b0316610a5f565b60005b6001600160e01b03169392505050565b60003381610a7d8286610db7565b905083811015610add5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106e1565b6106318286868403610e66565b60003361060e818585611004565b83421115610b485760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016106e1565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610bc290610bba9060a001604051602081830303815290604052805190602001206116b7565b8585856116e4565b9050610bcd8161170c565b8614610c1b5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016106e1565b610c2581886114c3565b50505050505050565b83421115610c7e5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016106e1565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610cad8c61170c565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610d08826116b7565b90506000610d18828787876116e4565b9050896001600160a01b0316816001600160a01b031614610d7b5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016106e1565b610d868a8a8a610e66565b50505050505050505050565b600082815260056020526040902060010154610dad816111ae565b6106618383611369565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600b60205260409020805463ffffffff8416908110610e2657610e266125d3565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6001600160a01b038316610ec85760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106e1565b6001600160a01b038216610f295760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106e1565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610f968484610db7565b90506000198114610ffe5781811015610ff15760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106e1565b610ffe8484848403610e66565b50505050565b6001600160a01b0383166110685760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106e1565b6001600160a01b0382166110ca5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106e1565b6001600160a01b038316600090815260208190526040902054818110156111425760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106e1565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610ffe848484611734565b610875813361173f565b6111c282826109a8565b6106f45760008281526005602090815260408083206001600160a01b03851684529091529020805460ff191660011790556111fa3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561129757507f000000000000000000000000000000000000000000000000000000000000000046145b156112c157507f000000000000000000000000000000000000000000000000000000000000000090565b610670604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b61137382826109a8565b156106f45760008281526005602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b81546000908181600581111561142a5760006113eb84611798565b6113f590856125e9565b600088815260209020909150869082015463ffffffff16111561141a57809150611428565b6114258160016125aa565b92505b505b8082101561147757600061143e8383611880565b600088815260209020909150869082015463ffffffff16111561146357809150611471565b61146e8160016125aa565b92505b5061142a565b80156114a3576000868152602090208101600019015464010000000090046001600160e01b03166114a6565b60005b6001600160e01b03169695505050505050565b6106f4828261189b565b6001600160a01b038281166000818152600a60208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610ffe828483611925565b600063ffffffff8211156115a15760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016106e1565b5090565b606060ff83146115bf576115b883611a62565b9050610568565b8180546115cb90612560565b80601f01602080910402602001604051908101604052809291908181526020018280546115f790612560565b80156116445780601f1061161957610100808354040283529160200191611644565b820191906000526020600020905b81548152906001019060200180831161162757829003601f168201915b50505050509050610568565b600065ffffffffffff8211156115a15760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b60648201526084016106e1565b60006105686116c461123e565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060006116f587878787611aa1565b9150915061170281611b65565b5095945050505050565b6001600160a01b03811660009081526008602052604090208054600181018255905b50919050565b610661838383611caf565b61174982826109a8565b6106f45761175681611ce1565b611761836020611cf3565b6040516020016117729291906125fc565b60408051601f198184030181529082905262461bcd60e51b82526106e191600401612298565b6000816000036117aa57506000919050565b600060016117b784611e8f565b901c6001901b905060018184816117d0576117d0612671565b048201901c905060018184816117e8576117e8612671565b048201901c9050600181848161180057611800612671565b048201901c9050600181848161181857611818612671565b048201901c9050600181848161183057611830612671565b048201901c9050600181848161184857611848612671565b048201901c9050600181848161186057611860612671565b048201901c90506107988182858161187a5761187a612671565b04611f23565b600061188f6002848418612687565b610798908484166125aa565b6118a58282611f39565b6002546001600160e01b0310156119175760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084016106e1565b610ffe600c6120008361200c565b816001600160a01b0316836001600160a01b0316141580156119475750600081115b15610661576001600160a01b038316156119d5576001600160a01b0383166000908152600b602052604081208190611982906121818561200c565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516119ca929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610661576001600160a01b0382166000908152600b602052604081208190611a0b906120008561200c565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611a53929190918252602082015260400190565b60405180910390a25050505050565b60606000611a6f8361218d565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611ad85750600090506003611b5c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611b2c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611b5557600060019250925050611b5c565b9150600090505b94509492505050565b6000816004811115611b7957611b796126a9565b03611b815750565b6001816004811115611b9557611b956126a9565b03611be25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106e1565b6002816004811115611bf657611bf66126a9565b03611c435760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106e1565b6003816004811115611c5757611c576126a9565b036108755760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106e1565b6001600160a01b038381166000908152600a602052604080822054858416835291205461066192918216911683611925565b60606105686001600160a01b03831660145b60606000611d028360026126bf565b611d0d9060026125aa565b67ffffffffffffffff811115611d2557611d256125bd565b6040519080825280601f01601f191660200182016040528015611d4f576020820181803683370190505b509050600360fc1b81600081518110611d6a57611d6a6125d3565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611d9957611d996125d3565b60200101906001600160f81b031916908160001a9053506000611dbd8460026126bf565b611dc89060016125aa565b90505b6001811115611e40576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611dfc57611dfc6125d3565b1a60f81b828281518110611e1257611e126125d3565b60200101906001600160f81b031916908160001a90535060049490941c93611e39816126d6565b9050611dcb565b5083156107985760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016106e1565b600080608083901c15611ea457608092831c92015b604083901c15611eb657604092831c92015b602083901c15611ec857602092831c92015b601083901c15611eda57601092831c92015b600883901c15611eec57600892831c92015b600483901c15611efe57600492831c92015b600283901c15611f1057600292831c92015b600183901c156105685760010192915050565b6000818310611f325781610798565b5090919050565b6001600160a01b038216611f8f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106e1565b8060026000828254611fa191906125aa565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36106f460008383611734565b600061079882846125aa565b825460009081908181156120595760008781526020902082016000190160408051808201909152905463ffffffff8116825264010000000090046001600160e01b0316602082015261206e565b60408051808201909152600080825260208201525b905080602001516001600160e01b0316935061208e84868863ffffffff16565b92506000821180156120b857506120a36109d3565b65ffffffffffff16816000015163ffffffff16145b156120fd576120c6836121b5565b60008881526020902083016000190180546001600160e01b03929092166401000000000263ffffffff909216919091179055612177565b8660405180604001604052806121216121146109d3565b65ffffffffffff1661153c565b63ffffffff168152602001612135866121b5565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b600061079882846125e9565b600060ff8216601f81111561056857604051632cd44ac360e21b815260040160405180910390fd5b60006001600160e01b038211156115a15760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016106e1565b60006020828403121561223057600080fd5b81356001600160e01b03198116811461079857600080fd5b60005b8381101561226357818101518382015260200161224b565b50506000910152565b60008151808452612284816020860160208601612248565b601f01601f19169290920160200192915050565b602081526000610798602083018461226c565b80356001600160a01b03811681146122c257600080fd5b919050565b600080604083850312156122da57600080fd5b6122e3836122ab565b946020939093013593505050565b60008060006060848603121561230657600080fd5b61230f846122ab565b925061231d602085016122ab565b9150604084013590509250925092565b60006020828403121561233f57600080fd5b5035919050565b6000806040838503121561235957600080fd5b82359150612369602084016122ab565b90509250929050565b60006020828403121561238457600080fd5b610798826122ab565b60ff60f81b881681526000602060e0818401526123ad60e084018a61226c565b83810360408501526123bf818a61226c565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015612411578351835292840192918401916001016123f5565b50909c9b505050505050505050505050565b803560ff811681146122c257600080fd5b60008060008060008060c0878903121561244d57600080fd5b612456876122ab565b9550602087013594506040870135935061247260608801612423565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a0312156124a757600080fd5b6124b0886122ab565b96506124be602089016122ab565b955060408801359450606088013593506124da60808901612423565b925060a0880135915060c0880135905092959891949750929550565b6000806040838503121561250957600080fd5b612512836122ab565b9150612369602084016122ab565b6000806040838503121561253357600080fd5b61253c836122ab565b9150602083013563ffffffff8116811461255557600080fd5b809150509250929050565b600181811c9082168061257457607f821691505b60208210810361172e57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561056857610568612594565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b8181038181111561056857610568612594565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612634816017850160208801612248565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612665816028840160208801612248565b01602801949350505050565b634e487b7160e01b600052601260045260246000fd5b6000826126a457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b808202811582820484141761056857610568612594565b6000816126e5576126e5612594565b50600019019056fea26469706673582212202608697cc28008a41ec14e7b37325787d50700ba64c484f75a68a89fbbd1a59e64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD505ACCF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4E7 JUMPI DUP1 PUSH4 0xF1127ED8 EQ PUSH2 0x4FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x461 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0xC3CDA520 EQ PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0x91DDADF4 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x9AB24EB0 EQ PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x3DE JUMPI DUP1 PUSH4 0x8E539E8C EQ PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x40C10F19 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x4BF5D7E9 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x587CDE1E EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x6FCFFF45 EQ PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x3A46B1A8 EQ PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x221E JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x2298 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x22C7 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x21E PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x22F1 JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x232D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2B6 PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2346 JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x25F PUSH2 0x666 JUMP JUMPDEST PUSH2 0x2B6 PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x2346 JUMP JUMPDEST PUSH2 0x675 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x2F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x22C7 JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x22C7 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST PUSH2 0x2B6 PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x22C7 JUMP JUMPDEST PUSH2 0x79F JUMP JUMPDEST PUSH2 0x23B PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0x34F PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x2B6 PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x2372 JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST PUSH2 0x38D PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0x2372 JUMP JUMPDEST PUSH2 0x878 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x25F PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2372 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2372 JUMP JUMPDEST PUSH2 0x89A JUMP JUMPDEST PUSH2 0x3E6 PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x238D JUMP JUMPDEST PUSH2 0x25F PUSH2 0x407 CALLDATASIZE PUSH1 0x4 PUSH2 0x232D JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x41A CALLDATASIZE PUSH1 0x4 PUSH2 0x2346 JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x427 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x23B PUSH2 0x9DE JUMP JUMPDEST PUSH2 0x25F PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x2372 JUMP JUMPDEST PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x25F PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x46F CALLDATASIZE PUSH1 0x4 PUSH2 0x22C7 JUMP JUMPDEST PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x21E PUSH2 0x482 CALLDATASIZE PUSH1 0x4 PUSH2 0x22C7 JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x2B6 PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x2434 JUMP JUMPDEST PUSH2 0xAF8 JUMP JUMPDEST PUSH2 0x2B6 PUSH2 0x4A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x248C JUMP JUMPDEST PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x25F PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x2B6 PUSH2 0x4E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2346 JUMP JUMPDEST PUSH2 0xD92 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x4F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x24F6 JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x50D PUSH2 0x508 CALLDATASIZE PUSH1 0x4 PUSH2 0x2520 JUMP JUMPDEST PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x22A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x568 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x57D SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5A9 SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5CB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5F6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5D9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x60E DUP2 DUP6 DUP6 PUSH2 0xE66 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x626 DUP6 DUP3 DUP6 PUSH2 0xF8A JUMP JUMPDEST PUSH2 0x631 DUP6 DUP6 DUP6 PUSH2 0x1004 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x657 DUP2 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x661 DUP4 DUP4 PUSH2 0x11B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x670 PUSH2 0x123E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F4 DUP3 DUP3 PUSH2 0x1369 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x60E DUP2 DUP6 DUP6 PUSH2 0x70B DUP4 DUP4 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x715 SWAP2 SWAP1 PUSH2 0x25AA JUMP JUMPDEST PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x724 PUSH2 0x9D3 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x4552433230566F7465733A20667574757265206C6F6F6B757 PUSH1 0x3C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x798 SWAP1 DUP4 PUSH2 0x13D0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x7C9 DUP2 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x661 DUP4 DUP4 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x60 NUMBER PUSH2 0x7DE PUSH2 0x9D3 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND EQ PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A2062726F6B656E20636C6F636B206D6F6465000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH32 0x6D6F64653D626C6F636B6E756D6265722666726F6D3D64656661756C74000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x875 CALLER DUP3 PUSH2 0x14C3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x568 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x568 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP3 DUP1 DUP1 DUP4 PUSH2 0x8EC PUSH32 0x0 PUSH1 0x6 PUSH2 0x15A5 JUMP JUMPDEST PUSH2 0x917 PUSH32 0x0 PUSH1 0x7 PUSH2 0x15A5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94B PUSH2 0x9D3 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP3 LT PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x4552433230566F7465733A20667574757265206C6F6F6B757 PUSH1 0x3C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x568 PUSH1 0xC DUP4 PUSH2 0x13D0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x670 NUMBER PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x57D SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xA5C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT DUP4 ADD SWAP1 DUP2 LT PUSH2 0xA3A JUMPI PUSH2 0xA3A PUSH2 0x25D3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0xA5F JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0xA7D DUP3 DUP7 PUSH2 0xDB7 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xADD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x631 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x60E DUP2 DUP6 DUP6 PUSH2 0x1004 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xB48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A207369676E61747572652065787069726564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xE48329057BFD03D55E49B547132E39CFFD9C1820AD7B9D4C5307691425D15ADF PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xBC2 SWAP1 PUSH2 0xBBA SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x16B7 JUMP JUMPDEST DUP6 DUP6 DUP6 PUSH2 0x16E4 JUMP JUMPDEST SWAP1 POP PUSH2 0xBCD DUP2 PUSH2 0x170C JUMP JUMPDEST DUP7 EQ PUSH2 0xC1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20696E76616C6964206E6F6E636500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0xC25 DUP2 DUP9 PUSH2 0x14C3 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xC7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xCAD DUP13 PUSH2 0x170C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xD08 DUP3 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD18 DUP3 DUP8 DUP8 DUP8 PUSH2 0x16E4 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD7B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0xD86 DUP11 DUP11 DUP11 PUSH2 0xE66 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xDAD DUP2 PUSH2 0x11AE JUMP JUMPDEST PUSH2 0x661 DUP4 DUP4 PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP5 AND SWAP1 DUP2 LT PUSH2 0xE26 JUMPI PUSH2 0xE26 PUSH2 0x25D3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEC8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF96 DUP5 DUP5 PUSH2 0xDB7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xFFE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFF1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0xFFE DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xE66 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1068 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1142 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xFFE DUP5 DUP5 DUP5 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x875 DUP2 CALLER PUSH2 0x173F JUMP JUMPDEST PUSH2 0x11C2 DUP3 DUP3 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x11FA CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x1297 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x12C1 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x670 PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1373 DUP3 DUP3 PUSH2 0x9A8 JUMP JUMPDEST ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 DUP2 PUSH1 0x5 DUP2 GT ISZERO PUSH2 0x142A JUMPI PUSH1 0x0 PUSH2 0x13EB DUP5 PUSH2 0x1798 JUMP JUMPDEST PUSH2 0x13F5 SWAP1 DUP6 PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP7 SWAP1 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x141A JUMPI DUP1 SWAP2 POP PUSH2 0x1428 JUMP JUMPDEST PUSH2 0x1425 DUP2 PUSH1 0x1 PUSH2 0x25AA JUMP JUMPDEST SWAP3 POP JUMPDEST POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1477 JUMPI PUSH1 0x0 PUSH2 0x143E DUP4 DUP4 PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 SWAP1 SWAP2 POP DUP7 SWAP1 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1463 JUMPI DUP1 SWAP2 POP PUSH2 0x1471 JUMP JUMPDEST PUSH2 0x146E DUP2 PUSH1 0x1 PUSH2 0x25AA JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x142A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14A3 JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT ADD SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x6F4 DUP3 DUP3 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP5 MSTORE DUP3 DUP7 KECCAK256 SLOAD SWAP5 SWAP1 SWAP4 MSTORE DUP8 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP6 AND SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP2 PUSH32 0x3134E8A2E6D97E929A7E54011EA5485D7D196DD5F0BA4D4EF95803E8E3FC257F SWAP2 SWAP1 LOG4 PUSH2 0xFFE DUP3 DUP5 DUP4 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 GT ISZERO PUSH2 0x15A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2033 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x322062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x15BF JUMPI PUSH2 0x15B8 DUP4 PUSH2 0x1A62 JUMP JUMPDEST SWAP1 POP PUSH2 0x568 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x15CB SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15F7 SWAP1 PUSH2 0x2560 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1644 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1619 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1644 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1627 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH2 0x568 JUMP JUMPDEST PUSH1 0x0 PUSH6 0xFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2034 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x382062697473 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x568 PUSH2 0x16C4 PUSH2 0x123E JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x16F5 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1AA1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1702 DUP2 PUSH2 0x1B65 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x661 DUP4 DUP4 DUP4 PUSH2 0x1CAF JUMP JUMPDEST PUSH2 0x1749 DUP3 DUP3 PUSH2 0x9A8 JUMP JUMPDEST PUSH2 0x6F4 JUMPI PUSH2 0x1756 DUP2 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0x1761 DUP4 PUSH1 0x20 PUSH2 0x1CF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1772 SWAP3 SWAP2 SWAP1 PUSH2 0x25FC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x6E1 SWAP2 PUSH1 0x4 ADD PUSH2 0x2298 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0x17AA JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x17B7 DUP5 PUSH2 0x1E8F JUMP JUMPDEST SWAP1 SHR PUSH1 0x1 SWAP1 SHL SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x17D0 JUMPI PUSH2 0x17D0 PUSH2 0x2671 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x17E8 JUMPI PUSH2 0x17E8 PUSH2 0x2671 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1800 JUMPI PUSH2 0x1800 PUSH2 0x2671 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1818 JUMPI PUSH2 0x1818 PUSH2 0x2671 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1830 JUMPI PUSH2 0x1830 PUSH2 0x2671 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1848 JUMPI PUSH2 0x1848 PUSH2 0x2671 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP5 DUP2 PUSH2 0x1860 JUMPI PUSH2 0x1860 PUSH2 0x2671 JUMP JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x798 DUP2 DUP3 DUP6 DUP2 PUSH2 0x187A JUMPI PUSH2 0x187A PUSH2 0x2671 JUMP JUMPDEST DIV PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x188F PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x2687 JUMP JUMPDEST PUSH2 0x798 SWAP1 DUP5 DUP5 AND PUSH2 0x25AA JUMP JUMPDEST PUSH2 0x18A5 DUP3 DUP3 PUSH2 0x1F39 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB LT ISZERO PUSH2 0x1917 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230566F7465733A20746F74616C20737570706C79207269736B73206F PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x766572666C6F77696E6720766F746573 PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0xFFE PUSH1 0xC PUSH2 0x2000 DUP4 PUSH2 0x200C JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1947 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x661 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x19D5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1982 SWAP1 PUSH2 0x2181 DUP6 PUSH2 0x200C JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x19CA SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x661 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x1A0B SWAP1 PUSH2 0x2000 DUP6 PUSH2 0x200C JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDEC2BACDD2F05B59DE34DA9B523DFF8BE42E5E38E818C82FDB0BAE774387A724 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A53 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1A6F DUP4 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1AD8 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B55 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1B5C JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B79 JUMPI PUSH2 0x1B79 PUSH2 0x26A9 JUMP JUMPDEST SUB PUSH2 0x1B81 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B95 JUMPI PUSH2 0x1B95 PUSH2 0x26A9 JUMP JUMPDEST SUB PUSH2 0x1BE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1BF6 JUMPI PUSH2 0x1BF6 PUSH2 0x26A9 JUMP JUMPDEST SUB PUSH2 0x1C43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1C57 JUMPI PUSH2 0x1C57 PUSH2 0x26A9 JUMP JUMPDEST SUB PUSH2 0x875 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP6 DUP5 AND DUP4 MSTORE SWAP2 KECCAK256 SLOAD PUSH2 0x661 SWAP3 SWAP2 DUP3 AND SWAP2 AND DUP4 PUSH2 0x1925 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x568 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1D02 DUP4 PUSH1 0x2 PUSH2 0x26BF JUMP JUMPDEST PUSH2 0x1D0D SWAP1 PUSH1 0x2 PUSH2 0x25AA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D25 JUMPI PUSH2 0x1D25 PUSH2 0x25BD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1D4F JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1D6A JUMPI PUSH2 0x1D6A PUSH2 0x25D3 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1D99 JUMPI PUSH2 0x1D99 PUSH2 0x25D3 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1DBD DUP5 PUSH1 0x2 PUSH2 0x26BF JUMP JUMPDEST PUSH2 0x1DC8 SWAP1 PUSH1 0x1 PUSH2 0x25AA JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1E40 JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1DFC JUMPI PUSH2 0x1DFC PUSH2 0x25D3 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E12 JUMPI PUSH2 0x1E12 PUSH2 0x25D3 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1E39 DUP2 PUSH2 0x26D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DCB JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 SWAP1 SHR ISZERO PUSH2 0x1EA4 JUMPI PUSH1 0x80 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x40 DUP4 SWAP1 SHR ISZERO PUSH2 0x1EB6 JUMPI PUSH1 0x40 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x20 DUP4 SWAP1 SHR ISZERO PUSH2 0x1EC8 JUMPI PUSH1 0x20 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x10 DUP4 SWAP1 SHR ISZERO PUSH2 0x1EDA JUMPI PUSH1 0x10 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x8 DUP4 SWAP1 SHR ISZERO PUSH2 0x1EEC JUMPI PUSH1 0x8 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x4 DUP4 SWAP1 SHR ISZERO PUSH2 0x1EFE JUMPI PUSH1 0x4 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x2 DUP4 SWAP1 SHR ISZERO PUSH2 0x1F10 JUMPI PUSH1 0x2 SWAP3 DUP4 SHR SWAP3 ADD JUMPDEST PUSH1 0x1 DUP4 SWAP1 SHR ISZERO PUSH2 0x568 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x1F32 JUMPI DUP2 PUSH2 0x798 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1FA1 SWAP2 SWAP1 PUSH2 0x25AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x6F4 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1734 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x798 DUP3 DUP5 PUSH2 0x25AA JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 DUP2 ISZERO PUSH2 0x2059 JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP3 ADD PUSH1 0x0 NOT ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP1 SLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP3 MSTORE PUSH5 0x100000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x206E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP4 POP PUSH2 0x208E DUP5 DUP7 DUP9 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x20B8 JUMPI POP PUSH2 0x20A3 PUSH2 0x9D3 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH4 0xFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x20FD JUMPI PUSH2 0x20C6 DUP4 PUSH2 0x21B5 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP4 ADD PUSH1 0x0 NOT ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH5 0x100000000 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x2177 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2121 PUSH2 0x2114 PUSH2 0x9D3 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND PUSH2 0x153C JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2135 DUP7 PUSH2 0x21B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD SWAP5 SWAP1 SWAP4 ADD MLOAD SWAP1 SWAP2 AND PUSH5 0x100000000 MUL PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 ADD SSTORE JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x798 DUP3 DUP5 PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x568 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP3 GT ISZERO PUSH2 0x15A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665436173743A2076616C756520646F65736E27742066697420696E2032 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x32342062697473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2263 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x224B JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2284 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2248 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x798 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x226C JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x22C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22E3 DUP4 PUSH2 0x22AB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x230F DUP5 PUSH2 0x22AB JUMP JUMPDEST SWAP3 POP PUSH2 0x231D PUSH1 0x20 DUP6 ADD PUSH2 0x22AB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x233F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2369 PUSH1 0x20 DUP5 ADD PUSH2 0x22AB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x798 DUP3 PUSH2 0x22AB JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0x23AD PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0x226C JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x23BF DUP2 DUP11 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2411 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x23F5 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x22C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x244D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2456 DUP8 PUSH2 0x22AB JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2472 PUSH1 0x60 DUP9 ADD PUSH2 0x2423 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x24A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24B0 DUP9 PUSH2 0x22AB JUMP JUMPDEST SWAP7 POP PUSH2 0x24BE PUSH1 0x20 DUP10 ADD PUSH2 0x22AB JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH2 0x24DA PUSH1 0x80 DUP10 ADD PUSH2 0x2423 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2512 DUP4 PUSH2 0x22AB JUMP JUMPDEST SWAP2 POP PUSH2 0x2369 PUSH1 0x20 DUP5 ADD PUSH2 0x22AB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x253C DUP4 PUSH2 0x22AB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2574 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x172E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x568 JUMPI PUSH2 0x568 PUSH2 0x2594 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x568 JUMPI PUSH2 0x568 PUSH2 0x2594 JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x2634 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2248 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x2665 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2248 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x26A4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x568 JUMPI PUSH2 0x568 PUSH2 0x2594 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x26E5 JUMPI PUSH2 0x26E5 PUSH2 0x2594 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 ADDMOD PUSH10 0x7CC28008A41EC14E7B37 ORIGIN JUMPI DUP8 0xD5 SMOD STOP 0xBA PUSH5 0xC484F75A68 0xA8 SWAP16 0xBB 0xD1 0xA5 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"411:905:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:26;;463:22;445:41;;433:2;418:18;2732:202:0;;;;;;;;2158:98:6;;;:::i;:::-;;;;;;;:::i;4444:197::-;;;;;;:::i;:::-;;:::i;3255:106::-;3342:12;;3255:106;;;1836:25:26;;;1824:2;1809:18;3255:106:6;1690:177:26;5203:256:6;;;;;;:::i;:::-;;:::i;4504:129:0:-;;;;;;:::i;:::-;4578:7;4604:12;;;:6;:12;;;;;:22;;;;4504:129;4929:145;;;;;;:::i;:::-;;:::i;:::-;;3104:91:6;;;3186:2;2973:36:26;;2961:2;2946:18;3104:91:6;2831:184:26;2867:113:8;;;:::i;6038:214:0:-;;;;;;:::i;:::-;;:::i;5854:234:6:-;;;;;;:::i;:::-;;:::i;3466:248:9:-;;;;;;:::i;:::-;;:::i;707:99:25:-;;;;;;:::i;:::-;;:::i;2047:254:9:-;;;:::i;2838:126::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2938:19:9;;;2912:7;2938:19;;;:10;:19;;;;;;;;2838:126;;;;-1:-1:-1;;;;;3375:32:26;;;3357:51;;3345:2;3330:18;2838:126:9;3211:203:26;6275:112:9;;;;;;:::i;:::-;;:::i;2601:149::-;;;;;;:::i;:::-;;:::i;:::-;;;3593:10:26;3581:23;;;3563:42;;3551:2;3536:18;2601:149:9;3419:192:26;:125:6;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:6;3493:7;3519:18;;;;;;;;;;;;3419:125;2617:126:8;;;;;;:::i;:::-;;:::i;5021:633:19:-;;;:::i;:::-;;;;;;;;;;;;;:::i;3976:239:9:-;;;;;;:::i;:::-;;:::i;3021:145:0:-;;;;;;:::i;:::-;;:::i;1817:118:9:-;;;:::i;:::-;;;5239:14:26;5227:27;;;5209:46;;5197:2;5182:18;1817:118:9;5065:196:26;2369:102:6;;;:::i;3043:243:9:-;;;;;;:::i;:::-;;:::i;2153:49:0:-;;2198:4;2153:49;;6575:427:6;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;6464:574:9:-;;;;;;:::i;:::-;;:::i;1930:626:8:-;;;;;;:::i;:::-;;:::i;481:62:25:-;;519:24;481:62;;5354:147:0;;;;;;:::i;:::-;;:::i;3987:149:6:-;;;;;;:::i;:::-;;:::i;2378:148:9:-;;;;;;:::i;:::-;;:::i;:::-;;;;7418:13:26;;7433:10;7414:30;7396:49;;7505:4;7493:17;;;7487:24;-1:-1:-1;;;;;7483:50:26;7461:20;;;7454:80;;;;7369:18;2378:148:9;7194:346:26;2732:202:0;2817:4;-1:-1:-1;;;;;;2840:47:0;;-1:-1:-1;;;2840:47:0;;:87;;-1:-1:-1;;;;;;;;;;937:40:20;;;2891:36:0;2833:94;2732:202;-1:-1:-1;;2732:202:0:o;2158:98:6:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:13;4581:32:6;719:10:13;4597:7:6;4606:6;4581:8;:32::i;:::-;-1:-1:-1;4630:4:6;;4444:197;-1:-1:-1;;;4444:197:6:o;5203:256::-;5300:4;719:10:13;5356:38:6;5372:4;719:10:13;5387:6:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:6;;5203:256;-1:-1:-1;;;;5203:256:6:o;4929:145:0:-;4578:7;4604:12;;;:6;:12;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;2867:113:8:-;2927:7;2953:20;:18;:20::i;:::-;2946:27;;2867:113;:::o;6038:214:0:-;-1:-1:-1;;;;;6133:23:0;;719:10:13;6133:23:0;6125:83;;;;-1:-1:-1;;;6125:83:0;;8132:2:26;6125:83:0;;;8114:21:26;8171:2;8151:18;;;8144:30;8210:34;8190:18;;;8183:62;-1:-1:-1;;;8261:18:26;;;8254:45;8316:19;;6125:83:0;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;5854:234:6:-;5942:4;719:10:13;5996:64:6;719:10:13;6012:7:6;6049:10;6021:25;719:10:13;6012:7:6;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;3466:248:9:-;3562:7;3601;:5;:7::i;:::-;3589:19;;:9;:19;3581:57;;;;-1:-1:-1;;;3581:57:9;;8810:2:26;3581:57:9;;;8792:21:26;8849:2;8829:18;;;8822:30;-1:-1:-1;;;8868:18:26;;;8861:55;8933:18;;3581:57:9;8608:349:26;3581:57:9;-1:-1:-1;;;;;3674:21:9;;;;;;:12;:21;;;;;3655:52;;3697:9;3655:18;:52::i;:::-;3648:59;3466:248;-1:-1:-1;;;3466:248:9:o;707:99:25:-;519:24;2631:16:0;2642:4;2631:10;:16::i;:::-;784:17:25::1;790:2;794:6;784:5;:17::i;2047:254:9:-:0;2107:13;2200:12;2189:7;:5;:7::i;:::-;:23;;;2181:65;;;;-1:-1:-1;;;2181:65:9;;9164:2:26;2181:65:9;;;9146:21:26;9203:2;9183:18;;;9176:30;9242:31;9222:18;;;9215:59;9291:18;;2181:65:9;8962:353:26;2181:65:9;-1:-1:-1;2256:38:9;;;;;;;;;;;;;;;;;;2047:254::o;6275:112::-;6346:34;719:10:13;6370:9:9;6346;:34::i;:::-;6275:112;:::o;2601:149::-;-1:-1:-1;;;;;2714:21:9;;2671:6;2714:21;;;:12;:21;;;;;:28;2696:47;;:17;:47::i;2617:126:8:-;-1:-1:-1;;;;;2712:14:8;;2686:7;2712:14;;;:7;:14;;;;;918::14;2712:24:8;827:112:14;5021:633:19;5136:13;5163:18;;5136:13;;;5163:18;5427:41;:5;5454:13;5427:26;:41::i;:::-;5482:47;:8;5512:16;5482:29;:47::i;:::-;5621:16;;;5605:1;5621:16;;;;;;;;;-1:-1:-1;;;5376:271:19;;;-1:-1:-1;5376:271:19;;-1:-1:-1;5543:13:19;;-1:-1:-1;5578:4:19;;-1:-1:-1;5605:1:19;-1:-1:-1;5621:16:19;-1:-1:-1;5376:271:19;-1:-1:-1;5021:633:19:o;3976:239:9:-;4061:7;4100;:5;:7::i;:::-;4088:19;;:9;:19;4080:57;;;;-1:-1:-1;;;4080:57:9;;8810:2:26;4080:57:9;;;8792:21:26;8849:2;8829:18;;;8822:30;-1:-1:-1;;;8868:18:26;;;8861:55;8933:18;;4080:57:9;8608:349:26;4080:57:9;4154:54;4173:23;4198:9;4154:18;:54::i;3021:145:0:-;3107:4;3130:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3130:29:0;;;;;;;;;;;;;;;3021:145::o;1817:118:9:-;1872:6;1897:31;1915:12;1897:17;:31::i;2369:102:6:-;2425:13;2457:7;2450:14;;;;;:::i;3043:243:9:-;-1:-1:-1;;;;;3149:21:9;;3116:7;3149:21;;;:12;:21;;;;;:28;3218:8;;:51;;-1:-1:-1;;;;;3233:21:9;;;;;;:12;:21;;;;;:30;;-1:-1:-1;;3255:7:9;;;3233:30;;;;;;:::i;:::-;;;;;;;;;;:36;;;;-1:-1:-1;;;;;3233:36:9;3218:51;;;3229:1;3218:51;-1:-1:-1;;;;;3211:58:9;;3043:243;-1:-1:-1;;;3043:243:9:o;6575:427:6:-;6668:4;719:10:13;6668:4:6;6749:25;719:10:13;6766:7:6;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:6;;9786:2:26;6784:85:6;;;9768:21:26;9825:2;9805:18;;;9798:30;9864:34;9844:18;;;9837:62;-1:-1:-1;;;9915:18:26;;;9908:35;9960:19;;6784:85:6;9584:401:26;6784:85:6;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:13;3873:28:6;719:10:13;3890:2:6;3894:6;3873:9;:28::i;6464:574:9:-;6683:6;6664:15;:25;;6656:67;;;;-1:-1:-1;;;6656:67:9;;10192:2:26;6656:67:9;;;10174:21:26;10231:2;10211:18;;;10204:30;10270:31;10250:18;;;10243:59;10319:18;;6656:67:9;9990:353:26;6656:67:9;6804:58;;;1439:71;6804:58;;;10579:25:26;-1:-1:-1;;;;;10640:32:26;;10620:18;;;10613:60;;;;10689:18;;;10682:34;;;10732:18;;;10725:34;;;6733:14:9;;6750:169;;6777:87;;10551:19:26;;6804:58:9;;;;;;;;;;;;6794:69;;;;;;6777:16;:87::i;:::-;6878:1;6893;6908;6750:13;:169::i;:::-;6733:186;;6946:17;6956:6;6946:9;:17::i;:::-;6937:5;:26;6929:64;;;;-1:-1:-1;;;6929:64:9;;10972:2:26;6929:64:9;;;10954:21:26;11011:2;10991:18;;;10984:30;11050:27;11030:18;;;11023:55;11095:18;;6929:64:9;10770:349:26;6929:64:9;7003:28;7013:6;7021:9;7003;:28::i;:::-;6646:392;6464:574;;;;;;:::o;1930:626:8:-;2165:8;2146:15;:27;;2138:69;;;;-1:-1:-1;;;2138:69:8;;11326:2:26;2138:69:8;;;11308:21:26;11365:2;11345:18;;;11338:30;11404:31;11384:18;;;11377:59;11453:18;;2138:69:8;11124:353:26;2138:69:8;2218:18;1125:95;2278:5;2285:7;2294:5;2301:16;2311:5;2301:9;:16::i;:::-;2249:79;;;;;;11769:25:26;;;;-1:-1:-1;;;;;11868:15:26;;;11848:18;;;11841:43;11920:15;;;;11900:18;;;11893:43;11952:18;;;11945:34;11995:19;;;11988:35;12039:19;;;12032:35;;;11741:19;;2249:79:8;;;;;;;;;;;;2239:90;;;;;;2218:111;;2340:12;2355:28;2372:10;2355:16;:28::i;:::-;2340:43;;2394:14;2411:28;2425:4;2431:1;2434;2437;2411:13;:28::i;:::-;2394:45;;2467:5;-1:-1:-1;;;;;2457:15:8;:6;-1:-1:-1;;;;;2457:15:8;;2449:58;;;;-1:-1:-1;;;2449:58:8;;12280:2:26;2449:58:8;;;12262:21:26;12319:2;12299:18;;;12292:30;12358:32;12338:18;;;12331:60;12408:18;;2449:58:8;12078:354:26;2449:58:8;2518:31;2527:5;2534:7;2543:5;2518:8;:31::i;:::-;2128:428;;;1930:626;;;;;;;:::o;5354:147:0:-;4578:7;4604:12;;;:6;:12;;;;;:22;;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;3987:149:6:-:0;-1:-1:-1;;;;;4102:18:6;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;2378:148:9:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;2493:21:9;;;;;;:12;:21;;;;;:26;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2486:33;;;;;;;;;2493:26;;2486:33;;;;;;;;;-1:-1:-1;;;;;2486:33:9;;;;;;;;;2378:148;-1:-1:-1;;;2378:148:9:o;10457:340:6:-;-1:-1:-1;;;;;10558:19:6;;10550:68;;;;-1:-1:-1;;;10550:68:6;;12639:2:26;10550:68:6;;;12621:21:26;12678:2;12658:18;;;12651:30;12717:34;12697:18;;;12690:62;-1:-1:-1;;;12768:18:26;;;12761:34;12812:19;;10550:68:6;12437:400:26;10550:68:6;-1:-1:-1;;;;;10636:21:6;;10628:68;;;;-1:-1:-1;;;10628:68:6;;13044:2:26;10628:68:6;;;13026:21:26;13083:2;13063:18;;;13056:30;13122:34;13102:18;;;13095:62;-1:-1:-1;;;13173:18:26;;;13166:32;13215:19;;10628:68:6;12842:398:26;10628:68:6;-1:-1:-1;;;;;10707:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1836:25:26;;;10758:32:6;;1809:18:26;10758:32:6;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:6;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:6;;13447:2:26;11297:68:6;;;13429:21:26;13486:2;13466:18;;;13459:30;13525:31;13505:18;;;13498:59;13574:18;;11297:68:6;13245:353:26;11297:68:6;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:6;;7544:68;;;;-1:-1:-1;;;7544:68:6;;13805:2:26;7544:68:6;;;13787:21:26;13844:2;13824:18;;;13817:30;13883:34;13863:18;;;13856:62;-1:-1:-1;;;13934:18:26;;;13927:35;13979:19;;7544:68:6;13603:401:26;7544:68:6;-1:-1:-1;;;;;7630:16:6;;7622:64;;;;-1:-1:-1;;;7622:64:6;;14211:2:26;7622:64:6;;;14193:21:26;14250:2;14230:18;;;14223:30;14289:34;14269:18;;;14262:62;-1:-1:-1;;;14340:18:26;;;14333:33;14383:19;;7622:64:6;14009:399:26;7622:64:6;-1:-1:-1;;;;;7768:15:6;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:6;;14615:2:26;7793:72:6;;;14597:21:26;14654:2;14634:18;;;14627:30;14693:34;14673:18;;;14666:62;-1:-1:-1;;;14744:18:26;;;14737:36;14790:19;;7793:72:6;14413:402:26;7793:72:6;-1:-1:-1;;;;;7899:15:6;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1836:25:26;;;8114:13:6;;8163:26;;1809:18:26;8163:26:6;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;3460:103:0:-;3526:30;3537:4;719:10:13;3526::0;:30::i;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7708:29:0;;;;;;;;;:36;;-1:-1:-1;;7708:36:0;7740:4;7708:36;;;7790:12;719:10:13;;640:96;7790:12:0;-1:-1:-1;;;;;7763:40:0;7781:7;-1:-1:-1;;;;;7763:40:0;7775:4;7763:40;;;;;;;;;;7587:233;;:::o;3695:262:19:-;3748:7;3779:4;-1:-1:-1;;;;;3788:11:19;3771:28;;:63;;;;;3820:14;3803:13;:31;3771:63;3767:184;;;-1:-1:-1;3857:22:19;;3695:262::o;3767:184::-;3917:23;4054:81;;;1929:95;4054:81;;;16843:25:26;4077:11:19;16884:18:26;;;16877:34;;;;4090:14:19;16927:18:26;;;16920:34;4106:13:19;16970:18:26;;;16963:34;4129:4:19;17013:19:26;;;17006:61;4018:7:19;;16815:19:26;;4054:81:19;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;7991:234:0;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8112:29:0;;;;;;;;;;:37;;-1:-1:-1;;8112:37:0;;;8168:40;719:10:13;;8112:12:0;;8168:40;;8144:5;8168:40;7991:234;;:::o;4299:1895:9:-;5510:12;;4396:7;;;5510:12;5603:1;5594:10;;5590:242;;;5620:11;5643:17;5653:6;5643:9;:17::i;:::-;5634:26;;:6;:26;:::i;:::-;10626:25;10686:21;;;10752:4;10739:18;;5620:40;;-1:-1:-1;5716:9:9;;10735:28;;5678:35;;;:47;5674:148;;;5752:3;5745:10;;5674:148;;;5800:7;:3;5806:1;5800:7;:::i;:::-;5794:13;;5674:148;5606:226;5590:242;5855:4;5849:3;:10;5842:242;;;5875:11;5889:23;5902:3;5907:4;5889:12;:23::i;:::-;10626:25;10686:21;;;10752:4;10739:18;;5875:37;;-1:-1:-1;5968:9:9;;10735:28;;5930:35;;;:47;5926:148;;;6004:3;5997:10;;5926:148;;;6052:7;:3;6058:1;6052:7;:::i;:::-;6046:13;;5926:148;5861:223;5842:242;;;6125:9;;:52;;10626:25;10686:21;;;10752:4;10739:18;;10735:28;;-1:-1:-1;;10735:28:9;6141:36;;;;-1:-1:-1;;;;;6141:36:9;6125:52;;;6137:1;6125:52;-1:-1:-1;;;;;6118:59:9;;4299:1895;-1:-1:-1;;;;;;4299:1895:9:o;1052:124:25:-;1148:23;1160:2;1164:6;1148:11;:23::i;8431:380:9:-;-1:-1:-1;;;;;2938:19:9;;;8515:23;2938:19;;;:10;:19;;;;;;;;;;3519:18:6;;;;;;;8628:21:9;;;;:33;;;-1:-1:-1;;;;;;8628:33:9;;;;;;;8677:54;;2938:19;;;;;3519:18:6;;8628:33:9;;2938:19;;;8677:54;;8515:23;8677:54;8742:62;8759:15;8776:9;8787:16;8742;:62::i;15264:187:23:-;15320:6;15355:16;15346:25;;;15338:76;;;;-1:-1:-1;;;15338:76:23;;15155:2:26;15338:76:23;;;15137:21:26;15194:2;15174:18;;;15167:30;15233:34;15213:18;;;15206:62;-1:-1:-1;;;15284:18:26;;;15277:36;15330:19;;15338:76:23;14953:402:26;15338:76:23;-1:-1:-1;15438:5:23;15264:187::o;3367:268:15:-;3461:13;1371:66;3490:47;;3486:143;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3486:143;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14240:187:23;14296:6;14331:16;14322:25;;;14314:76;;;;-1:-1:-1;;;14314:76:23;;15562:2:26;14314:76:23;;;15544:21:26;15601:2;15581:18;;;15574:30;15640:34;15620:18;;;15613:62;-1:-1:-1;;;15691:18:26;;;15684:36;15737:19;;14314:76:23;15360:402:26;4768:165:19;4845:7;4871:55;4893:20;:18;:20::i;:::-;4915:10;8536:4:18;8530:11;-1:-1:-1;;;8554:23:18;;8606:4;8597:14;;8590:39;;;;8658:4;8649:14;;8642:34;8712:4;8697:20;;;8336:397;6598:232;6683:7;6703:17;6722:18;6744:25;6755:4;6761:1;6764;6767;6744:10;:25::i;:::-;6702:67;;;;6779:18;6791:5;6779:11;:18::i;:::-;-1:-1:-1;6814:9:18;6598:232;-1:-1:-1;;;;;6598:232:18:o;3111:203:8:-;-1:-1:-1;;;;;3231:14:8;;3171:15;3231:14;;;:7;:14;;;;;918::14;;1050:1;1032:19;;;;918:14;3290:17:8;3188:126;3111:203;;;:::o;876:172:25:-;1000:43;1026:4;1032:2;1036:6;1000:25;:43::i;3844:479:0:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:0;;;;;;;;;;-1:-1:-1;;;3970:336:0;;;;;;;:::i;6530:1642:22:-;6578:7;6601:1;6606;6601:6;6597:45;;-1:-1:-1;6630:1:22;;6530:1642;-1:-1:-1;6530:1642:22:o;6597:45::-;7321:14;7355:1;7344:7;7349:1;7344:4;:7::i;:::-;:12;;7338:1;:19;;7321:36;;7816:1;7805:6;7801:1;:10;;;;;:::i;:::-;;7792:6;:19;7791:26;;7782:35;;7865:1;7854:6;7850:1;:10;;;;;:::i;:::-;;7841:6;:19;7840:26;;7831:35;;7914:1;7903:6;7899:1;:10;;;;;:::i;:::-;;7890:6;:19;7889:26;;7880:35;;7963:1;7952:6;7948:1;:10;;;;;:::i;:::-;;7939:6;:19;7938:26;;7929:35;;8012:1;8001:6;7997:1;:10;;;;;:::i;:::-;;7988:6;:19;7987:26;;7978:35;;8061:1;8050:6;8046:1;:10;;;;;:::i;:::-;;8037:6;:19;8036:26;;8027:35;;8110:1;8099:6;8095:1;:10;;;;;:::i;:::-;;8086:6;:19;8085:26;;8076:35;;8132:23;8136:6;8148;8144:1;:10;;;;;:::i;:::-;;8132:3;:23::i;805:153::-;867:7;940:11;950:1;941:5;;;940:11;:::i;:::-;930:21;;931:5;;;930:21;:::i;7332:285:9:-;7416:28;7428:7;7437:6;7416:11;:28::i;:::-;3342:12:6;;-1:-1:-1;;;;;;7462:29:9;7454:90;;;;-1:-1:-1;;;7454:90:9;;17634:2:26;7454:90:9;;;17616:21:26;17673:2;17653:18;;;17646:30;17712:34;17692:18;;;17685:62;-1:-1:-1;;;17763:18:26;;;17756:46;17819:19;;7454:90:9;17432:412:26;7454:90:9;7555:55;7572:23;7597:4;7603:6;7555:16;:55::i;8817:597::-;8914:3;-1:-1:-1;;;;;8907:10:9;:3;-1:-1:-1;;;;;8907:10:9;;;:24;;;;;8930:1;8921:6;:10;8907:24;8903:505;;;-1:-1:-1;;;;;8951:17:9;;;8947:221;;-1:-1:-1;;;;;9046:17:9;;8989;9046;;;:12;:17;;;;;8989;;9029:54;;9065:9;9076:6;9029:16;:54::i;:::-;8988:95;;;;9127:3;-1:-1:-1;;;;;9106:47:9;;9132:9;9143;9106:47;;;;;;18023:25:26;;;18079:2;18064:18;;18057:34;18011:2;17996:18;;17849:248;9106:47:9;;;;;;;;8970:198;;8947:221;-1:-1:-1;;;;;9186:17:9;;;9182:216;;-1:-1:-1;;;;;9281:17:9;;9224;9281;;;:12;:17;;;;;9224;;9264:49;;9300:4;9306:6;9264:16;:49::i;:::-;9223:90;;;;9357:3;-1:-1:-1;;;;;9336:47:9;;9362:9;9373;9336:47;;;;;;18023:25:26;;;18079:2;18064:18;;18057:34;18011:2;17996:18;;17849:248;9336:47:9;;;;;;;;9205:193;;8817:597;;;:::o;2059:405:15:-;2118:13;2143:11;2157:16;2168:4;2157:10;:16::i;:::-;2281:14;;;2292:2;2281:14;;;;;;;;;2143:30;;-1:-1:-1;2261:17:15;;2281:14;;;;;;;;;-1:-1:-1;;;2371:16:15;;;-1:-1:-1;2416:4:15;2407:14;;2400:28;;;;-1:-1:-1;2371:16:15;2059:405::o;5009:1456:18:-;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:18;;-1:-1:-1;6123:30:18;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;18329:25:26;;;18402:4;18390:17;;18370:18;;;18363:45;;;;18424:18;;;18417:34;;;18467:18;;;18460:34;;;6276:24:18;;18301:19:26;;6276:24:18;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:18;;-1:-1:-1;;6276:24:18;;;-1:-1:-1;;;;;;;6314:20:18;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;-1:-1:-1;6437:20:18;;-1:-1:-1;5009:1456:18;;;;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:18;;18839:2:26;788:34:18;;;18821:21:26;18878:2;18858:18;;;18851:30;18917:26;18897:18;;;18890:54;18961:18;;788:34:18;18637:348:26;730:345:18;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:18;;19192:2:26;903:41:18;;;19174:21:26;19231:2;19211:18;;;19204:30;19270:33;19250:18;;;19243:61;19321:18;;903:41:18;18990:355:26;839:236:18;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:18;;19552:2:26;1020:44:18;;;19534:21:26;19591:2;19571:18;;;19564:30;19630:34;19610:18;;;19603:62;-1:-1:-1;;;19681:18:26;;;19674:32;19723:19;;1020:44:18;19350:398:26;8036:224:9;-1:-1:-1;;;;;2938:19:9;;;2912:7;2938:19;;;:10;:19;;;;;;;;;;;;;;;8197:56;;2938:19;;;;;8246:6;8197:16;:56::i;2407:149:17:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:17;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:17;;1918:47;;-1:-1:-1;;;1975:6:17;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:17;;;;;;;;;-1:-1:-1;;;2000:6:17;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:17;;;;;;;;-1:-1:-1;2030:9:17;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:17;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:17;;;;;;;;-1:-1:-1;2141:1:17;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:17;;2162:55;;;;-1:-1:-1;;;2162:55:17;;20269:2:26;2162:55:17;;;20251:21:26;;;20288:18;;;20281:30;20347:34;20327:18;;;20320:62;20399:18;;2162:55:17;20067:356:26;8633:983:22;8685:7;;8769:3;8760:12;;;:16;8756:99;;8806:3;8796:13;;;;8827;8756:99;8881:2;8872:11;;;:15;8868:96;;8917:2;8907:12;;;;8937;8868:96;8990:2;8981:11;;;:15;8977:96;;9026:2;9016:12;;;;9046;8977:96;9099:2;9090:11;;;:15;9086:96;;9135:2;9125:12;;;;9155;9086:96;9208:1;9199:10;;;:14;9195:93;;9243:1;9233:11;;;;9262;9195:93;9314:1;9305:10;;;:14;9301:93;;9349:1;9339:11;;;;9368;9301:93;9420:1;9411:10;;;:14;9407:93;;9455:1;9445:11;;;;9474;9407:93;9526:1;9517:10;;;:14;9513:64;;9561:1;9551:11;9603:6;8633:983;-1:-1:-1;;8633:983:22:o;588:104::-;646:7;676:1;672;:5;:13;;684:1;672:13;;;-1:-1:-1;680:1:22;;588:104;-1:-1:-1;588:104:22:o;8520:535:6:-;-1:-1:-1;;;;;8603:21:6;;8595:65;;;;-1:-1:-1;;;8595:65:6;;20630:2:26;8595:65:6;;;20612:21:26;20669:2;20649:18;;;20642:30;20708:33;20688:18;;;20681:61;20759:18;;8595:65:6;20428:355:26;8595:65:6;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:6;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1836:25:26;;;8952:37:6;;1809:18:26;8952:37:6;;;;;;;9000:48;9028:1;9032:7;9041:6;9000:19;:48::i;10194:96:9:-;10252:7;10278:5;10282:1;10278;:5;:::i;9420:768::-;9652:12;;9590:17;;;;;9727:8;;:59;;10626:25;10686:21;;;10752:4;10739:18;;10735:28;;-1:-1:-1;;10735:28:9;9727:59;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9727:59:9;;;;;;;;9738:16;;;;;;;;;-1:-1:-1;9738:16:9;;;;;;;9727:59;9699:87;;9813:7;:13;;;-1:-1:-1;;;;;9801:25:9;;;9852:20;9855:9;9866:5;9852:2;:20;;:::i;:::-;9840:32;;9897:1;9891:3;:7;:39;;;;;9923:7;:5;:7::i;:::-;9902:28;;:7;:17;;;:28;;;9891:39;9887:285;;;9988:29;10007:9;9988:18;:29::i;:::-;10626:25;10686:21;;;10752:4;10739:18;;10735:28;;-1:-1:-1;;10735:28:9;9950:67;;-1:-1:-1;;;;;9950:67:9;;;;;;;;;;;;;;;;9887:285;;;10056:5;10067:89;;;;;;;;10090:26;10108:7;:5;:7::i;:::-;10090:26;;:17;:26::i;:::-;10067:89;;;;;;10125:29;10144:9;10125:18;:29::i;:::-;-1:-1:-1;;;;;10067:89:9;;;;;;10056:101;;;;;;;-1:-1:-1;10056:101:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9887:285;9675:507;9628:560;9420:768;;;;;;:::o;10296:101::-;10359:7;10385:5;10389:1;10385;:5;:::i;2536:245:15:-;2597:7;2669:4;2633:40;;2696:2;2687:11;;2683:69;;;2721:20;;-1:-1:-1;;;2721:20:15;;;;;;;;;;;2836:192:23;2893:7;-1:-1:-1;;;;;2920:26:23;;;2912:78;;;;-1:-1:-1;;;2912:78:23;;20990:2:26;2912:78:23;;;20972:21:26;21029:2;21009:18;;;21002:30;21068:34;21048:18;;;21041:62;-1:-1:-1;;;21119:18:26;;;21112:37;21166:19;;2912:78:23;20788:403:26;14:286;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:26;;209:43;;199:71;;266:1;263;256:12;497:250;582:1;592:113;606:6;603:1;600:13;592:113;;;682:11;;;676:18;663:11;;;656:39;628:2;621:10;592:113;;;-1:-1:-1;;739:1:26;721:16;;714:27;497:250::o;752:271::-;794:3;832:5;826:12;859:6;854:3;847:19;875:76;944:6;937:4;932:3;928:14;921:4;914:5;910:16;875:76;:::i;:::-;1005:2;984:15;-1:-1:-1;;980:29:26;971:39;;;;1012:4;967:50;;752:271;-1:-1:-1;;752:271:26:o;1028:220::-;1177:2;1166:9;1159:21;1140:4;1197:45;1238:2;1227:9;1223:18;1215:6;1197:45;:::i;1253:173::-;1321:20;;-1:-1:-1;;;;;1370:31:26;;1360:42;;1350:70;;1416:1;1413;1406:12;1350:70;1253:173;;;:::o;1431:254::-;1499:6;1507;1560:2;1548:9;1539:7;1535:23;1531:32;1528:52;;;1576:1;1573;1566:12;1528:52;1599:29;1618:9;1599:29;:::i;:::-;1589:39;1675:2;1660:18;;;;1647:32;;-1:-1:-1;;;1431:254:26:o;1872:328::-;1949:6;1957;1965;2018:2;2006:9;1997:7;1993:23;1989:32;1986:52;;;2034:1;2031;2024:12;1986:52;2057:29;2076:9;2057:29;:::i;:::-;2047:39;;2105:38;2139:2;2128:9;2124:18;2105:38;:::i;:::-;2095:48;;2190:2;2179:9;2175:18;2162:32;2152:42;;1872:328;;;;;:::o;2205:180::-;2264:6;2317:2;2305:9;2296:7;2292:23;2288:32;2285:52;;;2333:1;2330;2323:12;2285:52;-1:-1:-1;2356:23:26;;2205:180;-1:-1:-1;2205:180:26:o;2572:254::-;2640:6;2648;2701:2;2689:9;2680:7;2676:23;2672:32;2669:52;;;2717:1;2714;2707:12;2669:52;2753:9;2740:23;2730:33;;2782:38;2816:2;2805:9;2801:18;2782:38;:::i;:::-;2772:48;;2572:254;;;;;:::o;3020:186::-;3079:6;3132:2;3120:9;3111:7;3107:23;3103:32;3100:52;;;3148:1;3145;3138:12;3100:52;3171:29;3190:9;3171:29;:::i;3616:1259::-;4022:3;4017;4013:13;4005:6;4001:26;3990:9;3983:45;3964:4;4047:2;4085:3;4080:2;4069:9;4065:18;4058:31;4112:46;4153:3;4142:9;4138:19;4130:6;4112:46;:::i;:::-;4206:9;4198:6;4194:22;4189:2;4178:9;4174:18;4167:50;4240:33;4266:6;4258;4240:33;:::i;:::-;4304:2;4289:18;;4282:34;;;-1:-1:-1;;;;;4353:32:26;;4347:3;4332:19;;4325:61;4373:3;4402:19;;4395:35;;;4467:22;;;4461:3;4446:19;;4439:51;4539:13;;4561:22;;;4637:15;;;;-1:-1:-1;4599:15:26;;;;-1:-1:-1;4680:169:26;4694:6;4691:1;4688:13;4680:169;;;4755:13;;4743:26;;4824:15;;;;4789:12;;;;4716:1;4709:9;4680:169;;;-1:-1:-1;4866:3:26;;3616:1259;-1:-1:-1;;;;;;;;;;;;3616:1259:26:o;5266:156::-;5332:20;;5392:4;5381:16;;5371:27;;5361:55;;5412:1;5409;5402:12;5427:531;5529:6;5537;5545;5553;5561;5569;5622:3;5610:9;5601:7;5597:23;5593:33;5590:53;;;5639:1;5636;5629:12;5590:53;5662:29;5681:9;5662:29;:::i;:::-;5652:39;;5738:2;5727:9;5723:18;5710:32;5700:42;;5789:2;5778:9;5774:18;5761:32;5751:42;;5812:36;5844:2;5833:9;5829:18;5812:36;:::i;:::-;5802:46;;5895:3;5884:9;5880:19;5867:33;5857:43;;5947:3;5936:9;5932:19;5919:33;5909:43;;5427:531;;;;;;;;:::o;5963:606::-;6074:6;6082;6090;6098;6106;6114;6122;6175:3;6163:9;6154:7;6150:23;6146:33;6143:53;;;6192:1;6189;6182:12;6143:53;6215:29;6234:9;6215:29;:::i;:::-;6205:39;;6263:38;6297:2;6286:9;6282:18;6263:38;:::i;:::-;6253:48;;6348:2;6337:9;6333:18;6320:32;6310:42;;6399:2;6388:9;6384:18;6371:32;6361:42;;6422:37;6454:3;6443:9;6439:19;6422:37;:::i;:::-;6412:47;;6506:3;6495:9;6491:19;6478:33;6468:43;;6558:3;6547:9;6543:19;6530:33;6520:43;;5963:606;;;;;;;;;;:::o;6574:260::-;6642:6;6650;6703:2;6691:9;6682:7;6678:23;6674:32;6671:52;;;6719:1;6716;6709:12;6671:52;6742:29;6761:9;6742:29;:::i;:::-;6732:39;;6790:38;6824:2;6813:9;6809:18;6790:38;:::i;6839:350::-;6906:6;6914;6967:2;6955:9;6946:7;6942:23;6938:32;6935:52;;;6983:1;6980;6973:12;6935:52;7006:29;7025:9;7006:29;:::i;:::-;6996:39;;7085:2;7074:9;7070:18;7057:32;7129:10;7122:5;7118:22;7111:5;7108:33;7098:61;;7155:1;7152;7145:12;7098:61;7178:5;7168:15;;;6839:350;;;;;:::o;7545:380::-;7624:1;7620:12;;;;7667;;;7688:61;;7742:4;7734:6;7730:17;7720:27;;7688:61;7795:2;7787:6;7784:14;7764:18;7761:38;7758:161;;7841:10;7836:3;7832:20;7829:1;7822:31;7876:4;7873:1;7866:15;7904:4;7901:1;7894:15;8346:127;8407:10;8402:3;8398:20;8395:1;8388:31;8438:4;8435:1;8428:15;8462:4;8459:1;8452:15;8478:125;8543:9;;;8564:10;;;8561:36;;;8577:18;;:::i;9320:127::-;9381:10;9376:3;9372:20;9369:1;9362:31;9412:4;9409:1;9402:15;9436:4;9433:1;9426:15;9452:127;9513:10;9508:3;9504:20;9501:1;9494:31;9544:4;9541:1;9534:15;9568:4;9565:1;9558:15;14820:128;14887:9;;;14908:11;;;14905:37;;;14922:18;;:::i;15767:812::-;16178:25;16173:3;16166:38;16148:3;16233:6;16227:13;16249:75;16317:6;16312:2;16307:3;16303:12;16296:4;16288:6;16284:17;16249:75;:::i;:::-;-1:-1:-1;;;16383:2:26;16343:16;;;16375:11;;;16368:40;16433:13;;16455:76;16433:13;16517:2;16509:11;;16502:4;16490:17;;16455:76;:::i;:::-;16551:17;16570:2;16547:26;;15767:812;-1:-1:-1;;;;15767:812:26:o;17078:127::-;17139:10;17134:3;17130:20;17127:1;17120:31;17170:4;17167:1;17160:15;17194:4;17191:1;17184:15;17210:217;17250:1;17276;17266:132;;17320:10;17315:3;17311:20;17308:1;17301:31;17355:4;17352:1;17345:15;17383:4;17380:1;17373:15;17266:132;-1:-1:-1;17412:9:26;;17210:217::o;18505:127::-;18566:10;18561:3;18557:20;18554:1;18547:31;18597:4;18594:1;18587:15;18621:4;18618:1;18611:15;19753:168;19826:9;;;19857;;19874:15;;;19868:22;;19854:37;19844:71;;19895:18;;:::i;19926:136::-;19965:3;19993:5;19983:39;;20002:18;;:::i;:::-;-1:-1:-1;;;20038:18:26;;19926:136::o"},"methodIdentifiers":{"CLOCK_MODE()":"4bf5d7e9","DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","MINTER_ROLE()":"d5391393","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","checkpoints(address,uint32)":"f1127ed8","clock()":"91ddadf4","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","delegate(address)":"5c19a95c","delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)":"c3cda520","delegates(address)":"587cde1e","eip712Domain()":"84b0196e","getPastTotalSupply(uint256)":"8e539e8c","getPastVotes(address,uint256)":"3a46b1a8","getRoleAdmin(bytes32)":"248a9ca3","getVotes(address)":"9ab24eb0","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","numCheckpoints(address)":"6fcfff45","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLOCK_MODE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"pos\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"votes\",\"type\":\"uint224\"}],\"internalType\":\"struct ERC20Votes.Checkpoint\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clock\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"delegateBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timepoint\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DelegateChanged(address,address,address)\":{\"details\":\"Emitted when an account changes their delegate.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"details\":\"Emitted when a token transfer or delegate change results in changes to a delegate's number of votes.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"CLOCK_MODE()\":{\"details\":\"Description of the clock\"},\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"checkpoints(address,uint32)\":{\"details\":\"Get the `pos`-th checkpoint for `account`.\"},\"clock()\":{\"details\":\"Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting).\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Delegates votes from signer to `delegatee`\"},\"delegates(address)\":{\"details\":\"Get the address `account` is currently delegating to.\"},\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `timepoint`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `timepoint` must be in the past\"},\"getPastVotes(address,uint256)\":{\"details\":\"Retrieve the number of votes for `account` at the end of `timepoint`. Requirements: - `timepoint` must be in the past\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getVotes(address)\":{\"details\":\"Gets the current votes balance for `account`\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"MyToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/governance/utils/IVotes.sol\":{\"keccak256\":\"0x1618ddebe73377660f6da71afcba35d5ac4c4600918b3a381d9c6f37eba613eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666c8d7c62478b55e082f1835275b7acfc1595491998df6d67183ff2c70eab96\",\"dweb:/ipfs/QmVXmnXfxNaLhoX283dqyKJ8DJbF5thUd9sMuRoFpNMwr7\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"@openzeppelin/contracts/interfaces/IERC5805.sol\":{\"keccak256\":\"0xfc12b717f6a2cd0d67adc8700097d4464d37f18ce933d4fc9c948ab6aec35e80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82386e69ebe902a2edfd4f8a5ecbeaeb2e00f6cc6481a973729e974373fb492e\",\"dweb:/ipfs/QmSXg4wBMBd83mQvkekT1GsiRX2Qyv5gvrqzv5qJx2M7Kc\"]},\"@openzeppelin/contracts/interfaces/IERC6372.sol\":{\"keccak256\":\"0xcaea9aeda3816ba872358c828f4f01455c22ae48ced49c4c7d72bd74176c09b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16ff22d8df5aee94510ee43d361b6147caef164941a684cedcb75be44f351fe6\",\"dweb:/ipfs/QmaCCwMdHVdPApuEJHLZapSJyA7mp5dAugpma3VUzWGd8E\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0x36c00327e3f9afd929cc2721aaa111ab57eff78a630cc364b279ad576b899295\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5bf927f4c8b71a5809be184c3107b915b0445ab2c4a33208331e5376692eb5a\",\"dweb:/ipfs/QmVXirsCY1sf4kodhbL6w3NWZkeZeaMuQB7M6DBAdZNqFE\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Votes.sol\":{\"keccak256\":\"0x4e560f86662b6f72ab76122fff53317677154f14bac4a80dbd46a54172b3abfa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca5c2518d247417cb01164f04eff57b7e87b5346bc03478ada916f26117aa7fd\",\"dweb:/ipfs/QmVgK66XGZCiH9x4mhqejKUTujtu68DyE6KrYi6MPuaHRJ\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0xbe43b6f1e04b5215939f1a76fa612c275b75948f6e7bf25808fb91e99444a33f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86d672d9a23f3502472f6827af8e8116a6412b28c234dcfcb201413055cb0159\",\"dweb:/ipfs/Qmcts6GvEMHuyikwDHtcTdTW4SVP1k66KpUMRcCovWbLN8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0xca2cf978851aef93e3ee7ead36b070e731cf6d07fc1ad669474d595b8583e0f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f6ce4d24b40dd3c2c2ce9eb764d903054bb3324b1f06ce2b29c409a3a04f24d\",\"dweb:/ipfs/QmSQw8tqVS6DjXo7PGzh7tEG88cZp7jq4nF66CMHkJzf2N\"]}},\"version\":1}"}}}}}